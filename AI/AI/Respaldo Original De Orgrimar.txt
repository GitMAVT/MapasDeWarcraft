//===========================================================================
// 
// Burning Legion
// 
//   Warcraft III AI script
//   Generated by the Warcraft III World Editor
// 
//===========================================================================

//***************************************************************************
//*
//*  Global Variables
//*
//***************************************************************************

globals
    integer                 attackWave                 = 1
    integer                 nextDelay                  = 0
    integer                 awGold                     = 0
    integer                 awWood                     = 0

    // Conditions
    boolean                 gCond_Attack_Enemy         = false
    boolean                 gCond_Need_Expansion       = false
    boolean                 gCond_Herrerias            = false
    boolean                 gCond_Heroe_temprano       = false
    boolean                 gCond_Si_ya_estamos_avanzados = false
    boolean                 gCond_TotalTowers          = false
    boolean                 gCond_TenemosFelMinions    = false
    boolean                 gCond_TenemosFelGuards     = false
    boolean                 gCond_TenemosNetherDrakes  = false
    boolean                 gCond_TenemosFireMephits   = false
    boolean                 gCond_TenemosDemoness      = false
    boolean                 gCond_TenemosDemoniosEredar = false
    boolean                 gCond_TenemosFelOverlords  = false
    boolean                 gCond_TenemosPitGuards     = false
    boolean                 gCond_HeroeSegundo         = false
    boolean                 gCond_HeroeTercero         = false
    boolean                 gCond_Hachas1              = false
    boolean                 gCond_Armas1               = false
    boolean                 gCond_Armadura1            = false
    boolean                 gCond_CreatureAttack1      = false
    boolean                 gCond_Barricada2           = false
    boolean                 gCond_Barricada3           = false
    boolean                 gCond_Barricada4           = false
    boolean                 gCond_Barricada5           = false
    boolean                 gCond_Barricada6           = false
    boolean                 gCond_Hachas2              = false
    boolean                 gCond_Hachas3              = false
    boolean                 gCond_Hachas4              = false
    boolean                 gCond_Hachas5              = false
    boolean                 gCond_Hachas6              = false
    boolean                 gCond_ActiveExpansionTown  = false
    boolean                 gCond_TenemosArtilugios    = false
    boolean                 gCond_Caparazon1           = false
    boolean                 gCond_Caparazon2           = false
    boolean                 gCond_Caparazon3           = false
    boolean                 gCond_Caparazon4           = false
    boolean                 gCond_Caparazon5           = false
    boolean                 gCond_Caparazon6           = false
    boolean                 gCond_Armadura3            = false
    boolean                 gCond_Armadura2            = false
    boolean                 gCond_Armadura4            = false
    boolean                 gCond_Armadura5            = false
    boolean                 gCond_Armadura6            = false
    boolean                 gCond_Armas2               = false
    boolean                 gCond_Armas3               = false
    boolean                 gCond_Armas4               = false
    boolean                 gCond_Armas5               = false
    boolean                 gCond_Armas6               = false
    boolean                 gCond_CreatureAttack2      = false
    boolean                 gCond_CreatureAttack3      = false
    boolean                 gCond_CreatureAttack4      = false
    boolean                 gCond_CreatureAttack5      = false
    boolean                 gCond_CreatureAttack6      = false
    boolean                 gCond_RebuildMine2         = false
    boolean                 gCond_RebuildMine3         = false
    boolean                 gCond_RebuildMine1         = false
    boolean                 gCond_Need_Exp1            = false
    boolean                 gCond_Need_Exp2            = false
    boolean                 gCond_Exp1_Needs_Hall      = false
    boolean                 gCond_FarmeoGeneralBasico  = false
    boolean                 gCond_FarmeoGeneralMedio   = false
    boolean                 gCond_FarmeoGeneralAvanzado = false
    boolean                 gCond_FarmeoGeneralElite   = false
    boolean                 gCond_FarmeoDeMina         = false
    boolean                 gCond_Attack_Enemy_Final   = false
    boolean                 gCond_TrabajadoresMina1    = false
    boolean                 gCond_TrabajadoresMina2    = false
    boolean                 gCond_TrabajadoresMina3    = false
    boolean                 gCond_PrincipalUpgrade0    = false
    boolean                 gCond_PrincipalUpgrade1    = false
    boolean                 gCond_PrincipalUpgrade2    = false
    boolean                 gCond_ExpansionRequerida   = false
    boolean                 gCond_Workers1             = false
    boolean                 gCond_Workers2             = false
    boolean                 gCond_AtacarAEnemigo       = false
    boolean                 gCond_Farmeo_avanzado      = false
    boolean                 gCond_Farmeo_Mediano       = false
    boolean                 gCond_NeedExpansionRequiere = false
    boolean                 gCond_RushCommand          = false
endglobals

//***************************************************************************
//*
//*  Utility Functions
//*
//***************************************************************************

//===========================================================================
function CheckLastCommand takes boolean pop returns integer
    local integer cmd = GetLastCommand()
    if (pop) then
        call PopLastCommand(  )
    endif
    return cmd
endfunction

//===========================================================================
function CheckLastCommandData takes boolean pop returns integer
    local integer data = GetLastData()
    if (pop) then
        call PopLastCommand(  )
    endif
    return data
endfunction

//===========================================================================
function TotalFoodProduced takes nothing returns integer
    return GetPlayerState(ai_player,PLAYER_STATE_RESOURCE_FOOD_CAP)
endfunction

//===========================================================================
function ExpansionNeeded takes nothing returns boolean
    return take_exp
endfunction

//===========================================================================
function BuildExpansion takes integer hallID, integer mineID returns nothing
    if (HallsCompleted(hallID)) then
        call SetBuildExpa( TownCount(hallID) + 1, mineID )
    endif
endfunction

//===========================================================================
function CurrentAttackWave takes nothing returns integer
    return attackWave
endfunction

//===========================================================================
function ResetAttackUnits takes nothing returns nothing
    set awGold = 0
    set awWood = 0
    call InitAssaultGroup(  )
endfunction

//===========================================================================
function AddAttackUnit takes integer minQty, integer maxQty, integer unitID returns nothing
    // Track attacking gold workers
    if (unitID == 'o000') then
        set awGold = awGold + minQty
    endif

    // Track attacking wood workers
    if (unitID == 'o001') then
        set awWood = awWood + minQty
    endif

    call SetAssaultGroup( minQty, maxQty, unitID )
endfunction

//***************************************************************************
//*
//*  Basic Options
//*
//***************************************************************************

//===========================================================================
function InitOptions takes nothing returns nothing
    call SetCampaignAI(  )
    call SetDefendPlayer( false )
    call SetRandomPaths( false )
    call SetTargetHeroes( true )
    call SetPeonsRepair( true )
    call SetHeroesFlee( true )
    call SetHeroesBuyItems( true )
    call SetUnitsFlee( true )
    call SetGroupsFlee( false )
    call SetWatchMegaTargets( true )
    call SetIgnoreInjured( true )
    call SetHeroesTakeItems( true )
    call SetSlowChopping( false )
    call SetCaptainChanges( true )
    call SetSmartArtillery( true )
endfunction

//***************************************************************************
//*
//*  Conditions
//*
//***************************************************************************

//===========================================================================
// Updates the values of all preset conditions
//===========================================================================
function UpdateConditions takes nothing returns nothing
    set gCond_Attack_Enemy = ( ( FoodUsed(  ) >= 50 ) and ( TownThreatened(  ) == false ) )
    set gCond_Need_Expansion = ( GetMinesOwned(  ) < 2 )
    set gCond_Herrerias = ( ( FoodUsed(  ) > 1 ) and ( GetUnitCount( 'u00T' ) < 2 ) )
    set gCond_Heroe_temprano = ( GetUnitCountDone( 'u00Q' ) == 1 )
    set gCond_Si_ya_estamos_avanzados = ( GetUnitCount( 'u00N' ) != 1 )
    set gCond_TotalTowers = ( GetUnitCount( 'u00P' ) <= 5 )
    set gCond_TenemosFelMinions = ( GetUnitCount( 'o001' ) > 0 )
    set gCond_TenemosFelGuards = ( GetUnitCount( 'n01K' ) > 0 )
    set gCond_TenemosNetherDrakes = ( GetUnitCount( 'n01L' ) > 0 )
    set gCond_TenemosFireMephits = ( GetUnitCount( 'u007' ) > 0 )
    set gCond_TenemosDemoness = ( GetUnitCount( 'o008' ) > 0 )
    set gCond_TenemosDemoniosEredar = ( GetUnitCount( 'n01J' ) > 0 )
    set gCond_TenemosFelOverlords = ( GetUnitCount( 'o002' ) > 0 )
    set gCond_TenemosPitGuards = ( GetUnitCount( 'n01M' ) > 0 )
    set gCond_HeroeSegundo = ( GetUnitCountDone( 'u00L' ) == 1 )
    set gCond_HeroeTercero = ( GetUnitCountDone( 'u00N' ) == 1 )
    set gCond_Hachas1 = ( GetUpgradeLevel( 'Rome' ) < 1 )
    set gCond_Armas1 = ( GetUpgradeLevel( 'Rume' ) < 1 )
    set gCond_Armadura1 = ( GetUpgradeLevel( 'Ruar' ) < 1 )
    set gCond_CreatureAttack1 = ( GetUpgradeLevel( 'Rura' ) < 1 )
    set gCond_Barricada2 = ( GetUpgradeLevel( 'Rosp' ) < 2 )
    set gCond_Barricada3 = ( GetUpgradeLevel( 'Rosp' ) < 3 )
    set gCond_Barricada4 = ( GetUpgradeLevel( 'Rosp' ) < 4 )
    set gCond_Barricada5 = ( GetUpgradeLevel( 'Rosp' ) < 5 )
    set gCond_Barricada6 = ( GetUpgradeLevel( 'Rosp' ) < 6 )
    set gCond_Hachas2 = ( GetUpgradeLevel( 'Rome' ) < 2 )
    set gCond_Hachas3 = ( GetUpgradeLevel( 'Rome' ) < 3 )
    set gCond_Hachas4 = ( GetUpgradeLevel( 'Rome' ) < 4 )
    set gCond_Hachas5 = ( GetUpgradeLevel( 'Rome' ) < 5 )
    set gCond_Hachas6 = ( GetUpgradeLevel( 'Rome' ) < 6 )
    set gCond_ActiveExpansionTown = ( ( TownHasHall( ( TownWithMine(  ) + 1 ) ) == true ) and ( TownHasMine( ( TownWithMine(  ) + 1 ) ) == true ) )
    set gCond_TenemosArtilugios = ( GetUnitCount( 'n00Q' ) > 0 )
    set gCond_Caparazon1 = ( GetUpgradeLevel( 'Rucr' ) < 1 )
    set gCond_Caparazon2 = ( GetUpgradeLevel( 'Rucr' ) < 2 )
    set gCond_Caparazon3 = ( GetUpgradeLevel( 'Rucr' ) < 3 )
    set gCond_Caparazon4 = ( GetUpgradeLevel( 'Rucr' ) < 4 )
    set gCond_Caparazon5 = ( GetUpgradeLevel( 'Rucr' ) < 5 )
    set gCond_Caparazon6 = ( GetUpgradeLevel( 'Rucr' ) < 6 )
    set gCond_Armadura3 = ( GetUpgradeLevel( 'Ruar' ) < 3 )
    set gCond_Armadura2 = ( GetUpgradeLevel( 'Ruar' ) < 2 )
    set gCond_Armadura4 = ( GetUpgradeLevel( 'Ruar' ) < 4 )
    set gCond_Armadura5 = ( GetUpgradeLevel( 'Ruar' ) < 5 )
    set gCond_Armadura6 = ( GetUpgradeLevel( 'Ruar' ) < 6 )
    set gCond_Armas2 = ( GetUpgradeLevel( 'Rume' ) < 2 )
    set gCond_Armas3 = ( GetUpgradeLevel( 'Rume' ) < 3 )
    set gCond_Armas4 = ( GetUpgradeLevel( 'Rume' ) < 4 )
    set gCond_Armas5 = ( GetUpgradeLevel( 'Rume' ) < 5 )
    set gCond_Armas6 = ( GetUpgradeLevel( 'Rume' ) < 6 )
    set gCond_CreatureAttack2 = ( GetUpgradeLevel( 'Rura' ) < 2 )
    set gCond_CreatureAttack3 = ( GetUpgradeLevel( 'Rura' ) < 3 )
    set gCond_CreatureAttack4 = ( GetUpgradeLevel( 'Rura' ) < 4 )
    set gCond_CreatureAttack5 = ( GetUpgradeLevel( 'Rura' ) < 5 )
    set gCond_CreatureAttack6 = ( GetUpgradeLevel( 'Rura' ) < 6 )
    set gCond_RebuildMine2 = ( ( TownHasMine( ( TownWithMine(  ) + 1 ) ) == true ) and ( GetTownUnitCount( 'u00X', ( TownWithMine(  ) + 1 ), false ) == 0 ) )
    set gCond_RebuildMine3 = ( ( TownHasMine( ( TownWithMine(  ) + 2 ) ) == true ) and ( GetTownUnitCount( 'u00X', ( TownWithMine(  ) + 2 ), false ) == 0 ) )
    set gCond_RebuildMine1 = ( ( TownHasMine( ( TownWithMine(  ) + 0 ) ) == true ) and ( GetTownUnitCount( 'u00X', ( TownWithMine(  ) + 0 ), false ) == 0 ) )
    set gCond_Need_Exp1 = ( GetMinesOwned(  ) < 2 )
    set gCond_Need_Exp2 = ( GetMinesOwned(  ) < 3 )
    set gCond_Exp1_Needs_Hall = ( ( TownHasHall( ( TownWithMine(  ) + 1 ) ) == false ) and ( TownHasMine( ( TownWithMine(  ) + 1 ) ) == true ) )
    set gCond_FarmeoGeneralBasico = ( ( ( CreepsOnMap(  ) == true ) and ( TownThreatened(  ) == false ) ) and ( FoodUsed(  ) >= 15 ) )
    set gCond_FarmeoGeneralMedio = ( ( ( CreepsOnMap(  ) == true ) and ( TownThreatened(  ) == false ) ) and ( FoodUsed(  ) >= 40 ) )
    set gCond_FarmeoGeneralAvanzado = ( ( ( CreepsOnMap(  ) == true ) and ( TownThreatened(  ) == false ) ) and ( FoodUsed(  ) >= 70 ) )
    set gCond_FarmeoGeneralElite = ( ( ( CreepsOnMap(  ) == true ) and ( TownThreatened(  ) == false ) ) and ( FoodUsed(  ) >= 90 ) )
    set gCond_FarmeoDeMina = ( ( ( ExpansionNeeded(  ) == true ) and ( TownThreatened(  ) == false ) ) and ( FoodUsed(  ) >= 50 ) )
    set gCond_Attack_Enemy_Final = ( ( FoodUsed(  ) >= 100 ) and ( TownThreatened(  ) == false ) )
    set gCond_TrabajadoresMina1 = ( ( TownHasMine( TownWithMine(  ) ) == true ) and ( TownHasHall( TownWithMine(  ) ) == true ) )
    set gCond_TrabajadoresMina2 = ( ( TownHasMine( ( TownWithMine(  ) + 1 ) ) == true ) and ( TownHasHall( ( TownWithMine(  ) + 1 ) ) == true ) )
    set gCond_TrabajadoresMina3 = ( ( TownHasMine( ( TownWithMine(  ) + 2 ) ) == true ) and ( TownHasHall( ( TownWithMine(  ) + 2 ) ) == true ) )
    set gCond_PrincipalUpgrade0 = ( ( ( GetUnitCount( 'u00G' ) == 0 ) and ( GetUnitCount( 'u00L' ) == 0 ) ) and ( GetUnitCount( 'u00N' ) == 0 ) )
    set gCond_PrincipalUpgrade1 = ( ( ( GetUnitCountDone( 'u00G' ) != 0 ) and ( GetUnitCount( 'u00L' ) == 0 ) ) and ( GetUnitCountDone( 'u00N' ) == 0 ) )
    set gCond_PrincipalUpgrade2 = ( GetUnitCount( 'u00N' ) == 0 )
    set gCond_ExpansionRequerida = ( ( ExpansionNeeded(  ) == true ) and ( FoodUsed(  ) >= 40 ) )
    set gCond_Workers1 = ( ( GetUnitCount( 'o000' ) < 10 ) and ( ( TownHasMine( TownWithMine(  ) ) == true ) and ( TownHasHall( TownWithMine(  ) ) == true ) ) )
    set gCond_Workers2 = ( ( GetUnitCount( 'o000' ) < 10 ) and ( ( TownHasMine( ( TownWithMine(  ) + 1 ) ) == true ) and ( TownHasHall( ( TownWithMine(  ) + 1 ) ) == true ) ) )
    set gCond_AtacarAEnemigo = ( FoodUsed(  ) > 120 )
    set gCond_Farmeo_avanzado = ( FoodUsed(  ) > 90 )
    set gCond_Farmeo_Mediano = ( FoodUsed(  ) > 60 )
    set gCond_NeedExpansionRequiere = ( ( FoodUsed(  ) > 50 ) and ( ExpansionNeeded(  ) == true ) )
    set gCond_RushCommand = ( CheckLastCommand( false ) == 1 )
endfunction

//***************************************************************************
//*
//*  Heroes
//*
//***************************************************************************

//===========================================================================
// Stores hero ID and skills
//===========================================================================
function SetHero takes integer order, integer heroid returns nothing
    if (order == 1) then
        set hero_id = heroid
        if (heroid == 'O00P') then
            set skills1[ 1] = 'A021'
            set skills1[ 2] = 'A024'
            set skills1[ 3] = 'A023'
            set skills1[ 4] = 'A021'
            set skills1[ 5] = 'A024'
            set skills1[ 6] = 'AUin'
            set skills1[ 7] = 'A023'
            set skills1[ 8] = 'A021'
            set skills1[ 9] = 'A024'
            set skills1[10] = 'A023'
            set skills1[11] = 'A021'
            set skills1[12] = 'AUin'
            set skills1[13] = 'A024'
            set skills1[14] = 'A023'
            set skills1[15] = 'A021'
            set skills1[16] = 'A024'
            set skills1[17] = 'A023'
            set skills1[18] = 'A021'
            set skills1[19] = 'A024'
            set skills1[20] = 'A023'
        elseif (heroid == 'Nplh') then
            set skills1[ 1] = 'ANrf'
            set skills1[ 2] = 'ANht'
            set skills1[ 3] = 'ANca'
            set skills1[ 4] = 'ANrf'
            set skills1[ 5] = 'ANht'
            set skills1[ 6] = 'ANdo'
            set skills1[ 7] = 'ANca'
            set skills1[ 8] = 'ANrf'
            set skills1[ 9] = 'ANht'
            set skills1[10] = 'ANca'
            set skills1[11] = 'ANrf'
            set skills1[12] = 'ANdo'
            set skills1[13] = 'ANht'
            set skills1[14] = 'ANca'
            set skills1[15] = 'ANrf'
            set skills1[16] = 'ANht'
            set skills1[17] = 'ANca'
            set skills1[18] = 'ANrf'
            set skills1[19] = 'ANht'
            set skills1[20] = 'ANca'
        elseif (heroid == 'U00X') then
            set skills1[ 1] = 'AUdc'
            set skills1[ 2] = 'AEim'
            set skills1[ 3] = 'A03A'
            set skills1[ 4] = 'AUdc'
            set skills1[ 5] = 'AEim'
            set skills1[ 6] = 'ANch'
            set skills1[ 7] = 'A03A'
            set skills1[ 8] = 'AUdc'
            set skills1[ 9] = 'AEim'
            set skills1[10] = 'A03A'
            set skills1[11] = 'AUdc'
            set skills1[12] = 'ANch'
            set skills1[13] = 'AEim'
            set skills1[14] = 'A03A'
            set skills1[15] = 'AUdc'
            set skills1[16] = 'AEim'
            set skills1[17] = 'A03A'
            set skills1[18] = 'AUdc'
            set skills1[19] = 'AEim'
            set skills1[20] = 'A03A'
        endif
    elseif (order == 2) then
        set hero_id2 = heroid
        if (heroid == 'O00P') then
            set skills2[ 1] = 'A021'
            set skills2[ 2] = 'A024'
            set skills2[ 3] = 'A023'
            set skills2[ 4] = 'A021'
            set skills2[ 5] = 'A024'
            set skills2[ 6] = 'AUin'
            set skills2[ 7] = 'A023'
            set skills2[ 8] = 'A021'
            set skills2[ 9] = 'A024'
            set skills2[10] = 'A023'
            set skills2[11] = 'A021'
            set skills2[12] = 'AUin'
            set skills2[13] = 'A024'
            set skills2[14] = 'A023'
            set skills2[15] = 'A021'
            set skills2[16] = 'A024'
            set skills2[17] = 'A023'
            set skills2[18] = 'A021'
            set skills2[19] = 'A024'
            set skills2[20] = 'A023'
        elseif (heroid == 'Nplh') then
            set skills2[ 1] = 'ANrf'
            set skills2[ 2] = 'ANht'
            set skills2[ 3] = 'ANca'
            set skills2[ 4] = 'ANrf'
            set skills2[ 5] = 'ANht'
            set skills2[ 6] = 'ANdo'
            set skills2[ 7] = 'ANca'
            set skills2[ 8] = 'ANrf'
            set skills2[ 9] = 'ANht'
            set skills2[10] = 'ANca'
            set skills2[11] = 'ANrf'
            set skills2[12] = 'ANdo'
            set skills2[13] = 'ANht'
            set skills2[14] = 'ANca'
            set skills2[15] = 'ANrf'
            set skills2[16] = 'ANht'
            set skills2[17] = 'ANca'
            set skills2[18] = 'ANrf'
            set skills2[19] = 'ANht'
            set skills2[20] = 'ANca'
        elseif (heroid == 'U00X') then
            set skills2[ 1] = 'AUdc'
            set skills2[ 2] = 'AEim'
            set skills2[ 3] = 'A03A'
            set skills2[ 4] = 'AUdc'
            set skills2[ 5] = 'AEim'
            set skills2[ 6] = 'ANch'
            set skills2[ 7] = 'A03A'
            set skills2[ 8] = 'AUdc'
            set skills2[ 9] = 'AEim'
            set skills2[10] = 'A03A'
            set skills2[11] = 'AUdc'
            set skills2[12] = 'ANch'
            set skills2[13] = 'AEim'
            set skills2[14] = 'A03A'
            set skills2[15] = 'AUdc'
            set skills2[16] = 'AEim'
            set skills2[17] = 'A03A'
            set skills2[18] = 'AUdc'
            set skills2[19] = 'AEim'
            set skills2[20] = 'A03A'
        endif
    elseif (order == 3) then
        set hero_id3 = heroid
        if (heroid == 'O00P') then
            set skills3[ 1] = 'A021'
            set skills3[ 2] = 'A024'
            set skills3[ 3] = 'A023'
            set skills3[ 4] = 'A021'
            set skills3[ 5] = 'A024'
            set skills3[ 6] = 'AUin'
            set skills3[ 7] = 'A023'
            set skills3[ 8] = 'A021'
            set skills3[ 9] = 'A024'
            set skills3[10] = 'A023'
            set skills3[11] = 'A021'
            set skills3[12] = 'AUin'
            set skills3[13] = 'A024'
            set skills3[14] = 'A023'
            set skills3[15] = 'A021'
            set skills3[16] = 'A024'
            set skills3[17] = 'A023'
            set skills3[18] = 'A021'
            set skills3[19] = 'A024'
            set skills3[20] = 'A023'
        elseif (heroid == 'Nplh') then
            set skills3[ 1] = 'ANrf'
            set skills3[ 2] = 'ANht'
            set skills3[ 3] = 'ANca'
            set skills3[ 4] = 'ANrf'
            set skills3[ 5] = 'ANht'
            set skills3[ 6] = 'ANdo'
            set skills3[ 7] = 'ANca'
            set skills3[ 8] = 'ANrf'
            set skills3[ 9] = 'ANht'
            set skills3[10] = 'ANca'
            set skills3[11] = 'ANrf'
            set skills3[12] = 'ANdo'
            set skills3[13] = 'ANht'
            set skills3[14] = 'ANca'
            set skills3[15] = 'ANrf'
            set skills3[16] = 'ANht'
            set skills3[17] = 'ANca'
            set skills3[18] = 'ANrf'
            set skills3[19] = 'ANht'
            set skills3[20] = 'ANca'
        elseif (heroid == 'U00X') then
            set skills3[ 1] = 'AUdc'
            set skills3[ 2] = 'AEim'
            set skills3[ 3] = 'A03A'
            set skills3[ 4] = 'AUdc'
            set skills3[ 5] = 'AEim'
            set skills3[ 6] = 'ANch'
            set skills3[ 7] = 'A03A'
            set skills3[ 8] = 'AUdc'
            set skills3[ 9] = 'AEim'
            set skills3[10] = 'A03A'
            set skills3[11] = 'AUdc'
            set skills3[12] = 'ANch'
            set skills3[13] = 'AEim'
            set skills3[14] = 'A03A'
            set skills3[15] = 'AUdc'
            set skills3[16] = 'AEim'
            set skills3[17] = 'A03A'
            set skills3[18] = 'AUdc'
            set skills3[19] = 'AEim'
            set skills3[20] = 'A03A'
        endif
    endif
endfunction

//===========================================================================
// Selects hero IDs for three possible heroes
//===========================================================================
function SelectHeroes takes nothing returns nothing
    local integer roll = GetRandomInt(1,100)
    if (roll <= 17) then
        call SetHero( 1, 'O00P' )
        call SetHero( 2, 'Nplh' )
        call SetHero( 3, 'U00X' )
    elseif (roll <= 33) then
        call SetHero( 1, 'O00P' )
        call SetHero( 2, 'U00X' )
        call SetHero( 3, 'Nplh' )
    elseif (roll <= 50) then
        call SetHero( 1, 'Nplh' )
        call SetHero( 2, 'O00P' )
        call SetHero( 3, 'U00X' )
    elseif (roll <= 66) then
        call SetHero( 1, 'Nplh' )
        call SetHero( 2, 'U00X' )
        call SetHero( 3, 'O00P' )
    elseif (roll <= 83) then
        call SetHero( 1, 'U00X' )
        call SetHero( 2, 'O00P' )
        call SetHero( 3, 'Nplh' )
    else
        call SetHero( 1, 'U00X' )
        call SetHero( 2, 'Nplh' )
        call SetHero( 3, 'O00P' )
    endif
endfunction

//===========================================================================
// Returns the hero skill for the given hero and level
//===========================================================================
function ChooseHeroSkill takes nothing returns integer
    local integer curHero = GetHeroId()
    local integer level = GetHeroLevelAI()

    if (level > max_hero_level) then
        set max_hero_level = level
    endif

    if (curHero == hero_id) then
        return skills1[level]
    elseif (curHero == hero_id2) then
        return skills2[level]
    elseif (curHero == hero_id3) then
        return skills3[level]
    endif
    return 0
endfunction

//***************************************************************************
//*
//*  Building and Harvesting
//*
//***************************************************************************

//===========================================================================
// Specifies building priorities for workers
//===========================================================================
function BuildPriorities takes nothing returns nothing
    local integer mine = TownWithMine()
    if (gCond_PrincipalUpgrade0) then
        call SetBuildAll( BUILD_UNIT, 1, 'u00G', 0 )
    endif
    if (gCond_Workers1) then
        call SetBuildAll( BUILD_UNIT, 1, 'o000', -1 )
        call SetBuildAll( BUILD_UNIT, 2, 'o000', -1 )
        call SetBuildAll( BUILD_UNIT, 3, 'o000', -1 )
        call SetBuildAll( BUILD_UNIT, 4, 'o000', -1 )
        call SetBuildAll( BUILD_UNIT, 5, 'o000', -1 )
    endif
    call SetBuildAll( BUILD_UNIT, 1, 'u00T', 0 )
    call SetBuildAll( BUILD_UNIT, 1, 'u00R', -1 )
    if (( TotalFoodProduced(  ) < 200 )) then
        call SetBuildAll( BUILD_UNIT, 1, 'u00O', -1 )
    endif
    if (gCond_Need_Expansion) then
        call BuildExpansion( 'u00G', 'u00G' )
    endif
    if (gCond_Workers2) then
        call SetBuildAll( BUILD_UNIT, 6, 'o000', -1 )
        call SetBuildAll( BUILD_UNIT, 7, 'o000', -1 )
        call SetBuildAll( BUILD_UNIT, 8, 'o000', -1 )
        call SetBuildAll( BUILD_UNIT, 9, 'o000', -1 )
        call SetBuildAll( BUILD_UNIT, 10, 'o000', -1 )
    endif
    call SetBuildAll( BUILD_UNIT, 1, 'o001', -1 )
    call SetBuildAll( BUILD_UNIT, 2, 'o001', -1 )
    call SetBuildAll( BUILD_UNIT, 3, 'o001', -1 )
    call SetBuildAll( BUILD_UNIT, 4, 'o001', -1 )
    call SetBuildAll( BUILD_UNIT, 5, 'o001', -1 )
    call SetBuildAll( BUILD_UNIT, 1, 'u00Q', -1 )
    call SetBuildAll( BUILD_UNIT, 1, 'u00Y', -1 )
    if (gCond_Heroe_temprano) then
        call SetBuildAll( BUILD_UNIT, 1, hero_id, -1 )
    endif
    call SetBuildAll( BUILD_UNIT, 1, 'n01K', -1 )
    call SetBuildAll( BUILD_UNIT, 2, 'n01K', -1 )
    call SetBuildAll( BUILD_UNIT, 3, 'n01K', -1 )
    call SetBuildAll( BUILD_UNIT, 4, 'n01K', -1 )
    call SetBuildAll( BUILD_UNIT, 5, 'n01K', -1 )
    if (( TotalFoodProduced(  ) < 200 )) then
        call SetBuildAll( BUILD_UNIT, 2, 'u00O', -1 )
    endif
    if (( GetUpgradeLevel( 'Ruac' ) == 0 )) then
        call SetBuildAll( BUILD_UPGRADE, 1, 'Ruac', -1 )
    endif
    call SetBuildAll( BUILD_UNIT, 2, 'u00T', 0 )
    if (gCond_Armas1) then
        call SetBuildAll( BUILD_UPGRADE, 1, 'Rume', -1 )
    endif
    if (gCond_CreatureAttack1) then
        call SetBuildAll( BUILD_UPGRADE, 1, 'Rura', -1 )
    endif
    if (gCond_Armadura1) then
        call SetBuildAll( BUILD_UPGRADE, 1, 'Ruar', -1 )
    endif
    if (gCond_Caparazon1) then
        call SetBuildAll( BUILD_UPGRADE, 1, 'Rucr', -1 )
    endif
    if (( TotalFoodProduced(  ) < 200 )) then
        call SetBuildAll( BUILD_UNIT, 3, 'u00O', -1 )
    endif
    if (gCond_TotalTowers) then
        call SetBuildAll( BUILD_UNIT, 1, 'u00P', -1 )
    endif
    call SetBuildAll( BUILD_UNIT, 2, 'u00R', -1 )
    call SetBuildAll( BUILD_UNIT, 6, 'n01K', -1 )
    call SetBuildAll( BUILD_UNIT, 7, 'n01K', -1 )
    call SetBuildAll( BUILD_UNIT, 8, 'n01K', -1 )
    call SetBuildAll( BUILD_UNIT, 9, 'n01K', -1 )
    if (( TotalFoodProduced(  ) < 200 )) then
        call SetBuildAll( BUILD_UNIT, 4, 'u00O', -1 )
    endif
    if (gCond_TotalTowers) then
        call SetBuildAll( BUILD_UNIT, 2, 'u00P', -1 )
    endif
    if (( TotalFoodProduced(  ) < 200 )) then
        call SetBuildAll( BUILD_UNIT, 5, 'u00O', -1 )
    endif
    if (gCond_TotalTowers) then
        call SetBuildAll( BUILD_UNIT, 3, 'u00P', -1 )
    endif
    if (gCond_Armas2) then
        call SetBuildAll( BUILD_UPGRADE, 2, 'Rume', -1 )
    endif
    if (gCond_CreatureAttack2) then
        call SetBuildAll( BUILD_UPGRADE, 2, 'Rura', -1 )
    endif
    if (gCond_Armadura2) then
        call SetBuildAll( BUILD_UPGRADE, 2, 'Ruar', -1 )
    endif
    if (gCond_Caparazon2) then
        call SetBuildAll( BUILD_UPGRADE, 2, 'Rucr', -1 )
    endif
    if (( TotalFoodProduced(  ) < 200 )) then
        call SetBuildAll( BUILD_UNIT, 6, 'u00O', -1 )
    endif
    if (gCond_TotalTowers) then
        call SetBuildAll( BUILD_UNIT, 4, 'u00P', -1 )
    endif
    if (gCond_PrincipalUpgrade1) then
        call SetBuildAll( BUILD_UNIT, 1, 'u00L', 0 )
    endif
    if (gCond_Need_Expansion) then
        call BuildExpansion( 'u00G', 'u00G' )
    endif
    if (gCond_TrabajadoresMina3) then
        call SetBuildAll( BUILD_UNIT, 1, 'o000', 2 )
        call SetBuildAll( BUILD_UNIT, 2, 'o000', 2 )
        call SetBuildAll( BUILD_UNIT, 3, 'o000', 2 )
        call SetBuildAll( BUILD_UNIT, 4, 'o000', 2 )
        call SetBuildAll( BUILD_UNIT, 5, 'o000', 2 )
    endif
    if (gCond_HeroeSegundo) then
        call SetBuildAll( BUILD_UNIT, 1, hero_id2, -1 )
    endif
    if (( GetUpgradeLevel( 'R004' ) == 0 )) then
        call SetBuildAll( BUILD_UPGRADE, 1, 'R004', -1 )
    endif
    call SetBuildAll( BUILD_UNIT, 1, 'u00U', 0 )
    call SetBuildAll( BUILD_UNIT, 2, 'u00U', 0 )
    call SetBuildAll( BUILD_UNIT, 1, 'u00V', 0 )
    call SetBuildAll( BUILD_UNIT, 2, 'u00V', 0 )
    call SetBuildAll( BUILD_UNIT, 1, 'u00S', 0 )
    if (( TotalFoodProduced(  ) < 200 )) then
        call SetBuildAll( BUILD_UNIT, 7, 'u00O', -1 )
    endif
    if (gCond_TotalTowers) then
        call SetBuildAll( BUILD_UNIT, 5, 'u00P', -1 )
    endif
    call SetBuildAll( BUILD_UNIT, 1, 'o002', -1 )
    call SetBuildAll( BUILD_UNIT, 2, 'o002', -1 )
    call SetBuildAll( BUILD_UNIT, 1, 'n01J', -1 )
    call SetBuildAll( BUILD_UNIT, 2, 'n01J', -1 )
    call SetBuildAll( BUILD_UNIT, 3, 'n01J', -1 )
    call SetBuildAll( BUILD_UNIT, 1, 'o008', -1 )
    call SetBuildAll( BUILD_UNIT, 2, 'o008', -1 )
    call SetBuildAll( BUILD_UNIT, 3, 'o008', -1 )
    call SetBuildAll( BUILD_UNIT, 4, 'o008', -1 )
    call SetBuildAll( BUILD_UNIT, 5, 'o008', -1 )
    call SetBuildAll( BUILD_UNIT, 6, 'o008', -1 )
    if (gCond_Armas3) then
        call SetBuildAll( BUILD_UPGRADE, 3, 'Rume', -1 )
    endif
    if (gCond_CreatureAttack3) then
        call SetBuildAll( BUILD_UPGRADE, 3, 'Rura', -1 )
    endif
    if (gCond_Armadura3) then
        call SetBuildAll( BUILD_UPGRADE, 3, 'Ruar', -1 )
    endif
    if (gCond_Caparazon3) then
        call SetBuildAll( BUILD_UPGRADE, 3, 'Rucr', -1 )
    endif
    if (( GetUpgradeLevel( 'Rune' ) == 0 )) then
        call SetBuildAll( BUILD_UPGRADE, 1, 'Rune', -1 )
    endif
    if (( GetUpgradeLevel( 'Ruba' ) == 0 )) then
        call SetBuildAll( BUILD_UPGRADE, 1, 'Ruba', -1 )
    endif
    if (( TotalFoodProduced(  ) < 200 )) then
        call SetBuildAll( BUILD_UNIT, 8, 'u00O', -1 )
        call SetBuildAll( BUILD_UNIT, 9, 'u00O', -1 )
        call SetBuildAll( BUILD_UNIT, 10, 'u00O', -1 )
    endif
    call SetBuildAll( BUILD_UNIT, 1, 'n00Q', -1 )
    call SetBuildAll( BUILD_UNIT, 2, 'n00Q', -1 )
    call SetBuildAll( BUILD_UNIT, 3, 'n00Q', -1 )
    call SetBuildAll( BUILD_UNIT, 1, 'u007', -1 )
    call SetBuildAll( BUILD_UNIT, 2, 'u007', -1 )
    call SetBuildAll( BUILD_UNIT, 3, 'u007', -1 )
    call SetBuildAll( BUILD_UNIT, 4, 'u007', -1 )
    call SetBuildAll( BUILD_UNIT, 5, 'u007', -1 )
    call SetBuildAll( BUILD_UNIT, 6, 'u007', -1 )
    if (gCond_Armas4) then
        call SetBuildAll( BUILD_UPGRADE, 4, 'Rume', -1 )
    endif
    if (gCond_CreatureAttack4) then
        call SetBuildAll( BUILD_UPGRADE, 4, 'Rura', -1 )
    endif
    if (gCond_Armadura4) then
        call SetBuildAll( BUILD_UPGRADE, 4, 'Ruar', -1 )
    endif
    if (gCond_Caparazon4) then
        call SetBuildAll( BUILD_UPGRADE, 4, 'Rucr', -1 )
    endif
    if (gCond_PrincipalUpgrade2) then
        call SetBuildAll( BUILD_UNIT, 1, 'u00N', 0 )
    endif
    if (gCond_HeroeTercero) then
        call SetBuildAll( BUILD_UNIT, 1, hero_id3, -1 )
    endif
    call SetBuildAll( BUILD_UNIT, 1, 'u00W', -1 )
    call SetBuildAll( BUILD_UNIT, 2, 'u00W', -1 )
    if (( GetUpgradeLevel( 'Rwdm' ) < 1 )) then
        call SetBuildAll( BUILD_UPGRADE, 1, 'Rwdm', -1 )
    endif
    if (( GetUpgradeLevel( 'Rwdm' ) < 2 )) then
        call SetBuildAll( BUILD_UPGRADE, 2, 'Rwdm', -1 )
    endif
    if (( GetUpgradeLevel( 'R60W' ) == 0 )) then
        call SetBuildAll( BUILD_UPGRADE, 1, 'R60W', -1 )
        call SetBuildAll( BUILD_UPGRADE, 1, '8726', -1 )
    endif
    if (( GetUpgradeLevel( 'R005' ) == 0 )) then
        call SetBuildAll( BUILD_UPGRADE, 1, 'R005', -1 )
    endif
    if (( GetUpgradeLevel( 'Rugf' ) < 1 )) then
        call SetBuildAll( BUILD_UPGRADE, 1, 'Rugf', -1 )
    endif
    if (( GetUpgradeLevel( 'Rugf' ) < 2 )) then
        call SetBuildAll( BUILD_UPGRADE, 2, 'Rugf', -1 )
    endif
    if (( GetUpgradeLevel( 'Rune' ) < 2 )) then
        call SetBuildAll( BUILD_UPGRADE, 2, 'Rune', -1 )
    endif
    if (( GetUpgradeLevel( 'Ruba' ) < 2 )) then
        call SetBuildAll( BUILD_UPGRADE, 2, 'Ruba', -1 )
    endif
    call SetBuildAll( BUILD_UNIT, 1, 'n01M', -1 )
    call SetBuildAll( BUILD_UNIT, 2, 'n01M', -1 )
    call SetBuildAll( BUILD_UNIT, 3, 'n01M', -1 )
    call SetBuildAll( BUILD_UNIT, 4, 'n01M', -1 )
    call SetBuildAll( BUILD_UNIT, 5, 'n01M', -1 )
    call SetBuildAll( BUILD_UNIT, 1, 'n01L', -1 )
    call SetBuildAll( BUILD_UNIT, 2, 'n01L', -1 )
    call SetBuildAll( BUILD_UNIT, 3, 'n01L', -1 )
    call SetBuildAll( BUILD_UNIT, 4, 'n01L', -1 )
    call SetBuildAll( BUILD_UNIT, 5, 'n01L', -1 )
    call SetBuildAll( BUILD_UNIT, 6, 'n01L', -1 )
    call SetBuildAll( BUILD_UNIT, 4, 'n00Q', -1 )
    call SetBuildAll( BUILD_UNIT, 5, 'n00Q', -1 )
    if (gCond_Armas5) then
        call SetBuildAll( BUILD_UPGRADE, 5, 'Rume', -1 )
    endif
    if (gCond_CreatureAttack5) then
        call SetBuildAll( BUILD_UPGRADE, 5, 'Rura', -1 )
    endif
    if (gCond_Armadura5) then
        call SetBuildAll( BUILD_UPGRADE, 5, 'Ruar', -1 )
    endif
    if (gCond_Caparazon5) then
        call SetBuildAll( BUILD_UPGRADE, 5, 'Rucr', -1 )
    endif
    if (( GetUpgradeLevel( 'Rune' ) < 3 )) then
        call SetBuildAll( BUILD_UPGRADE, 3, 'Rune', -1 )
    endif
    if (( GetUpgradeLevel( 'Ruba' ) < 3 )) then
        call SetBuildAll( BUILD_UPGRADE, 3, 'Ruba', -1 )
    endif
    if (gCond_Armas6) then
        call SetBuildAll( BUILD_UPGRADE, 6, 'Rume', -1 )
    endif
    if (gCond_CreatureAttack6) then
        call SetBuildAll( BUILD_UPGRADE, 6, 'Rura', -1 )
    endif
    if (gCond_Armadura6) then
        call SetBuildAll( BUILD_UPGRADE, 6, 'Ruar', -1 )
    endif
    if (gCond_Caparazon6) then
        call SetBuildAll( BUILD_UPGRADE, 6, 'Rucr', -1 )
    endif
    if (( GetUpgradeLevel( 'Rune' ) < 4 )) then
        call SetBuildAll( BUILD_UPGRADE, 4, 'Rune', -1 )
    endif
    if (( GetUpgradeLevel( 'Ruba' ) < 4 )) then
        call SetBuildAll( BUILD_UPGRADE, 4, 'Ruba', -1 )
    endif
endfunction

//===========================================================================
// Specifies harvesting priorities for workers
//===========================================================================
function HarvestPriorities takes nothing returns nothing
    local integer mine = TownWithMine()
    local integer allGold = GetUnitCountDone('o000')
    local integer allWood = GetUnitCountDone('o001')
    local integer numWorkers
    set numWorkers = 5
    call HarvestGold( mine + 0, numWorkers )
    set numWorkers = 5
    call HarvestGold( mine + 1, numWorkers )
    set numWorkers = 5
    call HarvestWood( mine, numWorkers )
endfunction

//===========================================================================
// Determines all building and harvesting assignments for workers
//===========================================================================
function WorkerAssignment takes nothing returns nothing
    loop
        call UpdateConditions(  )

        // Harvesting
        call ClearHarvestAI(  )
        call HarvestPriorities(  )

        // Building
        call InitBuildArray(  )
        call BuildPriorities(  )

        call Sleep( 2 )
    endloop
endfunction

//***************************************************************************
//*
//*  Attacking
//*
//***************************************************************************

//===========================================================================
// Returns true if the minimum forces for an attack exist
//===========================================================================
function HaveMinimumAttackers takes nothing returns boolean
    local integer count

    // Check for attack wave limit
    if (attackWave > 1) then
        return false
    endif

    // Attack Group: Minium
    set count = GetUnitCountDone( 'n01K' )
    if (count < 2) then
        return false
    endif
    return true
endfunction

//===========================================================================
// Assigns units to attack based on the given attack group
//===========================================================================
function PrepareAttackGroup takes integer groupID returns nothing
    local integer all

    // Attack Group #1: All
    if (groupID == 1) then
        if (( GetUnitCount( 'Nfir' ) > 0 )) then
            call AddAttackUnit( 1,   1,   'Nfir' )
        endif
        if (( GetUnitCount( 'O00P' ) > 0 )) then
            call AddAttackUnit( 1,   1,   'O00P' )
        endif
        if (( GetUnitCount( 'Nplh' ) > 0 )) then
            call AddAttackUnit( 1,   1,   'Nplh' )
        endif
        if (( GetUnitCount( 'U00X' ) > 0 )) then
            call AddAttackUnit( 1,   1,   'U00X' )
        endif
        if (gCond_TenemosFireMephits) then
            set all = GetUnitCountDone( 'u007' )
            call AddAttackUnit( all, all, 'u007' )
        endif
        if (gCond_TenemosFelMinions) then
            call AddAttackUnit( 1,   6,   'o001' )
        endif
        if (gCond_TenemosFelGuards) then
            set all = GetUnitCountDone( 'n01K' )
            call AddAttackUnit( all, all, 'n01K' )
        endif
        if (gCond_TenemosArtilugios) then
            set all = GetUnitCountDone( 'n00Q' )
            call AddAttackUnit( all, all, 'n00Q' )
        endif
        if (gCond_TenemosPitGuards) then
            set all = GetUnitCountDone( 'n01M' )
            call AddAttackUnit( all, all, 'n01M' )
        endif
        if (gCond_TenemosNetherDrakes) then
            set all = GetUnitCountDone( 'n01L' )
            call AddAttackUnit( all, all, 'n01L' )
        endif
        if (gCond_TenemosDemoness) then
            set all = GetUnitCountDone( 'o008' )
            call AddAttackUnit( all, all, 'o008' )
        endif
        if (gCond_TenemosDemoniosEredar) then
            set all = GetUnitCountDone( 'n01J' )
            call AddAttackUnit( all, all, 'n01J' )
        endif
        if (gCond_TenemosFelOverlords) then
            set all = GetUnitCountDone( 'o002' )
            call AddAttackUnit( all, all, 'o002' )
        endif

        // Attack Group #2: Minium
    elseif (groupID == 2) then
        set all = GetUnitCountDone( hero_id )
        call AddAttackUnit( all, all, hero_id )
        call AddAttackUnit( 2,   2,   'n01K' )

    endif
endfunction

//===========================================================================
// Prepares an attack group based on the current attack wave
//===========================================================================
function PrepareForces takes nothing returns nothing
    if (attackWave == 1) then
        call PrepareAttackGroup( 1 )
    endif
endfunction

//===========================================================================
// Sleep delays for each attack wave
//===========================================================================
function AttackWaveDelay takes integer inWave returns nothing
    if (inWave < nextDelay) then
        return
    endif

    set nextDelay = inWave + 1
endfunction

//===========================================================================
// Advances attack wave counter
//===========================================================================
function AttackWaveUpdate takes nothing returns nothing
    call AttackWaveDelay( attackWave )
    set attackWave = attackWave + 1
    if (attackWave > 1) then
        set attackWave = 1
        set nextDelay = attackWave + 1
    endif
endfunction

//===========================================================================
// Basic attack functionality
//===========================================================================
function AttackTarget takes unit target, boolean addAlliance returns nothing
    if (target == null) then
        return
    endif
    if (addAlliance) then
        call SetAllianceTarget( target )
    endif
    call FormGroup( 3, true )
    call AttackMoveKillA( target )
    if (not addAlliance) then
        call SetAllianceTarget( null )
    endif
endfunction

//===========================================================================
// Initiates an attack based on target priorities
//===========================================================================
function LaunchAttack takes nothing returns nothing
    local unit target = null
    local boolean setAlly = true

    // Don't launch any attack while town is threatened
    if (TownThreatened()) then
        call Sleep( 2 )
        return
    endif

    // Target Priority #1
    if (gCond_RushCommand) then
        if (target == null) then
            set target = GetMegaTarget()
        endif

        // Target Priority #2
    endif
    if (gCond_NeedExpansionRequiere) then
        if (target == null) then
            set target = GetExpansionFoe()
            if (target != null) then
                set take_exp = false
            endif
        endif

        // Target Priority #3
    endif
    if (gCond_AtacarAEnemigo) then
        if (target == null) then
            set target = GetAllianceTarget()
            if (target != null) then
                set setAlly = false
            endif
        endif

        // Target Priority #4
        if (target == null) then
            set target = GetMegaTarget()
        endif

        // Target Priority #5
        if (target == null) then
            set target = GetEnemyExpansion()
            if (target == null) then
                call StartGetEnemyBase(  )
                loop
                    exitwhen (not WaitGetEnemyBase())
                    call SuicideSleep( 1 )
                endloop
                set target = GetEnemyBase()
            endif
        endif

        // Target Priority #6
        if (target == null) then
            set target = GetEnemyExpansion()
        endif

        // Target Priority #7
    endif
    if (gCond_Farmeo_avanzado) then
        if (target == null) then
            set target = GetCreepCamp( 19, 100, true )
        endif

        // Target Priority #8
    endif
    if (gCond_Farmeo_Mediano) then
        if (target == null) then
            set target = GetCreepCamp( 18, 36, true )
        endif

        // Target Priority #9
    endif
    if (target == null) then
        set target = GetCreepCamp( 0, 17, false )
    endif

    // Attack the target and increment attack wave
    if (target != null) then
        call AttackTarget( target, setAlly )
        call AttackWaveUpdate(  )
    else
        // If no target was found, sleep a bit before trying again
        call Sleep( 20 )
    endif
endfunction

//===========================================================================
// Determines all attacking assignments
//===========================================================================
function AttackAssignment takes nothing returns nothing
    call StaggerSleep( 0, 2 )
    if (attackWave == 1) then
        call AttackWaveDelay( 0 )
    endif
    loop
        loop
            call UpdateConditions(  )
            exitwhen (HaveMinimumAttackers() and not CaptainRetreating())
            call Sleep( 2 )
        endloop
        call RemoveInjuries(  )
        call ResetAttackUnits(  )
        call PrepareForces(  )
        call LaunchAttack(  )
    endloop
endfunction

//***************************************************************************
//*
//*  Main Entry Point
//*
//***************************************************************************

//===========================================================================
function main takes nothing returns nothing
    call InitAI(  )
    call SetPlayerName( ai_player, "Burning Legion" )
    call InitOptions(  )
    call SelectHeroes(  )
    call CreateCaptains(  )
    call SetHeroLevels( function ChooseHeroSkill )

    call Sleep( 0.1 )
    call StartThread( function WorkerAssignment )
    call StartThread( function AttackAssignment )
    call PlayGame(  )
endfunction

