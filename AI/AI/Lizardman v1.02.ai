//===========================================================================
// 
// Lizardman Organization
// 
//   Warcraft III AI script
//   Generated by the Warcraft III World Editor
// 
//===========================================================================

//***************************************************************************
//*
//*  Global Variables
//*
//***************************************************************************

globals
    integer                 attackWave                 = 1
    integer                 nextDelay                  = 0
    integer                 awGold                     = 0
    integer                 awWood                     = 0
    integer                 Comport11                  = GetRandomInt(1,100)
    // Conditions
    boolean                 gCond_BuildGeneral         = false
    boolean                 gCond_BuildFarms           = false
    boolean                 gCond_BuildTowers          = false
    boolean                 gCond_BuildGreatHall       = false
    boolean                 gCond_BuildStronghold      = false
    boolean                 gCond_BuildFortress        = false
    boolean                 gCond_HeroFirst            = false
    boolean                 gCond_HeroSecond           = false
    boolean                 gCond_HeroThird            = false
    boolean                 gCond_NeedExp              = false
    boolean                 gCond_NeedExp2             = false
    boolean                 gCond_TrainWarriors        = false
    boolean                 gCond_TrainArchers         = false
    boolean                 gCond_Workers1             = false
    boolean                 gCond_Workers2             = false
    boolean                 gCond_Workers3             = false
    boolean                 gCond_AttackWithWarriors   = false
    boolean                 gCond_AttackWithPikemans   = false
    boolean                 gCond_AttackWithArchers    = false
    boolean                 gCond_AttackWithAssasins   = false
    boolean                 gCond_AttackWithHunters    = false
    boolean                 gCond_AttackWithRiders     = false
    boolean                 gCond_AttackWithDragonFly  = false
    boolean                 gCond_AttackWithShamans    = false
    boolean                 gCond_AttackWithDragonPriest = false
    boolean                 gCond_AttackWithJuggernaut = false
    boolean                 gCond_AttackWithSerpentKnight = false
    boolean                 gCond_MinimunRiders        = false
    boolean                 gCond_AtacarAEnemigo       = false
    boolean                 gCond_Farmeo_avanzado      = false
    boolean                 gCond_Farmeo_Mediano       = false
    boolean                 gCond_NeedExpansionRequiere = false
    boolean                 gCond_RushCommand          = false
    boolean                 gCond_RushForces           = false
endglobals

//***************************************************************************
//*
//*  Utility Functions
//*
//***************************************************************************

//===========================================================================
function CheckLastCommand takes boolean pop returns integer
    local integer cmd = GetLastCommand()
    if (pop) then
        call PopLastCommand(  )
    endif
    return cmd
endfunction

//===========================================================================
function CheckLastCommandData takes boolean pop returns integer
    local integer data = GetLastData()
    if (pop) then
        call PopLastCommand(  )
    endif
    return data
endfunction

//===========================================================================
function TotalFoodProduced takes nothing returns integer
    return GetPlayerState(ai_player,PLAYER_STATE_RESOURCE_FOOD_CAP)
endfunction

//===========================================================================
function ExpansionNeeded takes nothing returns boolean
    return take_exp
endfunction

//===========================================================================
function BuildExpansion takes integer hallID, integer mineID returns nothing
    if (HallsCompleted(hallID)) then
        call SetBuildExpa( TownCount(hallID) + 1, mineID )
    endif
endfunction

//===========================================================================
function CurrentAttackWave takes nothing returns integer
    return attackWave
endfunction

//===========================================================================
function ResetAttackUnits takes nothing returns nothing
    set awGold = 0
    set awWood = 0
    call InitAssaultGroup(  )
endfunction

//===========================================================================
function AddAttackUnit takes integer minQty, integer maxQty, integer unitID returns nothing
    // Track attacking gold workers
    if (unitID == 'n00N') then
        set awGold = awGold + minQty
    endif

    // Track attacking wood workers
    if (unitID == 'n00N') then
        set awWood = awWood + minQty
    endif

    call SetAssaultGroup( minQty, maxQty, unitID )
endfunction

//***************************************************************************
//*
//*  Basic Options
//*
//***************************************************************************

//===========================================================================
function InitOptions takes nothing returns nothing
    call SetCampaignAI(  )  
    call SetDefendPlayer( false )
    call SetRandomPaths( true )
    call SetTargetHeroes( true )
    call SetPeonsRepair( true )
    call SetHeroesFlee( true )
    call SetHeroesBuyItems( true )
    call SetUnitsFlee( true )
    call SetGroupsFlee( true )
    call SetWatchMegaTargets( true )
    call SetIgnoreInjured( true )
    call SetHeroesTakeItems( true )
    call SetSlowChopping( false )
    call SetCaptainChanges( true )
    call SetSmartArtillery( true )
endfunction

//***************************************************************************
//*
//*  Conditions
//*
//***************************************************************************

//===========================================================================
// Updates the values of all preset conditions
//===========================================================================
function UpdateConditions takes nothing returns nothing
    set gCond_BuildGeneral = ( TownThreatened(  ) == false )
    set gCond_BuildFarms = ( ( TownThreatened(  ) == false ) and ( ( ( 20 * GetUnitCount( 'o01P' ) ) < 200 ) and ( ( ( 20 * GetUnitCount( 'o01P' ) ) - FoodUsed(  ) ) < 15 ) ) )
    set gCond_BuildTowers = ( ( TownThreatened(  ) == false ) and ( GetUnitCount( 'o01Q' ) < 10 ) )
    set gCond_BuildGreatHall = ( ( TownThreatened(  ) == false ) and ( ( GetUnitCount( 'o01H' ) == 0 ) and ( ( GetUnitCount( 'o01I' ) == 0 ) and ( GetUnitCount( 'o01J' ) == 0 ) ) ) )
    set gCond_BuildStronghold = ( ( TownThreatened(  ) == false ) and ( ( GetUnitCountDone( 'o01H' ) > 0 ) and ( ( GetUnitCount( 'o01I' ) == 0 ) and ( GetUnitCount( 'o01J' ) == 0 ) ) ) )
    set gCond_BuildFortress = ( ( TownThreatened(  ) == false ) and ( ( GetUnitCountDone( 'o01I' ) > 0 ) and ( GetUnitCount( 'o01J' ) == 0 ) ) )
    set gCond_HeroFirst = ( GetUnitCountDone( 'o01K' ) > 0 )
    set gCond_HeroSecond = ( ( GetUnitCountDone( 'o01K' ) > 0 ) and ( ( GetUnitCountDone( 'o01I' ) > 0 ) or ( GetUnitCountDone( 'o01J' ) > 0 ) ) )
    set gCond_HeroThird = ( ( GetUnitCountDone( 'o01K' ) > 0 ) and ( GetUnitCountDone( 'o01J' ) > 0 ) )
    set gCond_NeedExp = ( GetMinesOwned(  ) < 2 )
    set gCond_NeedExp2 = ( GetMinesOwned(  ) < 3 )
    set gCond_TrainWarriors = ( ( GetUnitCountDone( 'o01J' ) == 0 ) and ( GetUnitCountDone( 'o01O' ) == 0 ) )
    set gCond_TrainArchers = ( ( GetUnitCountDone( 'o01I' ) == 0 ) and ( GetUnitCountDone( 'o01O' ) == 0 ) )
    set gCond_Workers1 = ( ( GetUnitCount( 'n00N' ) < 35 ) and ( ( TownHasMine( ( TownWithMine(  ) + 0 ) ) == true ) and ( TownHasHall( ( TownWithMine(  ) + 0 ) ) == true ) ) )
    set gCond_Workers2 = ( ( GetUnitCount( 'n00N' ) < 35 ) and ( ( TownHasMine( ( TownWithMine(  ) + 1 ) ) == true ) and ( TownHasHall( ( TownWithMine(  ) + 1 ) ) == true ) ) )
    set gCond_Workers3 = ( ( GetUnitCount( 'n00N' ) < 35 ) and ( ( TownHasMine( ( TownWithMine(  ) + 2 ) ) == true ) and ( TownHasHall( ( TownWithMine(  ) + 2 ) ) == true ) ) )
    set gCond_AttackWithWarriors = ( GetUnitCountDone( 'n00O' ) > 0 )
    set gCond_AttackWithPikemans = ( GetUnitCountDone( 'n00M' ) > 0 )
    set gCond_AttackWithArchers = ( GetUnitCountDone( 'n011' ) > 0 )
    set gCond_AttackWithAssasins = ( GetUnitCountDone( 'n00G' ) > 0 )
    set gCond_AttackWithHunters = ( GetUnitCountDone( 'l013' ) > 0 )
    set gCond_AttackWithRiders = ( GetUnitCountDone( 'n00E' ) > 0 )
    set gCond_AttackWithDragonFly = ( GetUnitCountDone( 'm002' ) > 0 )
    set gCond_AttackWithShamans = ( GetUnitCountDone( 'l017' ) > 0 )
    set gCond_AttackWithDragonPriest = ( GetUnitCountDone( 'l001' ) > 0 )
    set gCond_AttackWithJuggernaut = ( GetUnitCountDone( 'n04P' ) > 0 )
    set gCond_AttackWithSerpentKnight = ( GetUnitCountDone( 'l009' ) > 0 )
    set gCond_MinimunRiders = ( ( GetUnitCountDone( 'o01J' ) > 0 ) and ( GetUnitCountDone( 'o01O' ) > 0 ) )
    set gCond_AtacarAEnemigo = ( FoodUsed(  ) > 100 )
    set gCond_Farmeo_avanzado = ( FoodUsed(  ) > 87 )
    set gCond_Farmeo_Mediano = ( FoodUsed(  ) > 57 )
    set gCond_NeedExpansionRequiere = ( ( FoodUsed(  ) > 42 ) and ( ExpansionNeeded(  ) == true ) )
    set gCond_RushCommand = ( CheckLastCommand( false ) == 1 )
    set gCond_RushForces = ( FoodUsed(  ) < 75 )
endfunction

//***************************************************************************
//*
//*  Heroes
//*
//***************************************************************************

//===========================================================================
// Stores hero ID and skills
//===========================================================================
function SetHero takes integer order, integer heroid returns nothing
    if (order == 1) then
        set hero_id = heroid
        if (heroid == 'O004') then
            set skills1[ 1] = 'AOwk'
            set skills1[ 2] = 'AEim'
            set skills1[ 3] = 'A00Y'
            set skills1[ 4] = 'AOwk'
            set skills1[ 5] = 'AEim'
            set skills1[ 6] = 'AOww'
            set skills1[ 7] = 'A00Y'
            set skills1[ 8] = 'AOwk'
            set skills1[ 9] = 'AEim'
            set skills1[10] = 'A00Y'
            set skills1[11] = 'AOwk'
            set skills1[12] = 'AOww'
            set skills1[13] = 'AEim'
            set skills1[14] = 'A00Y'
            set skills1[15] = 'AOwk'
            set skills1[16] = 'AEim'
            set skills1[17] = 'A00Y'
            set skills1[18] = 'AOwk'
            set skills1[19] = 'AEim'
            set skills1[20] = 'A00Y'
        elseif (heroid == 'O02H') then
            set skills1[ 1] = 'AHtb'
            set skills1[ 2] = 'AEbl'
            set skills1[ 3] = 'AOcr'
            set skills1[ 4] = 'AHtb'
            set skills1[ 5] = 'AEbl'
            set skills1[ 6] = 'A0CK'
            set skills1[ 7] = 'AOcr'
            set skills1[ 8] = 'AHtb'
            set skills1[ 9] = 'AEbl'
            set skills1[10] = 'AOcr'
            set skills1[11] = 'AHtb'
            set skills1[12] = 'A07Q'
            set skills1[13] = 'AEbl'
            set skills1[14] = 'AOcr'
            set skills1[15] = 'AHtb'
            set skills1[16] = 'AEbl'
            set skills1[17] = 'AOcr'
            set skills1[18] = 'AHtb'
            set skills1[19] = 'AEbl'
            set skills1[20] = 'AOcr'
        elseif (heroid == 'H004') then
            set skills1[ 1] = 'A00W'
            set skills1[ 2] = 'A00V'
            set skills1[ 3] = 'AHbh'
            set skills1[ 4] = 'A00W'
            set skills1[ 5] = 'A00V'
            set skills1[ 6] = 'ANav'
            set skills1[ 7] = 'AHbh'
            set skills1[ 8] = 'A00W'
            set skills1[ 9] = 'A00V'
            set skills1[10] = 'AHbh'
            set skills1[11] = 'A00W'
            set skills1[12] = 'ANav'
            set skills1[13] = 'A00V'
            set skills1[14] = 'AHbh'
            set skills1[15] = 'A00W'
            set skills1[16] = 'A00V'
            set skills1[17] = 'AHbh'
            set skills1[18] = 'A00W'
            set skills1[19] = 'A00V'
            set skills1[20] = 'AHbh'
        elseif (heroid == 'O005') then
            set skills1[ 1] = 'A00X'
            set skills1[ 2] = 'KHA1'
            set skills1[ 3] = 'A00U'
            set skills1[ 4] = 'A00X'
            set skills1[ 5] = 'KHA1'
            set skills1[ 6] = 'ANto'
            set skills1[ 7] = 'A00U'
            set skills1[ 8] = 'A00X'
            set skills1[ 9] = 'KHA1'
            set skills1[10] = 'A00U'
            set skills1[11] = 'A00X'
            set skills1[12] = 'ANto'
            set skills1[13] = 'KHA1'
            set skills1[14] = 'A00U'
            set skills1[15] = 'A00X'
            set skills1[16] = 'KHA1'
            set skills1[17] = 'A00U'
            set skills1[18] = 'A00X'
            set skills1[19] = 'KHA1'
            set skills1[20] = 'A00U'
        endif
    elseif (order == 2) then
        set hero_id2 = heroid
        if (heroid == 'O004') then
            set skills2[ 1] = 'AOwk'
            set skills2[ 2] = 'AEim'
            set skills2[ 3] = 'A00Y'
            set skills2[ 4] = 'AOwk'
            set skills2[ 5] = 'AEim'
            set skills2[ 6] = 'AOww'
            set skills2[ 7] = 'A00Y'
            set skills2[ 8] = 'AOwk'
            set skills2[ 9] = 'AEim'
            set skills2[10] = 'A00Y'
            set skills2[11] = 'AOwk'
            set skills2[12] = 'AOww'
            set skills2[13] = 'AEim'
            set skills2[14] = 'A00Y'
            set skills2[15] = 'AOwk'
            set skills2[16] = 'AEim'
            set skills2[17] = 'A00Y'
            set skills2[18] = 'AOwk'
            set skills2[19] = 'AEim'
            set skills2[20] = 'A00Y'
        elseif (heroid == 'O02H') then
            set skills2[ 1] = 'AHtb'
            set skills2[ 2] = 'AEbl'
            set skills2[ 3] = 'AOcr'
            set skills2[ 4] = 'AHtb'
            set skills2[ 5] = 'AEbl'
            set skills2[ 6] = 'A0CK'
            set skills2[ 7] = 'AOcr'
            set skills2[ 8] = 'AHtb'
            set skills2[ 9] = 'AEbl'
            set skills2[10] = 'AOcr'
            set skills2[11] = 'AHtb'
            set skills2[12] = 'A07Q'
            set skills2[13] = 'AEbl'
            set skills2[14] = 'AOcr'
            set skills2[15] = 'AHtb'
            set skills2[16] = 'AEbl'
            set skills2[17] = 'AOcr'
            set skills2[18] = 'AHtb'
            set skills2[19] = 'AEbl'
            set skills2[20] = 'AOcr'
        elseif (heroid == 'H004') then
            set skills2[ 1] = 'A00W'
            set skills2[ 2] = 'A00V'
            set skills2[ 3] = 'AHbh'
            set skills2[ 4] = 'A00W'
            set skills2[ 5] = 'A00V'
            set skills2[ 6] = 'ANav'
            set skills2[ 7] = 'AHbh'
            set skills2[ 8] = 'A00W'
            set skills2[ 9] = 'A00V'
            set skills2[10] = 'AHbh'
            set skills2[11] = 'A00W'
            set skills2[12] = 'ANav'
            set skills2[13] = 'A00V'
            set skills2[14] = 'AHbh'
            set skills2[15] = 'A00W'
            set skills2[16] = 'A00V'
            set skills2[17] = 'AHbh'
            set skills2[18] = 'A00W'
            set skills2[19] = 'A00V'
            set skills2[20] = 'AHbh'
        elseif (heroid == 'O005') then
            set skills2[ 1] = 'A00X'
            set skills2[ 2] = 'KHA1'
            set skills2[ 3] = 'A00U'
            set skills2[ 4] = 'A00X'
            set skills2[ 5] = 'KHA1'
            set skills2[ 6] = 'ANto'
            set skills2[ 7] = 'A00U'
            set skills2[ 8] = 'A00X'
            set skills2[ 9] = 'KHA1'
            set skills2[10] = 'A00U'
            set skills2[11] = 'A00X'
            set skills2[12] = 'ANto'
            set skills2[13] = 'KHA1'
            set skills2[14] = 'A00U'
            set skills2[15] = 'A00X'
            set skills2[16] = 'KHA1'
            set skills2[17] = 'A00U'
            set skills2[18] = 'A00X'
            set skills2[19] = 'KHA1'
            set skills2[20] = 'A00U'
        endif
    elseif (order == 3) then
        set hero_id3 = heroid
        if (heroid == 'O004') then
            set skills3[ 1] = 'AOwk'
            set skills3[ 2] = 'AEim'
            set skills3[ 3] = 'A00Y'
            set skills3[ 4] = 'AOwk'
            set skills3[ 5] = 'AEim'
            set skills3[ 6] = 'AOww'
            set skills3[ 7] = 'A00Y'
            set skills3[ 8] = 'AOwk'
            set skills3[ 9] = 'AEim'
            set skills3[10] = 'A00Y'
            set skills3[11] = 'AOwk'
            set skills3[12] = 'AOww'
            set skills3[13] = 'AEim'
            set skills3[14] = 'A00Y'
            set skills3[15] = 'AOwk'
            set skills3[16] = 'AEim'
            set skills3[17] = 'A00Y'
            set skills3[18] = 'AOwk'
            set skills3[19] = 'AEim'
            set skills3[20] = 'A00Y'
        elseif (heroid == 'O02H') then
            set skills3[ 1] = 'AHtb'
            set skills3[ 2] = 'AEbl'
            set skills3[ 3] = 'AOcr'
            set skills3[ 4] = 'AHtb'
            set skills3[ 5] = 'AEbl'
            set skills3[ 6] = 'A0CK'
            set skills3[ 7] = 'AOcr'
            set skills3[ 8] = 'AHtb'
            set skills3[ 9] = 'AEbl'
            set skills3[10] = 'AOcr'
            set skills3[11] = 'AHtb'
            set skills3[12] = 'A07Q'
            set skills3[13] = 'AEbl'
            set skills3[14] = 'AOcr'
            set skills3[15] = 'AHtb'
            set skills3[16] = 'AEbl'
            set skills3[17] = 'AOcr'
            set skills3[18] = 'AHtb'
            set skills3[19] = 'AEbl'
            set skills3[20] = 'AOcr'
        elseif (heroid == 'H004') then
            set skills3[ 1] = 'A00W'
            set skills3[ 2] = 'A00V'
            set skills3[ 3] = 'AHbh'
            set skills3[ 4] = 'A00W'
            set skills3[ 5] = 'A00V'
            set skills3[ 6] = 'ANav'
            set skills3[ 7] = 'AHbh'
            set skills3[ 8] = 'A00W'
            set skills3[ 9] = 'A00V'
            set skills3[10] = 'AHbh'
            set skills3[11] = 'A00W'
            set skills3[12] = 'ANav'
            set skills3[13] = 'A00V'
            set skills3[14] = 'AHbh'
            set skills3[15] = 'A00W'
            set skills3[16] = 'A00V'
            set skills3[17] = 'AHbh'
            set skills3[18] = 'A00W'
            set skills3[19] = 'A00V'
            set skills3[20] = 'AHbh'
        elseif (heroid == 'O005') then
            set skills3[ 1] = 'A00X'
            set skills3[ 2] = 'KHA1'
            set skills3[ 3] = 'A00U'
            set skills3[ 4] = 'A00X'
            set skills3[ 5] = 'KHA1'
            set skills3[ 6] = 'ANto'
            set skills3[ 7] = 'A00U'
            set skills3[ 8] = 'A00X'
            set skills3[ 9] = 'KHA1'
            set skills3[10] = 'A00U'
            set skills3[11] = 'A00X'
            set skills3[12] = 'ANto'
            set skills3[13] = 'KHA1'
            set skills3[14] = 'A00U'
            set skills3[15] = 'A00X'
            set skills3[16] = 'KHA1'
            set skills3[17] = 'A00U'
            set skills3[18] = 'A00X'
            set skills3[19] = 'KHA1'
            set skills3[20] = 'A00U'
        endif
    endif
endfunction

//===========================================================================
// Selects hero IDs for three possible heroes
//===========================================================================
function SelectHeroes takes nothing returns nothing
    local integer roll = GetRandomInt(1,100)
    //1
    if (roll <= 4) then //1
        call SetHero( 1, 'O004' )
        call SetHero( 2, 'O02H' )
        call SetHero( 3, 'H004' )
    //2
    elseif (roll <= 8) then
        call SetHero( 1, 'O004' )
        call SetHero( 2, 'O02H' )
        call SetHero( 3, 'O005' )
    //3
    elseif (roll <= 12) then
        call SetHero( 1, 'O004' )
        call SetHero( 2, 'H004' )
        call SetHero( 3, 'O02H' )
    //4
    elseif (roll <= 16) then
        call SetHero( 1, 'O004' )
        call SetHero( 2, 'H004' )
        call SetHero( 3, 'O005' )
    //5
    elseif (roll <= 20) then
        call SetHero( 1, 'O004' )
        call SetHero( 2, 'O005' )
        call SetHero( 3, 'O02H' )
    //6
    elseif (roll <= 24) then
        call SetHero( 1, 'O004' )
        call SetHero( 2, 'O005' )
        call SetHero( 3, 'H004' )
    //7
    elseif (roll <= 28) then
        call SetHero( 1, 'O02H' )
        call SetHero( 2, 'O004' )
        call SetHero( 3, 'H004' )
    //8
    elseif (roll <= 32) then
        call SetHero( 1, 'O02H' )
        call SetHero( 2, 'O004' )
        call SetHero( 3, 'O005' )
    //9
    elseif (roll <= 36) then
        call SetHero( 1, 'O02H' )
        call SetHero( 2, 'H004' )
        call SetHero( 3, 'O004' )
    //10
    elseif (roll <= 40) then
        call SetHero( 1, 'O02H' )
        call SetHero( 2, 'H004' )
        call SetHero( 3, 'O005' )
    //11
    elseif (roll <= 44) then
        call SetHero( 1, 'O02H' )
        call SetHero( 2, 'O005' )
        call SetHero( 3, 'O004' )
    //12
    elseif (roll <= 48) then
        call SetHero( 1, 'O02H' )
        call SetHero( 2, 'O005' )
        call SetHero( 3, 'H004' )
    //13
    elseif (roll <= 52) then
        call SetHero( 1, 'H004' )
        call SetHero( 2, 'O004' )
        call SetHero( 3, 'O02H' )
    //14
    elseif (roll <= 56) then
        call SetHero( 1, 'H004' )
        call SetHero( 2, 'O004' )
        call SetHero( 3, 'O005' )
    //15
    elseif (roll <= 60) then
        call SetHero( 1, 'H004' )
        call SetHero( 2, 'O02H' )
        call SetHero( 3, 'O004' )
    //16
    elseif (roll <= 64) then
        call SetHero( 1, 'H004' )
        call SetHero( 2, 'O02H' )
        call SetHero( 3, 'O005' )
    //17
    elseif (roll <= 68) then
        call SetHero( 1, 'H004' )
        call SetHero( 2, 'O005' )
        call SetHero( 3, 'O004' )
    //18
    elseif (roll <= 72) then
        call SetHero( 1, 'H004' )
        call SetHero( 2, 'O005' )
        call SetHero( 3, 'O02H' )
    //19
    elseif (roll <= 76) then
        call SetHero( 1, 'O005' )
        call SetHero( 2, 'O004' )
        call SetHero( 3, 'O02H' )
    //20
    elseif (roll <= 80) then
        call SetHero( 1, 'O005' )
        call SetHero( 2, 'O004' )
        call SetHero( 3, 'H004' )
    //21
    elseif (roll <= 84) then
        call SetHero( 1, 'O005' )
        call SetHero( 2, 'O02H' )
        call SetHero( 3, 'O004' )
    //22
    elseif (roll <= 88) then
        call SetHero( 1, 'O005' )
        call SetHero( 2, 'O02H' )
        call SetHero( 3, 'H004' )
    //23
    elseif (roll <= 92) then
        call SetHero( 1, 'O005' )
        call SetHero( 2, 'H004' )
        call SetHero( 3, 'O004' )
    //24
    else
        call SetHero( 1, 'O005' )
        call SetHero( 2, 'H004' )
        call SetHero( 3, 'O02H' )
    endif
endfunction

//===========================================================================
// Returns the hero skill for the given hero and level
//===========================================================================
function ChooseHeroSkill takes nothing returns integer
    local integer curHero = GetHeroId()
    local integer level = GetHeroLevelAI()

    if (level > max_hero_level) then
        set max_hero_level = level
    endif

    if (curHero == hero_id) then
        return skills1[level]
    elseif (curHero == hero_id2) then
        return skills2[level]
    elseif (curHero == hero_id3) then
        return skills3[level]
    endif
    return 0
endfunction

//***************************************************************************
//*
//*  Building and Harvesting
//*
//***************************************************************************

//===========================================================================
// Specifies building priorities for workers
//===========================================================================
function BuildPriorities takes nothing returns nothing
    local integer mine = TownWithMine()
    if (gCond_BuildGreatHall) then
        call SetBuildAll( BUILD_UNIT, 1, 'o01H', -1 )
    endif
    if (gCond_HeroFirst) then
        call SetBuildAll( BUILD_UNIT, 1, hero_id, -1 )
    endif
    if (gCond_HeroSecond) then
        call SetBuildAll( BUILD_UNIT, 1, hero_id2, -1 )
    endif
    if (gCond_HeroThird) then
        call SetBuildAll( BUILD_UNIT, 1, hero_id3, -1 )
    endif
    call SetBuildAll( BUILD_UNIT, 1, 'n00N', -1 )
    if (gCond_BuildFarms) then
        call SetBuildAll( BUILD_UNIT, 1, 'o01P', -1 )
        call SetBuildAll( BUILD_UNIT, 2, 'o01P', -1 )
        call SetBuildAll( BUILD_UNIT, 3, 'o01P', -1 )
        call SetBuildAll( BUILD_UNIT, 4, 'o01P', -1 )
        call SetBuildAll( BUILD_UNIT, 5, 'o01P', -1 )
        call SetBuildAll( BUILD_UNIT, 6, 'o01P', -1 )
        call SetBuildAll( BUILD_UNIT, 7, 'o01P', -1 )
        call SetBuildAll( BUILD_UNIT, 8, 'o01P', -1 )
        call SetBuildAll( BUILD_UNIT, 9, 'o01P', -1 )
        call SetBuildAll( BUILD_UNIT, 10, 'o01P', -1 )
    endif
    if (gCond_Workers1) then
        call SetBuildAll( BUILD_UNIT, 2, 'n00N', -1 )
        call SetBuildAll( BUILD_UNIT, 3, 'n00N', -1 )
        call SetBuildAll( BUILD_UNIT, 4, 'n00N', -1 )
        call SetBuildAll( BUILD_UNIT, 5, 'n00N', -1 )
        call SetBuildAll( BUILD_UNIT, 6, 'n00N', -1 )
        call SetBuildAll( BUILD_UNIT, 7, 'n00N', -1 )
        call SetBuildAll( BUILD_UNIT, 8, 'n00N', -1 )
        call SetBuildAll( BUILD_UNIT, 9, 'n00N', -1 )
        call SetBuildAll( BUILD_UNIT, 10, 'n00N', -1 )
    endif
    if (gCond_BuildGeneral) then
        call SetBuildAll( BUILD_UNIT, 1, 'o01K', -1 )
        call SetBuildAll( BUILD_UNIT, 1, 'o01L', -1 )
        call SetBuildAll( BUILD_UNIT, 1, 'o01R', -1 )
    endif
    if (gCond_TrainWarriors) then
        call SetBuildAll( BUILD_UNIT, 1, 'n00O', -1 )
        call SetBuildAll( BUILD_UNIT, 2, 'n00O', -1 )
        call SetBuildAll( BUILD_UNIT, 3, 'n00O', -1 )
        call SetBuildAll( BUILD_UNIT, 4, 'n00O', -1 )
    endif
    call SetBuildAll( BUILD_UPGRADE, 1, 'Rnsi', -1 )
    if (gCond_Workers1) then
        call SetBuildAll( BUILD_UNIT, 11, 'n00N', -1 )
        call SetBuildAll( BUILD_UNIT, 12, 'n00N', -1 )
        call SetBuildAll( BUILD_UNIT, 13, 'n00N', -1 )
        call SetBuildAll( BUILD_UNIT, 14, 'n00N', -1 )
        call SetBuildAll( BUILD_UNIT, 15, 'n00N', -1 )
    endif
    if (gCond_BuildGeneral) then
        call SetBuildAll( BUILD_UNIT, 1, 'o03D', -1 )
        call SetBuildAll( BUILD_UNIT, 2, 'o01L', -1 )
    endif
    if (gCond_TrainArchers) then
        call SetBuildAll( BUILD_UNIT, 1, 'n011', -1 )
        call SetBuildAll( BUILD_UNIT, 2, 'n011', -1 )
        call SetBuildAll( BUILD_UNIT, 3, 'n011', -1 )
        call SetBuildAll( BUILD_UNIT, 4, 'n011', -1 )
    endif
    if (gCond_BuildGeneral) then
        call SetBuildAll( BUILD_UNIT, 1, 'o01M', -1 )
        call SetBuildAll( BUILD_UNIT, 2, 'o01M', -1 )
    endif
    call SetBuildAll( BUILD_UNIT, 1, 'n00M', -1 )
    call SetBuildAll( BUILD_UNIT, 2, 'n00M', -1 )
    call SetBuildAll( BUILD_UNIT, 3, 'n00M', -1 )
    call SetBuildAll( BUILD_UNIT, 4, 'n00M', -1 )
    call SetBuildAll( BUILD_UNIT, 5, 'n00M', -1 )
    if (gCond_BuildTowers) then
        call SetBuildAll( BUILD_UNIT, 1, 'o01Q', -1 )
        call SetBuildAll( BUILD_UNIT, 2, 'o01Q', -1 )
    endif
    call SetBuildAll( BUILD_UPGRADE, 1, 'Rnat', -1 )
    call SetBuildAll( BUILD_UPGRADE, 1, 'Rnam', -1 )
    call SetBuildAll( BUILD_UPGRADE, 1, 'Rora', -1 )
    call SetBuildAll( BUILD_UPGRADE, 1, 'R00I', -1 )
    if (gCond_NeedExp) then
        call BuildExpansion( 'o01H', 'o01H' )
    endif
    if (gCond_Workers2) then
        call SetBuildAll( BUILD_UNIT, 16, 'n00N', -1 )
        call SetBuildAll( BUILD_UNIT, 17, 'n00N', -1 )
        call SetBuildAll( BUILD_UNIT, 18, 'n00N', -1 )
        call SetBuildAll( BUILD_UNIT, 19, 'n00N', -1 )
        call SetBuildAll( BUILD_UNIT, 20, 'n00N', -1 )
        call SetBuildAll( BUILD_UNIT, 21, 'n00N', -1 )
        call SetBuildAll( BUILD_UNIT, 22, 'n00N', -1 )
        call SetBuildAll( BUILD_UNIT, 23, 'n00N', -1 )
        call SetBuildAll( BUILD_UNIT, 24, 'n00N', -1 )
        call SetBuildAll( BUILD_UNIT, 25, 'n00N', -1 )
        call SetBuildAll( BUILD_UNIT, 26, 'n00N', -1 )
        call SetBuildAll( BUILD_UNIT, 27, 'n00N', -1 )
        call SetBuildAll( BUILD_UNIT, 28, 'n00N', -1 )
        call SetBuildAll( BUILD_UNIT, 29, 'n00N', -1 )
        call SetBuildAll( BUILD_UNIT, 30, 'n00N', -1 )
    endif
    if (gCond_TrainWarriors) then
        call SetBuildAll( BUILD_UNIT, 5, 'n00O', -1 )
        call SetBuildAll( BUILD_UNIT, 6, 'n00O', -1 )
        call SetBuildAll( BUILD_UNIT, 7, 'n00O', -1 )
        call SetBuildAll( BUILD_UNIT, 8, 'n00O', -1 )
    endif
    if (gCond_TrainArchers) then
        call SetBuildAll( BUILD_UNIT, 5, 'n011', -1 )
        call SetBuildAll( BUILD_UNIT, 6, 'n011', -1 )
        call SetBuildAll( BUILD_UNIT, 7, 'n011', -1 )
        call SetBuildAll( BUILD_UNIT, 8, 'n011', -1 )
    endif
    call SetBuildAll( BUILD_UNIT, 6, 'n00M', -1 )
    call SetBuildAll( BUILD_UNIT, 7, 'n00M', -1 )
    call SetBuildAll( BUILD_UNIT, 8, 'n00M', -1 )
    call SetBuildAll( BUILD_UNIT, 9, 'n00M', -1 )
    if (gCond_BuildTowers) then
        call SetBuildAll( BUILD_UNIT, 3, 'o01Q', -1 )
        call SetBuildAll( BUILD_UNIT, 4, 'o01Q', -1 )
    endif
    call SetBuildAll( BUILD_UPGRADE, 1, 'R60T', -1 )
    call SetBuildAll( BUILD_UPGRADE, 1, 'R60S', -1 )
    call SetBuildAll( BUILD_UPGRADE, 2, 'Rnat', -1 )
    call SetBuildAll( BUILD_UPGRADE, 2, 'Rnam', -1 )
    call SetBuildAll( BUILD_UPGRADE, 2, 'Rora', -1 )
    call SetBuildAll( BUILD_UPGRADE, 2, 'R00I', -1 )
    if (gCond_BuildStronghold) then
        call SetBuildAll( BUILD_UNIT, 1, 'o01I', -1 )
    endif
    call SetBuildAll( BUILD_UPGRADE, 1, 'Rgfo', -1 )
    call SetBuildAll( BUILD_UPGRADE, 1, 'Rnen', -1 )
    call SetBuildAll( BUILD_UNIT, 1, 'n00G', -1 )
    call SetBuildAll( BUILD_UNIT, 2, 'n00G', -1 )
    call SetBuildAll( BUILD_UPGRADE, 1, 'Roch', -1 )
    if (gCond_BuildGeneral) then
        call SetBuildAll( BUILD_UNIT, 1, 'o03E', -1 )
        call SetBuildAll( BUILD_UNIT, 2, 'o03E', -1 )
    endif
    call SetBuildAll( BUILD_UNIT, 1, 'n04P', -1 )
    if (gCond_BuildGeneral) then
        call SetBuildAll( BUILD_UNIT, 1, 'o01N', -1 )
        call SetBuildAll( BUILD_UNIT, 2, 'o01N', -1 )
    endif
    call SetBuildAll( BUILD_UNIT, 1, 'l017', -1 )
    call SetBuildAll( BUILD_UNIT, 2, 'l017', -1 )
    call SetBuildAll( BUILD_UPGRADE, 1, 'Rnsw', -1 )
    if (gCond_BuildGeneral) then
        call SetBuildAll( BUILD_UNIT, 1, 'o01O', -1 )
        call SetBuildAll( BUILD_UNIT, 2, 'o01O', -1 )
    endif
    call SetBuildAll( BUILD_UNIT, 1, 'l013', -1 )
    call SetBuildAll( BUILD_UNIT, 2, 'l013', -1 )
    call SetBuildAll( BUILD_UPGRADE, 1, 'Roen', -1 )
    if (gCond_BuildTowers) then
        call SetBuildAll( BUILD_UNIT, 5, 'o01Q', -1 )
        call SetBuildAll( BUILD_UNIT, 6, 'o01Q', -1 )
    endif
    call SetBuildAll( BUILD_UNIT, 3, 'n00G', -1 )
    call SetBuildAll( BUILD_UNIT, 4, 'n00G', -1 )
    call SetBuildAll( BUILD_UNIT, 2, 'n04P', -1 )
    call SetBuildAll( BUILD_UNIT, 3, 'n04P', -1 )
    call SetBuildAll( BUILD_UNIT, 3, 'l017', -1 )
    call SetBuildAll( BUILD_UNIT, 4, 'l017', -1 )
    call SetBuildAll( BUILD_UNIT, 5, 'l017', -1 )
    call SetBuildAll( BUILD_UNIT, 3, 'l013', -1 )
    call SetBuildAll( BUILD_UNIT, 4, 'l013', -1 )
    call SetBuildAll( BUILD_UPGRADE, 3, 'Rnat', -1 )
    call SetBuildAll( BUILD_UPGRADE, 3, 'Rnam', -1 )
    call SetBuildAll( BUILD_UPGRADE, 3, 'Rora', -1 )
    call SetBuildAll( BUILD_UPGRADE, 3, 'R00I', -1 )
    if (gCond_NeedExp2) then
        call BuildExpansion( 'o01H', 'o01H' )
    endif
    if (gCond_Workers3) then
        call SetBuildAll( BUILD_UNIT, 31, 'n00N', -1 )
        call SetBuildAll( BUILD_UNIT, 32, 'n00N', -1 )
        call SetBuildAll( BUILD_UNIT, 33, 'n00N', -1 )
        call SetBuildAll( BUILD_UNIT, 34, 'n00N', -1 )
        call SetBuildAll( BUILD_UNIT, 35, 'n00N', -1 )
    endif
    if (gCond_BuildTowers) then
        call SetBuildAll( BUILD_UNIT, 7, 'o01Q', -1 )
        call SetBuildAll( BUILD_UNIT, 8, 'o01Q', -1 )
    endif
    call SetBuildAll( BUILD_UPGRADE, 4, 'Rnat', -1 )
    call SetBuildAll( BUILD_UPGRADE, 4, 'Rnam', -1 )
    call SetBuildAll( BUILD_UPGRADE, 4, 'Rora', -1 )
    call SetBuildAll( BUILD_UPGRADE, 4, 'R00I', -1 )
    if (gCond_BuildFortress) then
        call SetBuildAll( BUILD_UNIT, 1, 'o01J', -1 )
    endif
    call SetBuildAll( BUILD_UPGRADE, 2, 'Roch', -1 )
    call SetBuildAll( BUILD_UPGRADE, 2, 'Rgfo', -1 )
    call SetBuildAll( BUILD_UPGRADE, 2, 'Rnsw', -1 )
    call SetBuildAll( BUILD_UPGRADE, 1, 'R01L', -1 )
    call SetBuildAll( BUILD_UPGRADE, 1, 'R043', -1 )
    call SetBuildAll( BUILD_UNIT, 6, 'l017', -1 )
    call SetBuildAll( BUILD_UNIT, 1, 'l001', -1 )
    call SetBuildAll( BUILD_UNIT, 2, 'l001', -1 )
    call SetBuildAll( BUILD_UNIT, 3, 'l001', -1 )
    call SetBuildAll( BUILD_UNIT, 1, 'n00E', -1 )
    call SetBuildAll( BUILD_UNIT, 2, 'n00E', -1 )
    call SetBuildAll( BUILD_UNIT, 3, 'n00E', -1 )
    call SetBuildAll( BUILD_UPGRADE, 1, 'R01M', -1 )
    call SetBuildAll( BUILD_UNIT, 1, 'l009', -1 )
    call SetBuildAll( BUILD_UNIT, 2, 'l009', -1 )
    call SetBuildAll( BUILD_UPGRADE, 1, 'Rnsb', -1 )
    call SetBuildAll( BUILD_UNIT, 1, 'm002', -1 )
    call SetBuildAll( BUILD_UNIT, 2, 'm002', -1 )
    call SetBuildAll( BUILD_UNIT, 3, 'm002', -1 )
    call SetBuildAll( BUILD_UNIT, 4, 'm002', -1 )
    call SetBuildAll( BUILD_UPGRADE, 1, 'Rguv', -1 )
    if (gCond_BuildTowers) then
        call SetBuildAll( BUILD_UNIT, 9, 'o01Q', -1 )
        call SetBuildAll( BUILD_UNIT, 10, 'o01Q', -1 )
    endif
    call SetBuildAll( BUILD_UPGRADE, 5, 'Rnat', -1 )
    call SetBuildAll( BUILD_UPGRADE, 5, 'Rnam', -1 )
    call SetBuildAll( BUILD_UPGRADE, 5, 'Rora', -1 )
    call SetBuildAll( BUILD_UPGRADE, 5, 'R00I', -1 )
    call SetBuildAll( BUILD_UPGRADE, 3, 'Rnsw', -1 )
    call SetBuildAll( BUILD_UPGRADE, 2, 'R60T', -1 )
    call SetBuildAll( BUILD_UPGRADE, 2, 'R60S', -1 )
    call SetBuildAll( BUILD_UPGRADE, 6, 'Rnat', -1 )
    call SetBuildAll( BUILD_UPGRADE, 6, 'Rnam', -1 )
    call SetBuildAll( BUILD_UPGRADE, 6, 'Rora', -1 )
    call SetBuildAll( BUILD_UPGRADE, 6, 'R00I', -1 )
    call SetBuildAll( BUILD_UPGRADE, 4, 'Rnsw', -1 )
    call SetBuildAll( BUILD_UNIT, 4, 'n00E', -1 )
    call SetBuildAll( BUILD_UNIT, 5, 'n00E', -1 )
    call SetBuildAll( BUILD_UNIT, 6, 'n00E', -1 )
    call SetBuildAll( BUILD_UNIT, 7, 'n00E', -1 )
    call SetBuildAll( BUILD_UNIT, 5, 'l013', -1 )
    call SetBuildAll( BUILD_UNIT, 6, 'l013', -1 )
    call SetBuildAll( BUILD_UNIT, 7, 'l013', -1 )
    call SetBuildAll( BUILD_UNIT, 8, 'l013', -1 )
endfunction

//===========================================================================
// Specifies harvesting priorities for workers
//===========================================================================
function HarvestPriorities takes nothing returns nothing
    local integer mine = TownWithMine()
    local integer allGold = GetUnitCountDone('n00N')
    local integer allWood = GetUnitCountDone('n00N')
    local integer numWorkers
    set numWorkers = 5
    call HarvestGold( mine + 0, numWorkers )
    set numWorkers = 5
    call HarvestGold( mine + 1, numWorkers )
    set numWorkers = 5
    call HarvestGold( mine + 2, numWorkers )
    set numWorkers = 35
    call HarvestWood( mine, numWorkers )
endfunction

//===========================================================================
// Determines all building and harvesting assignments for workers
//===========================================================================
function WorkerAssignment takes nothing returns nothing
    loop
        call UpdateConditions(  )

        // Harvesting
        call ClearHarvestAI(  )
        call HarvestPriorities(  )

        // Building
        call InitBuildArray(  )
        call BuildPriorities(  )

        call Sleep( 2 )
    endloop
endfunction

//***************************************************************************
//*
//*  Attacking
//*
//***************************************************************************

//===========================================================================
// Returns true if the minimum forces for an attack exist
//===========================================================================
function HaveMinimumAttackers takes nothing returns boolean
    local integer count

    // Check for attack wave limit
    if (attackWave > 5) then
        return false
    endif

    // Attack Group: Minimun Units
    if (gCond_TrainWarriors) then
        set count = GetUnitCountDone( 'n00O' )
        if (count < 4) then
            return false
        endif
    endif
    if (gCond_MinimunRiders) then
        set count = GetUnitCountDone( 'n00E' )
        if (count < 2) then
            return false
        endif
    endif
    return true
endfunction

//===========================================================================
// Assigns units to attack based on the given attack group
//===========================================================================
function PrepareAttackGroup takes integer groupID returns nothing
    local integer all

    // Attack Group #1: All Units
    if (groupID == 1) then
        set all = GetUnitCountDone( hero_id )
        call AddAttackUnit( all, all, hero_id )
        set all = GetUnitCountDone( hero_id2 )
        call AddAttackUnit( all, all, hero_id2 )
        set all = GetUnitCountDone( hero_id3 )
        call AddAttackUnit( all, all, hero_id3 )
        if (gCond_AttackWithWarriors) then
            set all = GetUnitCountDone( 'n00O' )
            call AddAttackUnit( all, all, 'n00O' )
        endif
        if (gCond_AttackWithArchers) then
            set all = GetUnitCountDone( 'n011' )
            call AddAttackUnit( all, all, 'n011' )
        endif
        if (gCond_AttackWithPikemans) then
            set all = GetUnitCountDone( 'n00M' )
            call AddAttackUnit( all, all, 'n00M' )
        endif
        if (gCond_AttackWithAssasins) then
            set all = GetUnitCountDone( 'n00G' )
            call AddAttackUnit( all, all, 'n00G' )
        endif
        if (gCond_AttackWithShamans) then
            set all = GetUnitCountDone( 'l017' )
            call AddAttackUnit( all, all, 'l017' )
        endif
        if (gCond_AttackWithDragonPriest) then
            set all = GetUnitCountDone( 'l001' )
            call AddAttackUnit( all, all, 'l001' )
        endif
        if (gCond_AttackWithJuggernaut) then
            set all = GetUnitCountDone( 'n04P' )
            call AddAttackUnit( all, all, 'n04P' )
        endif
        if (gCond_AttackWithSerpentKnight) then
            set all = GetUnitCountDone( 'l009' )
            call AddAttackUnit( all, all, 'l009' )
        endif
        if (gCond_AttackWithHunters) then
            set all = GetUnitCountDone( 'l013' )
            call AddAttackUnit( all, all, 'l013' )
        endif
        if (gCond_AttackWithRiders) then
            set all = GetUnitCountDone( 'n00E' )
            call AddAttackUnit( all, all, 'n00E' )
        endif
        if (gCond_AttackWithDragonFly) then
            set all = GetUnitCountDone( 'm002' )
            call AddAttackUnit( all, all, 'm002' )
        endif

        // Attack Group #2: Minimun Units
    elseif (groupID == 2) then
        set all = GetUnitCountDone( hero_id )
        call AddAttackUnit( all, all, hero_id )
        if (gCond_TrainWarriors) then
            set all = GetUnitCountDone( 'n00O' )
            call AddAttackUnit( all, -1,  'n00O' )
        endif
        if (gCond_MinimunRiders) then
            set all = GetUnitCountDone( 'n00E' )
            call AddAttackUnit( all, -1,  'n00E' )
        endif

    endif
endfunction

//===========================================================================
// Prepares an attack group based on the current attack wave
//===========================================================================
function PrepareForces takes nothing returns nothing
    if (attackWave == 1) then
        call PrepareAttackGroup( 1 )
    elseif (attackWave == 2) then
        call PrepareAttackGroup( 1 )
    elseif (attackWave == 3) then
        call PrepareAttackGroup( 1 )
    elseif (attackWave == 4) then
        call PrepareAttackGroup( 1 )
    elseif (attackWave == 5) then
        call PrepareAttackGroup( 1 )
    endif
endfunction

//===========================================================================
// Sleep delays for each attack wave
//===========================================================================
function AttackWaveDelay takes integer inWave returns nothing
    if (inWave < nextDelay) then
        return
    endif

    set nextDelay = inWave + 1
endfunction

//===========================================================================
// Advances attack wave counter
//===========================================================================
function AttackWaveUpdate takes nothing returns nothing
    call AttackWaveDelay( attackWave )
    set attackWave = attackWave + 1
    if (attackWave > 5) then
        set attackWave = 1
        set nextDelay = attackWave + 1
    endif
endfunction

//===========================================================================
// Basic attack functionality
//===========================================================================
function AttackTarget takes unit target, boolean addAlliance returns nothing
    if (target == null) then
        return
    endif
    if (addAlliance) then
        call SetAllianceTarget( target )
    endif
    call FormGroup( 3, true )
    call AttackMoveKillA( target )
    if (not addAlliance) then
        call SetAllianceTarget( null )
    endif
endfunction

//===========================================================================
// Initiates an attack based on target priorities
//===========================================================================
function LaunchAttack takes nothing returns nothing
    local unit target = null
    local boolean setAlly = true

    // Don't launch any attack while town is threatened
    if (TownThreatened()) then
        call Sleep( 2 )
        return
    endif

    //STANDARD AND DEFENDER
    //----------------------------------------------------------------------------------------------------
    if (Comport11 <= 50) then
        //Target Priority #1
        // if (RushCom2 <= 50) then
        //     if (gCond_RushForces) then
        //         if (target == null) then
        //             set target = GetMegaTarget()
        //         endif
        //     endif
        // endif

        // Target Priority #2
        if (gCond_NeedExpansionRequiere) then
            if (target == null) then
                set target = GetExpansionFoe()
                if (target != null) then
                    set take_exp = false
                endif
            endif
        endif

        // Target Priority #3
        if (gCond_AtacarAEnemigo) then
            if (target == null) then
                set target = GetAllianceTarget()
                if (target != null) then
                    set setAlly = false
                endif
            endif
        

            // Target Priority #4
            if (target == null) then
                set target = GetMegaTarget()
            endif

        
            // Target Priority #5
            if (target == null) then
                set target = GetEnemyExpansion()
                if (target == null) then
                    call StartGetEnemyBase(  )
                    loop
                        exitwhen (not WaitGetEnemyBase())
                        call SuicideSleep( 1 )
                    endloop
                    set target = GetEnemyBase()
                endif
            endif

            // Target Priority #6
            if (target == null) then
                set target = GetEnemyExpansion()
            endif
        endif

        // Target Priority #7
        if (gCond_Farmeo_avanzado) then
            if (target == null) then
                set target = GetCreepCamp( 21, 100, true )
            endif
        endif

        // Target Priority #8
        if (gCond_Farmeo_Mediano) then
            if (target == null) then
                set target = GetCreepCamp( 11, 20, true )
            endif
        endif

        // Target Priority #9
        if (target == null) then
            set target = GetCreepCamp( 0, 10, false )
        endif
        //RUSH
        //----------------------------------------------------------------------------------------------------
    else   
        
        // Target Priority #1
        if (gCond_NeedExpansionRequiere) then
            if (target == null) then
                set target = GetExpansionFoe()
                if (target != null) then
                    set take_exp = false
                endif
            endif
        endif
        
        //Target Priority #2
        if (target == null) then
            set target = GetAllianceTarget()
            if (target != null) then
                set setAlly = false
            endif
        endif

        if (target == null) then
            set target = GetMegaTarget()
        endif

        if (target == null) then
            set target = GetEnemyExpansion()
            if (target == null) then
                call StartGetEnemyBase(  )
                loop
                    exitwhen (not WaitGetEnemyBase())
                    call SuicideSleep( 1 )
                endloop
                set target = GetEnemyBase()
            endif
        endif

        if (target == null) then
            set target = GetEnemyExpansion()
        endif

        // Target Priority #3
        if (gCond_AtacarAEnemigo) then
            if (target == null) then
                set target = GetAllianceTarget()
                if (target != null) then
                    set setAlly = false
                endif
            endif
        

            // Target Priority #4
            if (target == null) then
                set target = GetMegaTarget()
            endif

        
            // Target Priority #5
            if (target == null) then
                set target = GetEnemyExpansion()
                if (target == null) then
                    call StartGetEnemyBase(  )
                    loop
                        exitwhen (not WaitGetEnemyBase())
                        call SuicideSleep( 1 )
                    endloop
                    set target = GetEnemyBase()
                endif
            endif

            // Target Priority #6
            if (target == null) then
                set target = GetEnemyExpansion()
            endif
        endif

        // Target Priority #7
        if (gCond_Farmeo_avanzado) then
            if (target == null) then
                set target = GetCreepCamp( 21, 100, true )
            endif
        endif

        // Target Priority #8
        if (gCond_Farmeo_Mediano) then
            if (target == null) then
                set target = GetCreepCamp( 11, 20, true )
            endif
        endif

        // Target Priority #9
        // if (target == null) then
        //     set target = GetCreepCamp( 0, 10, false )
        // endif
        
    endif
    // Attack the target and increment attack wave
    if (target != null) then
        call AttackTarget( target, setAlly )
        call AttackWaveUpdate(  )
    else
        // If no target was found, sleep a bit before trying again
        call Sleep( 0.1 )
    endif
endfunction

//===========================================================================
// Determines all attacking assignments
//===========================================================================
function AttackAssignment takes nothing returns nothing
    call StaggerSleep( 0, 2 )
    if (attackWave == 1) then
        call AttackWaveDelay( 0 )
    endif
    loop
        loop
            call UpdateConditions(  )
            exitwhen (HaveMinimumAttackers() and not CaptainRetreating())
            call Sleep( 2 )
        endloop
        call RemoveInjuries(  )
        call ResetAttackUnits(  )
        call PrepareForces(  )
        call LaunchAttack(  )
    endloop
endfunction

//***************************************************************************
//*
//*  Main Entry Point
//*
//***************************************************************************

//===========================================================================
function main takes nothing returns nothing
    call InitAI(  )
    call SetPlayerName( ai_player, "Lizardman Organization" )
    call InitOptions(  )
    call SelectHeroes(  )
    call CreateCaptains(  )
    call SetHeroLevels( function ChooseHeroSkill )

    call Sleep( 0.1 )
    call StartThread( function WorkerAssignment )
    call StartThread( function AttackAssignment )
    call PlayGame(  )
endfunction

