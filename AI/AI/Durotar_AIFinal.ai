//===========================================================================
// 
// Durotar Horde
// 
//   Warcraft III AI script
//   Generated by the Warcraft III World Editor
// 
//===========================================================================

//***************************************************************************
//*
//*  Global Variables
//*
//***************************************************************************

globals
    integer                 attackWave                 = 1
    integer                 nextDelay                  = 0
    integer                 awGold                     = 0
    integer                 awWood                     = 0

    // Conditions
    boolean                 gCond_Attack_Enemy         = false
    boolean                 gCond_Need_Expansion       = false
    boolean                 gCond_Baluarte0            = false
    boolean                 gCond_Castillos0           = false
    boolean                 gCond_Herrerias            = false
    boolean                 gCond_Heroe_temprano       = false
    boolean                 gCond_Si_ya_estamos_avanzados = false
    boolean                 gCond_TotalTowers          = false
    boolean                 gCond_trabajadores_para_expansion = false
    boolean                 gCond_ConteoGrunts         = false
    boolean                 gCond_TenemosSpearThrowers = false
    boolean                 gCond_TenemosJineteViento  = false
    boolean                 gCond_TenemosCatapultas    = false
    boolean                 gCond_TenemosBrujos        = false
    boolean                 gCond_TenemosBestiasKodo   = false
    boolean                 gCond_TenemosWarStationM   = false
    boolean                 gCond_TenemosDragones      = false
    boolean                 gCond_TenemosShamanes      = false
    boolean                 gCond_TenemosIncursores    = false
    boolean                 gCond_HeroeSegundo         = false
    boolean                 gCond_HeroeTercero         = false
    boolean                 gCond_Hachas1              = false
    boolean                 gCond_Armas1               = false
    boolean                 gCond_Armadura1            = false
    boolean                 gCond_Barricada1           = false
    boolean                 gCond_Armadura2            = false
    boolean                 gCond_Armadura3            = false
    boolean                 gCond_Armadura4            = false
    boolean                 gCond_Armadura5            = false
    boolean                 gCond_Armadura6            = false
    boolean                 gCond_Armas2               = false
    boolean                 gCond_Armas3               = false
    boolean                 gCond_Armas4               = false
    boolean                 gCond_Armas5               = false
    boolean                 gCond_Armas6               = false
    boolean                 gCond_Barricada2           = false
    boolean                 gCond_Barricada3           = false
    boolean                 gCond_Barricada4           = false
    boolean                 gCond_Barricada5           = false
    boolean                 gCond_Barricada6           = false
    boolean                 gCond_Hachas2              = false
    boolean                 gCond_Hachas3              = false
    boolean                 gCond_Hachas4              = false
    boolean                 gCond_Hachas5              = false
    boolean                 gCond_Hachas6              = false
    boolean                 gCond_ActiveExpansionTown  = false
    boolean                 gCond_TenemosRylaks        = false
    boolean                 gCond_Trabajadores1        = false
    boolean                 gCond_Trabajadores2        = false
    boolean                 gCond_FarmeoBasico         = false
    boolean                 gCond_FarmeoAvanzado       = false
    boolean                 gCond_FarmeoElite          = false
    boolean                 gCond_Attack_Enemy_Final   = false
    boolean                 gCond_NeedExps             = false
    boolean                 gCond_Workers1             = false
    boolean                 gCond_Workers2             = false
    boolean                 gCond_AtacarAEnemigo       = false
    boolean                 gCond_Farmeo_avanzado      = false
    boolean                 gCond_Farmeo_Mediano       = false
    boolean                 gCond_NeedExpansionRequiere = false
    boolean                 gCond_RushCommand          = false
endglobals

//***************************************************************************
//*
//*  Utility Functions
//*
//***************************************************************************

//===========================================================================
function CheckLastCommand takes boolean pop returns integer
    local integer cmd = GetLastCommand()
    if (pop) then
        call PopLastCommand(  )
    endif
    return cmd
endfunction

//===========================================================================
function CheckLastCommandData takes boolean pop returns integer
    local integer data = GetLastData()
    if (pop) then
        call PopLastCommand(  )
    endif
    return data
endfunction

//===========================================================================
function TotalFoodProduced takes nothing returns integer
    return GetPlayerState(ai_player,PLAYER_STATE_RESOURCE_FOOD_CAP)
endfunction

//===========================================================================
function ExpansionNeeded takes nothing returns boolean
    return take_exp
endfunction

//===========================================================================
function BuildExpansion takes integer hallID, integer mineID returns nothing
    if (HallsCompleted(hallID)) then
        call SetBuildExpa( TownCount(hallID) + 1, mineID )
    endif
endfunction

//===========================================================================
function CurrentAttackWave takes nothing returns integer
    return attackWave
endfunction

//===========================================================================
function ResetAttackUnits takes nothing returns nothing
    set awGold = 0
    set awWood = 0
    call InitAssaultGroup(  )
endfunction

//===========================================================================
function AddAttackUnit takes integer minQty, integer maxQty, integer unitID returns nothing
    // Track attacking gold workers
    if (unitID == 'opeo') then
        set awGold = awGold + minQty
    endif

    // Track attacking wood workers
    if (unitID == 'opeo') then
        set awWood = awWood + minQty
    endif

    call SetAssaultGroup( minQty, maxQty, unitID )
endfunction

//***************************************************************************
//*
//*  Basic Options
//*
//***************************************************************************

//===========================================================================
function InitOptions takes nothing returns nothing
    call SetCampaignAI(  )
    call SetDefendPlayer( false )
    call SetRandomPaths( false )
    call SetTargetHeroes( true )
    call SetPeonsRepair( true )
    call SetHeroesFlee( true )
    call SetHeroesBuyItems( true )
    call SetUnitsFlee( true )
    call SetGroupsFlee( false )
    call SetWatchMegaTargets( true )
    call SetIgnoreInjured( true )
    call SetHeroesTakeItems( true )
    call SetSlowChopping( false )
    call SetCaptainChanges( true )
    call SetSmartArtillery( true )
endfunction

//***************************************************************************
//*
//*  Conditions
//*
//***************************************************************************

//===========================================================================
// Updates the values of all preset conditions
//===========================================================================
function UpdateConditions takes nothing returns nothing
    set gCond_Attack_Enemy = ( ( TownThreatened(  ) == false ) and ( FoodUsed(  ) > 50 ) )
    set gCond_Need_Expansion = ( GetMinesOwned(  ) < 2 )
    set gCond_Baluarte0 = ( ( GetUnitCount( 'ostr' ) == 0 ) and ( GetUnitCount( 'ofrt' ) == 0 ) )
    set gCond_Castillos0 = ( GetUnitCount( 'ofrt' ) == 0 )
    set gCond_Herrerias = ( GetUnitCount( 'ofor' ) < 2 )
    set gCond_Heroe_temprano = ( GetUnitCountDone( 'oalt' ) == 1 )
    set gCond_Si_ya_estamos_avanzados = ( GetUnitCount( 'ofrt' ) != 1 )
    set gCond_TotalTowers = ( GetUnitCount( 'owtw' ) <= 5 )
    set gCond_trabajadores_para_expansion = ( TownHasMine( 2 ) == true )
    set gCond_ConteoGrunts = ( GetUnitCount( 'ogru' ) > 0 )
    set gCond_TenemosSpearThrowers = ( GetUnitCount( 'ohun' ) > 0 )
    set gCond_TenemosJineteViento = ( GetUnitCount( 'owyv' ) > 0 )
    set gCond_TenemosCatapultas = ( GetUnitCount( 'ocat' ) > 0 )
    set gCond_TenemosBrujos = ( GetUnitCount( 'oshm' ) > 0 )
    set gCond_TenemosBestiasKodo = ( GetUnitCount( 'okod' ) > 0 )
    set gCond_TenemosWarStationM = ( GetUnitCount( 'ospw' ) > 0 )
    set gCond_TenemosDragones = ( GetUnitCount( 'otau' ) > 0 )
    set gCond_TenemosShamanes = ( GetUnitCount( 'odoc' ) > 0 )
    set gCond_TenemosIncursores = ( GetUnitCount( 'orai' ) > 0 )
    set gCond_HeroeSegundo = ( GetUnitCountDone( 'ostr' ) == 1 )
    set gCond_HeroeTercero = ( GetUnitCountDone( 'ofrt' ) == 1 )
    set gCond_Hachas1 = ( GetUpgradeLevel( 'Rome' ) < 1 )
    set gCond_Armas1 = ( GetUpgradeLevel( 'Rora' ) < 1 )
    set gCond_Armadura1 = ( GetUpgradeLevel( 'Roar' ) < 1 )
    set gCond_Barricada1 = ( GetUpgradeLevel( 'Rosp' ) < 1 )
    set gCond_Armadura2 = ( GetUpgradeLevel( 'Roar' ) < 2 )
    set gCond_Armadura3 = ( GetUpgradeLevel( 'Roar' ) < 3 )
    set gCond_Armadura4 = ( GetUpgradeLevel( 'Roar' ) < 4 )
    set gCond_Armadura5 = ( GetUpgradeLevel( 'Roar' ) < 5 )
    set gCond_Armadura6 = ( GetUpgradeLevel( 'Roar' ) < 6 )
    set gCond_Armas2 = ( GetUpgradeLevel( 'Rora' ) < 2 )
    set gCond_Armas3 = ( GetUpgradeLevel( 'Rora' ) < 3 )
    set gCond_Armas4 = ( GetUpgradeLevel( 'Rora' ) < 4 )
    set gCond_Armas5 = ( GetUpgradeLevel( 'Rora' ) < 5 )
    set gCond_Armas6 = ( GetUpgradeLevel( 'Rora' ) < 6 )
    set gCond_Barricada2 = ( GetUpgradeLevel( 'Rosp' ) < 2 )
    set gCond_Barricada3 = ( GetUpgradeLevel( 'Rosp' ) < 3 )
    set gCond_Barricada4 = ( GetUpgradeLevel( 'Rosp' ) < 4 )
    set gCond_Barricada5 = ( GetUpgradeLevel( 'Rosp' ) < 5 )
    set gCond_Barricada6 = ( GetUpgradeLevel( 'Rosp' ) < 6 )
    set gCond_Hachas2 = ( GetUpgradeLevel( 'Rome' ) < 2 )
    set gCond_Hachas3 = ( GetUpgradeLevel( 'Rome' ) < 3 )
    set gCond_Hachas4 = ( GetUpgradeLevel( 'Rome' ) < 4 )
    set gCond_Hachas5 = ( GetUpgradeLevel( 'Rome' ) < 5 )
    set gCond_Hachas6 = ( GetUpgradeLevel( 'Rome' ) < 6 )
    set gCond_ActiveExpansionTown = ( ( TownHasHall( ( TownWithMine(  ) + 1 ) ) == true ) and ( TownHasMine( ( TownWithMine(  ) + 1 ) ) == true ) )
    set gCond_TenemosRylaks = ( GetUnitCount( 'otbr' ) > 0 )
    set gCond_Trabajadores1 = ( ( TownHasMine( TownWithMine(  ) ) == true ) and ( TownHasHall( TownWithMine(  ) ) == true ) )
    set gCond_Trabajadores2 = ( ( TownHasMine( ( TownWithMine(  ) + 1 ) ) == true ) and ( TownHasHall( ( TownWithMine(  ) + 1 ) ) == true ) )
    set gCond_FarmeoBasico = ( ( CreepsOnMap(  ) == true ) and ( FoodUsed(  ) >= 15 ) )
    set gCond_FarmeoAvanzado = ( ( CreepsOnMap(  ) == true ) and ( FoodUsed(  ) >= 40 ) )
    set gCond_FarmeoElite = ( ( CreepsOnMap(  ) == true ) and ( FoodUsed(  ) >= 60 ) )
    set gCond_Attack_Enemy_Final = ( ( TownThreatened(  ) == false ) and ( FoodUsed(  ) > 100 ) )
    set gCond_NeedExps = ( ( ExpansionNeeded(  ) == true ) and ( FoodUsed(  ) >= 40 ) )
    set gCond_Workers1 = ( ( GetUnitCount( 'opeo' ) < 20 ) and ( ( TownHasMine( TownWithMine(  ) ) == true ) and ( TownHasHall( TownWithMine(  ) ) == true ) ) )
    set gCond_Workers2 = ( ( GetUnitCount( 'opeo' ) < 20 ) and ( ( TownHasMine( ( TownWithMine(  ) + 1 ) ) == true ) and ( TownHasHall( ( TownWithMine(  ) + 1 ) ) == true ) ) )
    set gCond_AtacarAEnemigo = ( FoodUsed(  ) > 120 )
    set gCond_Farmeo_avanzado = ( FoodUsed(  ) > 90 )
    set gCond_Farmeo_Mediano = ( FoodUsed(  ) > 60 )
    set gCond_NeedExpansionRequiere = ( ( FoodUsed(  ) > 50 ) and ( ExpansionNeeded(  ) == true ) )
    set gCond_RushCommand = ( CheckLastCommand( false ) == 1 )
endfunction

//***************************************************************************
//*
//*  Heroes
//*
//***************************************************************************

//===========================================================================
// Stores hero ID and skills
//===========================================================================
function SetHero takes integer order, integer heroid returns nothing
    if (order == 1) then
        set hero_id = heroid
        if (heroid == 'Otch') then
            set skills1[ 1] = 'PA01'
            set skills1[ 2] = 'ANsq'
            set skills1[ 3] = 'AOae'
            set skills1[ 4] = 'PA01'
            set skills1[ 5] = 'ANsq'
            set skills1[ 6] = 'AOre'
            set skills1[ 7] = 'AOae'
            set skills1[ 8] = 'PA01'
            set skills1[ 9] = 'ANsq'
            set skills1[10] = 'AOae'
            set skills1[11] = 'PA01'
            set skills1[12] = 'AOre'
            set skills1[13] = 'ANsq'
            set skills1[14] = 'AOae'
            set skills1[15] = 'PA01'
            set skills1[16] = 'ANsq'
            set skills1[17] = 'AOae'
            set skills1[18] = 'PA01'
            set skills1[19] = 'ANsq'
            set skills1[20] = 'AOae'
        elseif (heroid == 'Obla') then
            set skills1[ 1] = 'AOwk'
            set skills1[ 2] = 'AOcr'
            set skills1[ 3] = 'AOmi'
            set skills1[ 4] = 'AOwk'
            set skills1[ 5] = 'AOcr'
            set skills1[ 6] = 'AOww'
            set skills1[ 7] = 'AOmi'
            set skills1[ 8] = 'AOwk'
            set skills1[ 9] = 'AOcr'
            set skills1[10] = 'AOmi'
            set skills1[11] = 'AOwk'
            set skills1[12] = 'AOww'
            set skills1[13] = 'AOcr'
            set skills1[14] = 'AOmi'
            set skills1[15] = 'AOwk'
            set skills1[16] = 'AOcr'
            set skills1[17] = 'AOmi'
            set skills1[18] = 'AOwk'
            set skills1[19] = 'AOcr'
            set skills1[20] = 'AOmi'
        elseif (heroid == 'Ofar') then
            set skills1[ 1] = 'AOfs'
            set skills1[ 2] = 'AOsf'
            set skills1[ 3] = 'AOcl'
            set skills1[ 4] = 'AOfs'
            set skills1[ 5] = 'AOsf'
            set skills1[ 6] = 'AOeq'
            set skills1[ 7] = 'AOcl'
            set skills1[ 8] = 'AOfs'
            set skills1[ 9] = 'AOsf'
            set skills1[10] = 'AOcl'
            set skills1[11] = 'AOfs'
            set skills1[12] = 'AOeq'
            set skills1[13] = 'AOsf'
            set skills1[14] = 'AOcl'
            set skills1[15] = 'AOfs'
            set skills1[16] = 'AOsf'
            set skills1[17] = 'AOcl'
            set skills1[18] = 'AOfs'
            set skills1[19] = 'AOsf'
            set skills1[20] = 'AOcl'
        endif
    elseif (order == 2) then
        set hero_id2 = heroid
        if (heroid == 'Otch') then
            set skills2[ 1] = 'PA01'
            set skills2[ 2] = 'ANsq'
            set skills2[ 3] = 'AOae'
            set skills2[ 4] = 'PA01'
            set skills2[ 5] = 'ANsq'
            set skills2[ 6] = 'AOre'
            set skills2[ 7] = 'AOae'
            set skills2[ 8] = 'PA01'
            set skills2[ 9] = 'ANsq'
            set skills2[10] = 'AOae'
            set skills2[11] = 'PA01'
            set skills2[12] = 'AOre'
            set skills2[13] = 'ANsq'
            set skills2[14] = 'AOae'
            set skills2[15] = 'PA01'
            set skills2[16] = 'ANsq'
            set skills2[17] = 'AOae'
            set skills2[18] = 'PA01'
            set skills2[19] = 'ANsq'
            set skills2[20] = 'AOae'
        elseif (heroid == 'Obla') then
            set skills2[ 1] = 'AOwk'
            set skills2[ 2] = 'AOcr'
            set skills2[ 3] = 'AOmi'
            set skills2[ 4] = 'AOwk'
            set skills2[ 5] = 'AOcr'
            set skills2[ 6] = 'AOww'
            set skills2[ 7] = 'AOmi'
            set skills2[ 8] = 'AOwk'
            set skills2[ 9] = 'AOcr'
            set skills2[10] = 'AOmi'
            set skills2[11] = 'AOwk'
            set skills2[12] = 'AOww'
            set skills2[13] = 'AOcr'
            set skills2[14] = 'AOmi'
            set skills2[15] = 'AOwk'
            set skills2[16] = 'AOcr'
            set skills2[17] = 'AOmi'
            set skills2[18] = 'AOwk'
            set skills2[19] = 'AOcr'
            set skills2[20] = 'AOmi'
        elseif (heroid == 'Ofar') then
            set skills2[ 1] = 'AOfs'
            set skills2[ 2] = 'AOsf'
            set skills2[ 3] = 'AOcl'
            set skills2[ 4] = 'AOfs'
            set skills2[ 5] = 'AOsf'
            set skills2[ 6] = 'AOeq'
            set skills2[ 7] = 'AOcl'
            set skills2[ 8] = 'AOfs'
            set skills2[ 9] = 'AOsf'
            set skills2[10] = 'AOcl'
            set skills2[11] = 'AOfs'
            set skills2[12] = 'AOeq'
            set skills2[13] = 'AOsf'
            set skills2[14] = 'AOcl'
            set skills2[15] = 'AOfs'
            set skills2[16] = 'AOsf'
            set skills2[17] = 'AOcl'
            set skills2[18] = 'AOfs'
            set skills2[19] = 'AOsf'
            set skills2[20] = 'AOcl'
        endif
    elseif (order == 3) then
        set hero_id3 = heroid
        if (heroid == 'Otch') then
            set skills3[ 1] = 'PA01'
            set skills3[ 2] = 'ANsq'
            set skills3[ 3] = 'AOae'
            set skills3[ 4] = 'PA01'
            set skills3[ 5] = 'ANsq'
            set skills3[ 6] = 'AOre'
            set skills3[ 7] = 'AOae'
            set skills3[ 8] = 'PA01'
            set skills3[ 9] = 'ANsq'
            set skills3[10] = 'AOae'
            set skills3[11] = 'PA01'
            set skills3[12] = 'AOre'
            set skills3[13] = 'ANsq'
            set skills3[14] = 'AOae'
            set skills3[15] = 'PA01'
            set skills3[16] = 'ANsq'
            set skills3[17] = 'AOae'
            set skills3[18] = 'PA01'
            set skills3[19] = 'ANsq'
            set skills3[20] = 'AOae'
        elseif (heroid == 'Obla') then
            set skills3[ 1] = 'AOwk'
            set skills3[ 2] = 'AOcr'
            set skills3[ 3] = 'AOmi'
            set skills3[ 4] = 'AOwk'
            set skills3[ 5] = 'AOcr'
            set skills3[ 6] = 'AOww'
            set skills3[ 7] = 'AOmi'
            set skills3[ 8] = 'AOwk'
            set skills3[ 9] = 'AOcr'
            set skills3[10] = 'AOmi'
            set skills3[11] = 'AOwk'
            set skills3[12] = 'AOww'
            set skills3[13] = 'AOcr'
            set skills3[14] = 'AOmi'
            set skills3[15] = 'AOwk'
            set skills3[16] = 'AOcr'
            set skills3[17] = 'AOmi'
            set skills3[18] = 'AOwk'
            set skills3[19] = 'AOcr'
            set skills3[20] = 'AOmi'
        elseif (heroid == 'Ofar') then
            set skills3[ 1] = 'AOfs'
            set skills3[ 2] = 'AOsf'
            set skills3[ 3] = 'AOcl'
            set skills3[ 4] = 'AOfs'
            set skills3[ 5] = 'AOsf'
            set skills3[ 6] = 'AOeq'
            set skills3[ 7] = 'AOcl'
            set skills3[ 8] = 'AOfs'
            set skills3[ 9] = 'AOsf'
            set skills3[10] = 'AOcl'
            set skills3[11] = 'AOfs'
            set skills3[12] = 'AOeq'
            set skills3[13] = 'AOsf'
            set skills3[14] = 'AOcl'
            set skills3[15] = 'AOfs'
            set skills3[16] = 'AOsf'
            set skills3[17] = 'AOcl'
            set skills3[18] = 'AOfs'
            set skills3[19] = 'AOsf'
            set skills3[20] = 'AOcl'
        endif
    endif
endfunction

//===========================================================================
// Selects hero IDs for three possible heroes
//===========================================================================
function SelectHeroes takes nothing returns nothing
    local integer roll = GetRandomInt(1,100)
    if (roll <= 17) then
        call SetHero( 1, 'Otch' )
        call SetHero( 2, 'Obla' )
        call SetHero( 3, 'Ofar' )
    elseif (roll <= 34) then
        call SetHero( 1, 'Otch' )
        call SetHero( 2, 'Ofar' )
        call SetHero( 3, 'Obla' )
    elseif (roll <= 50) then
        call SetHero( 1, 'Obla' )
        call SetHero( 2, 'Otch' )
        call SetHero( 3, 'Ofar' )
    elseif (roll <= 66) then
        call SetHero( 1, 'Obla' )
        call SetHero( 2, 'Ofar' )
        call SetHero( 3, 'Otch' )
    elseif (roll <= 83) then
        call SetHero( 1, 'Ofar' )
        call SetHero( 2, 'Otch' )
        call SetHero( 3, 'Obla' )
    else
        call SetHero( 1, 'Ofar' )
        call SetHero( 2, 'Obla' )
        call SetHero( 3, 'Otch' )
    endif
endfunction

//===========================================================================
// Returns the hero skill for the given hero and level
//===========================================================================
function ChooseHeroSkill takes nothing returns integer
    local integer curHero = GetHeroId()
    local integer level = GetHeroLevelAI()

    if (level > max_hero_level) then
        set max_hero_level = level
    endif

    if (curHero == hero_id) then
        return skills1[level]
    elseif (curHero == hero_id2) then
        return skills2[level]
    elseif (curHero == hero_id3) then
        return skills3[level]
    endif
    return 0
endfunction

//***************************************************************************
//*
//*  Building and Harvesting
//*
//***************************************************************************

//===========================================================================
// Specifies building priorities for workers
//===========================================================================
function BuildPriorities takes nothing returns nothing
    local integer mine = TownWithMine()
    if (gCond_Baluarte0) then
        call SetBuildAll( BUILD_UNIT, 1, 'ogre', 0 )
    endif
    if (gCond_Workers1) then
        call SetBuildAll( BUILD_UNIT, 1, 'opeo', -1 )
        call SetBuildAll( BUILD_UNIT, 2, 'opeo', -1 )
        call SetBuildAll( BUILD_UNIT, 3, 'opeo', -1 )
        call SetBuildAll( BUILD_UNIT, 4, 'opeo', -1 )
        call SetBuildAll( BUILD_UNIT, 5, 'opeo', -1 )
        call SetBuildAll( BUILD_UNIT, 6, 'opeo', -1 )
    endif
    call SetBuildAll( BUILD_UNIT, 1, 'oalt', 0 )
    call SetBuildAll( BUILD_UNIT, 1, 'obar', 0 )
    if (gCond_Workers1) then
        call SetBuildAll( BUILD_UNIT, 7, 'opeo', -1 )
        call SetBuildAll( BUILD_UNIT, 8, 'opeo', -1 )
        call SetBuildAll( BUILD_UNIT, 9, 'opeo', -1 )
        call SetBuildAll( BUILD_UNIT, 10, 'opeo', -1 )
    endif
    call SetBuildAll( BUILD_UNIT, 1, 'otrb', 0 )
    if (gCond_Heroe_temprano) then
        call SetBuildAll( BUILD_UNIT, 1, hero_id, -1 )
    endif
    if (gCond_Need_Expansion) then
        call BuildExpansion( 'ogre', 'ogre' )
    endif
    if (gCond_Workers2) then
        call SetBuildAll( BUILD_UNIT, 11, 'opeo', -1 )
        call SetBuildAll( BUILD_UNIT, 12, 'opeo', -1 )
        call SetBuildAll( BUILD_UNIT, 13, 'opeo', -1 )
        call SetBuildAll( BUILD_UNIT, 14, 'opeo', -1 )
        call SetBuildAll( BUILD_UNIT, 15, 'opeo', -1 )
    endif
    call SetBuildAll( BUILD_UNIT, 1, 'ogru', -1 )
    call SetBuildAll( BUILD_UNIT, 2, 'ogru', -1 )
    call SetBuildAll( BUILD_UNIT, 3, 'ogru', -1 )
    call SetBuildAll( BUILD_UNIT, 4, 'ogru', -1 )
    call SetBuildAll( BUILD_UNIT, 5, 'ogru', -1 )
    call SetBuildAll( BUILD_UNIT, 1, 'ovln', -1 )
    call SetBuildAll( BUILD_UNIT, 2, 'otrb', -1 )
    if (gCond_Workers1) then
        call SetBuildAll( BUILD_UNIT, 16, 'opeo', -1 )
        call SetBuildAll( BUILD_UNIT, 17, 'opeo', -1 )
        call SetBuildAll( BUILD_UNIT, 18, 'opeo', -1 )
        call SetBuildAll( BUILD_UNIT, 19, 'opeo', -1 )
        call SetBuildAll( BUILD_UNIT, 20, 'opeo', -1 )
    endif
    if (gCond_Herrerias) then
        call SetBuildAll( BUILD_UNIT, 1, 'ofor', 0 )
        call SetBuildAll( BUILD_UNIT, 2, 'ofor', 0 )
    endif
    if (gCond_Hachas1) then
        call SetBuildAll( BUILD_UPGRADE, 1, 'Rome', -1 )
    endif
    if (gCond_Armas1) then
        call SetBuildAll( BUILD_UPGRADE, 1, 'Rora', -1 )
    endif
    if (gCond_Armadura1) then
        call SetBuildAll( BUILD_UPGRADE, 1, 'Roar', -1 )
    endif
    if (gCond_Barricada1) then
        call SetBuildAll( BUILD_UPGRADE, 1, 'Rosp', -1 )
    endif
    if (( GetUpgradeLevel( 'Ropg' ) == 0 )) then
        call SetBuildAll( BUILD_UPGRADE, 1, 'Ropg', -1 )
    endif
    if (( GetUpgradeLevel( 'Ropm' ) == 0 )) then
        call SetBuildAll( BUILD_UPGRADE, 1, 'Ropm', -1 )
    endif
    call SetBuildAll( BUILD_UNIT, 2, 'obar', -1 )
    if (gCond_TotalTowers) then
        call SetBuildAll( BUILD_UNIT, 1, 'owtw', -1 )
    endif
    call SetBuildAll( BUILD_UNIT, 1, 'ohun', -1 )
    call SetBuildAll( BUILD_UNIT, 2, 'ohun', -1 )
    call SetBuildAll( BUILD_UNIT, 3, 'ohun', -1 )
    call SetBuildAll( BUILD_UNIT, 4, 'ohun', -1 )
    call SetBuildAll( BUILD_UNIT, 5, 'ohun', -1 )
    call SetBuildAll( BUILD_UNIT, 6, 'ohun', -1 )
    if (gCond_TotalTowers) then
        call SetBuildAll( BUILD_UNIT, 2, 'owtw', -1 )
        call SetBuildAll( BUILD_UNIT, 3, 'owtw', -1 )
        call SetBuildAll( BUILD_UNIT, 1, 'owtw', 0 )
        call SetBuildAll( BUILD_UNIT, 2, 'owtw', 0 )
    endif
    if (gCond_Hachas2) then
        call SetBuildAll( BUILD_UPGRADE, 2, 'Rome', -1 )
    endif
    if (gCond_Armas2) then
        call SetBuildAll( BUILD_UPGRADE, 2, 'Rora', -1 )
    endif
    if (gCond_Armadura2) then
        call SetBuildAll( BUILD_UPGRADE, 2, 'Roar', -1 )
    endif
    if (gCond_Barricada2) then
        call SetBuildAll( BUILD_UPGRADE, 2, 'Rosp', -1 )
    endif
    if (gCond_Castillos0) then
        call SetBuildAll( BUILD_UNIT, 1, 'ostr', 0 )
    endif
    if (gCond_HeroeSegundo) then
        call SetBuildAll( BUILD_UNIT, 1, hero_id2, -1 )
    endif
    if (( GetUpgradeLevel( 'Robs' ) == 0 )) then
        call SetBuildAll( BUILD_UPGRADE, 1, 'Robs', -1 )
    endif
    call SetBuildAll( BUILD_UNIT, 1, 'obea', 0 )
    if (( GetUpgradeLevel( 'Roen' ) == 0 )) then
        call SetBuildAll( BUILD_UPGRADE, 1, 'Roen', -1 )
    endif
    call SetBuildAll( BUILD_UNIT, 2, 'obea', 0 )
    call SetBuildAll( BUILD_UNIT, 1, 'osld', 0 )
    call SetBuildAll( BUILD_UNIT, 2, 'osld', 0 )
    call SetBuildAll( BUILD_UNIT, 7, 'ohun', -1 )
    call SetBuildAll( BUILD_UNIT, 8, 'ohun', -1 )
    call SetBuildAll( BUILD_UNIT, 1, 'ospw', -1 )
    call SetBuildAll( BUILD_UNIT, 2, 'ospw', -1 )
    call SetBuildAll( BUILD_UNIT, 3, 'otrb', -1 )
    call SetBuildAll( BUILD_UNIT, 1, 'orai', -1 )
    call SetBuildAll( BUILD_UNIT, 2, 'orai', -1 )
    call SetBuildAll( BUILD_UNIT, 3, 'orai', -1 )
    call SetBuildAll( BUILD_UNIT, 4, 'orai', -1 )
    call SetBuildAll( BUILD_UNIT, 5, 'orai', -1 )
    call SetBuildAll( BUILD_UNIT, 6, 'orai', -1 )
    call SetBuildAll( BUILD_UNIT, 1, 'owyv', -1 )
    call SetBuildAll( BUILD_UNIT, 2, 'owyv', -1 )
    call SetBuildAll( BUILD_UNIT, 3, 'owyv', -1 )
    call SetBuildAll( BUILD_UNIT, 1, 'odoc', -1 )
    call SetBuildAll( BUILD_UNIT, 2, 'odoc', -1 )
    call SetBuildAll( BUILD_UNIT, 3, 'odoc', -1 )
    call SetBuildAll( BUILD_UNIT, 1, 'oshm', -1 )
    call SetBuildAll( BUILD_UNIT, 2, 'oshm', -1 )
    call SetBuildAll( BUILD_UNIT, 3, 'oshm', -1 )
    call SetBuildAll( BUILD_UNIT, 1, 'okod', -1 )
    call SetBuildAll( BUILD_UNIT, 1, 'ocat', -1 )
    call SetBuildAll( BUILD_UNIT, 2, 'ocat', -1 )
    if (gCond_Hachas3) then
        call SetBuildAll( BUILD_UPGRADE, 3, 'Rome', -1 )
    endif
    if (gCond_Armas3) then
        call SetBuildAll( BUILD_UPGRADE, 3, 'Rora', -1 )
    endif
    if (gCond_Armadura3) then
        call SetBuildAll( BUILD_UPGRADE, 3, 'Roar', -1 )
    endif
    if (gCond_Barricada3) then
        call SetBuildAll( BUILD_UPGRADE, 3, 'Rosp', -1 )
    endif
    if (( GetUpgradeLevel( 'Rost' ) == 0 )) then
        call SetBuildAll( BUILD_UPGRADE, 1, 'Rost', -1 )
    endif
    if (( GetUpgradeLevel( 'Rowd' ) == 0 )) then
        call SetBuildAll( BUILD_UPGRADE, 1, 'Rowd', -1 )
    endif
    if (gCond_Hachas4) then
        call SetBuildAll( BUILD_UPGRADE, 4, 'Rome', -1 )
    endif
    if (gCond_Armas4) then
        call SetBuildAll( BUILD_UPGRADE, 4, 'Rora', -1 )
    endif
    if (gCond_Armadura4) then
        call SetBuildAll( BUILD_UPGRADE, 4, 'Roar', -1 )
    endif
    if (gCond_Barricada4) then
        call SetBuildAll( BUILD_UPGRADE, 4, 'Rosp', -1 )
    endif
    call SetBuildAll( BUILD_UNIT, 4, 'otrb', -1 )
    if (gCond_Castillos0) then
        call SetBuildAll( BUILD_UNIT, 1, 'ofrt', 0 )
    endif
    if (gCond_HeroeTercero) then
        call SetBuildAll( BUILD_UNIT, 1, hero_id3, -1 )
    endif
    if (( GetUpgradeLevel( 'Robs' ) < 2 )) then
        call SetBuildAll( BUILD_UPGRADE, 2, 'Robs', -1 )
    endif
    if (( GetUpgradeLevel( 'Rotr' ) < 1 )) then
        call SetBuildAll( BUILD_UPGRADE, 1, 'Rotr', -1 )
    endif
    if (( GetUpgradeLevel( 'Robk' ) < 1 )) then
        call SetBuildAll( BUILD_UPGRADE, 1, 'Robk', -1 )
    endif
    if (( GetUpgradeLevel( 'Rwdm' ) < 1 )) then
        call SetBuildAll( BUILD_UPGRADE, 1, 'Rwdm', -1 )
    endif
    call SetBuildAll( BUILD_UNIT, 1, 'otto', 0 )
    if (( GetUpgradeLevel( 'Rost' ) < 2 )) then
        call SetBuildAll( BUILD_UPGRADE, 1, 'Rost', 0 )
    endif
    if (( GetUpgradeLevel( 'Rowd' ) < 2 )) then
        call SetBuildAll( BUILD_UPGRADE, 1, 'Rowd', 0 )
    endif
    call SetBuildAll( BUILD_UNIT, 5, 'otrb', -1 )
    call SetBuildAll( BUILD_UNIT, 6, 'otrb', -1 )
    call SetBuildAll( BUILD_UNIT, 1, 'otau', -1 )
    call SetBuildAll( BUILD_UNIT, 2, 'otau', -1 )
    call SetBuildAll( BUILD_UNIT, 3, 'ocat', -1 )
    if (( GetUpgradeLevel( 'Robf' ) == 0 )) then
        call SetBuildAll( BUILD_UPGRADE, 1, 'Robf', -1 )
    endif
    call SetBuildAll( BUILD_UNIT, 4, 'owyv', -1 )
    call SetBuildAll( BUILD_UNIT, 5, 'owyv', -1 )
    call SetBuildAll( BUILD_UNIT, 6, 'owyv', -1 )
    call SetBuildAll( BUILD_UNIT, 1, 'otbr', -1 )
    call SetBuildAll( BUILD_UNIT, 2, 'otbr', -1 )
    if (gCond_Hachas5) then
        call SetBuildAll( BUILD_UPGRADE, 5, 'Rome', -1 )
    endif
    if (gCond_Armas5) then
        call SetBuildAll( BUILD_UPGRADE, 5, 'Rora', -1 )
    endif
    if (gCond_Armadura5) then
        call SetBuildAll( BUILD_UPGRADE, 5, 'Roar', -1 )
    endif
    if (gCond_Barricada5) then
        call SetBuildAll( BUILD_UPGRADE, 5, 'Rosp', -1 )
    endif
    if (( GetUpgradeLevel( 'Rovs' ) == 0 )) then
        call SetBuildAll( BUILD_UPGRADE, 1, 'Rovs', -1 )
    endif
    if (( GetUpgradeLevel( 'Rows' ) == 0 )) then
        call SetBuildAll( BUILD_UPGRADE, 1, 'Rows', -1 )
    endif
    if (( GetUpgradeLevel( 'Rowd' ) < 3 )) then
        call SetBuildAll( BUILD_UPGRADE, 3, 'Rowd', -1 )
    endif
    if (( GetUpgradeLevel( 'Rost' ) < 3 )) then
        call SetBuildAll( BUILD_UPGRADE, 3, 'Rost', -1 )
    endif
    if (( GetUpgradeLevel( 'Rorb' ) == 0 )) then
        call SetBuildAll( BUILD_UPGRADE, 1, 'Rorb', -1 )
    endif
    if (gCond_Hachas6) then
        call SetBuildAll( BUILD_UPGRADE, 6, 'Rome', -1 )
    endif
    if (gCond_Armas6) then
        call SetBuildAll( BUILD_UPGRADE, 6, 'Rora', -1 )
    endif
    if (gCond_Armadura6) then
        call SetBuildAll( BUILD_UPGRADE, 6, 'Roar', -1 )
    endif
    if (gCond_Barricada6) then
        call SetBuildAll( BUILD_UPGRADE, 6, 'Rosp', -1 )
    endif
    if (( GetUpgradeLevel( 'Rost' ) < 4 )) then
        call SetBuildAll( BUILD_UPGRADE, 4, 'Rost', -1 )
    endif
    if (( GetUpgradeLevel( 'Rowd' ) < 4 )) then
        call SetBuildAll( BUILD_UPGRADE, 4, 'Rowd', -1 )
    endif
endfunction

//===========================================================================
// Specifies harvesting priorities for workers
//===========================================================================
function HarvestPriorities takes nothing returns nothing
    local integer mine = TownWithMine()
    local integer allGold = GetUnitCountDone('opeo')
    local integer allWood = GetUnitCountDone('opeo')
    local integer numWorkers
    set numWorkers = 5
    call HarvestGold( mine + 0, numWorkers )
    set numWorkers = 5
    call HarvestGold( mine + 1, numWorkers )
    set numWorkers = 20
    call HarvestWood( mine, numWorkers )
endfunction

//===========================================================================
// Determines all building and harvesting assignments for workers
//===========================================================================
function WorkerAssignment takes nothing returns nothing
    loop
        call UpdateConditions(  )

        // Harvesting
        call ClearHarvestAI(  )
        call HarvestPriorities(  )

        // Building
        call InitBuildArray(  )
        call BuildPriorities(  )

        call Sleep( 2 )
    endloop
endfunction

//***************************************************************************
//*
//*  Attacking
//*
//***************************************************************************

//===========================================================================
// Returns true if the minimum forces for an attack exist
//===========================================================================
function HaveMinimumAttackers takes nothing returns boolean
    local integer count

    // Check for attack wave limit
    if (attackWave > 1) then
        return false
    endif

    // Attack Group: Minium
    set count = GetUnitCountDone( 'ogru' )
    if (count < 2) then
        return false
    endif
    return true
endfunction

//===========================================================================
// Assigns units to attack based on the given attack group
//===========================================================================
function PrepareAttackGroup takes integer groupID returns nothing
    local integer all

    // Attack Group #1: ALL
    if (groupID == 1) then
        if (gCond_ConteoGrunts) then
            set all = GetUnitCountDone( 'ogru' )
            call AddAttackUnit( all, all, 'ogru' )
        endif
        if (gCond_TenemosIncursores) then
            set all = GetUnitCountDone( 'orai' )
            call AddAttackUnit( all, all, 'orai' )
        endif
        if (gCond_TenemosSpearThrowers) then
            set all = GetUnitCountDone( 'ohun' )
            call AddAttackUnit( all, all, 'ohun' )
        endif
        if (gCond_TenemosCatapultas) then
            set all = GetUnitCountDone( 'ocat' )
            call AddAttackUnit( all, all, 'ocat' )
        endif
        if (gCond_TenemosBestiasKodo) then
            set all = GetUnitCountDone( 'okod' )
            call AddAttackUnit( all, all, 'okod' )
        endif
        if (gCond_TenemosJineteViento) then
            set all = GetUnitCountDone( 'owyv' )
            call AddAttackUnit( all, all, 'owyv' )
        endif
        if (gCond_TenemosRylaks) then
            set all = GetUnitCountDone( 'otbr' )
            call AddAttackUnit( all, all, 'otbr' )
        endif
        if (gCond_TenemosShamanes) then
            set all = GetUnitCountDone( 'odoc' )
            call AddAttackUnit( all, all, 'odoc' )
        endif
        if (gCond_TenemosBrujos) then
            set all = GetUnitCountDone( 'oshm' )
            call AddAttackUnit( all, all, 'oshm' )
        endif
        if (gCond_TenemosWarStationM) then
            set all = GetUnitCountDone( 'ospw' )
            call AddAttackUnit( all, all, 'ospw' )
        endif
        if (( GetUnitCount( 'Obla' ) > 0 )) then
            call AddAttackUnit( 1,   1,   'Obla' )
        endif
        if (( GetUnitCount( 'Ofar' ) > 0 )) then
            call AddAttackUnit( 1,   1,   'Ofar' )
        endif
        if (( GetUnitCount( 'Oshd' ) > 0 )) then
            call AddAttackUnit( 1,   1,   'Oshd' )
        endif
        if (( GetUnitCount( 'Otch' ) > 0 )) then
            call AddAttackUnit( 1,   1,   'Otch' )
        endif

        // Attack Group #2: Minium
    elseif (groupID == 2) then
        call AddAttackUnit( 2,   2,   'ogru' )
        set all = GetUnitCountDone( hero_id )
        call AddAttackUnit( all, all, hero_id )

    endif
endfunction

//===========================================================================
// Prepares an attack group based on the current attack wave
//===========================================================================
function PrepareForces takes nothing returns nothing
    if (attackWave == 1) then
        call PrepareAttackGroup( 1 )
    endif
endfunction

//===========================================================================
// Sleep delays for each attack wave
//===========================================================================
function AttackWaveDelay takes integer inWave returns nothing
    if (inWave < nextDelay) then
        return
    endif

    set nextDelay = inWave + 1
endfunction

//===========================================================================
// Advances attack wave counter
//===========================================================================
function AttackWaveUpdate takes nothing returns nothing
    call AttackWaveDelay( attackWave )
    set attackWave = attackWave + 1
    if (attackWave > 1) then
        set attackWave = 1
        set nextDelay = attackWave + 1
    endif
endfunction

//===========================================================================
// Basic attack functionality
//===========================================================================
function AttackTarget takes unit target, boolean addAlliance returns nothing
    if (target == null) then
        return
    endif
    if (addAlliance) then
        call SetAllianceTarget( target )
    endif
    call FormGroup( 3, true )
    call AttackMoveKillA( target )
    if (not addAlliance) then
        call SetAllianceTarget( null )
    endif
endfunction

//===========================================================================
// Initiates an attack based on target priorities
//===========================================================================
function LaunchAttack takes nothing returns nothing
    local unit target = null
    local boolean setAlly = true

    // Don't launch any attack while town is threatened
    if (TownThreatened()) then
        call Sleep( 2 )
        return
    endif

    // Target Priority #1
    if (gCond_RushCommand) then
        if (target == null) then
            set target = GetMegaTarget()
        endif
    endif

    // Target Priority #2
    if (gCond_NeedExpansionRequiere) then
        if (target == null) then
            set target = GetExpansionFoe()
            if (target != null) then
                set take_exp = false
            endif
        endif
    endif

    // Target Priority #3
    if (gCond_AtacarAEnemigo) then
        if (target == null) then
            set target = GetAllianceTarget()
            if (target != null) then
                set setAlly = false
            endif
        endif
    endif

    // Target Priority #4
    if (target == null) then
        set target = GetMegaTarget()
    endif

    // Target Priority #5
    if (target == null) then
        set target = GetEnemyExpansion()
        if (target == null) then
            call StartGetEnemyBase(  )
            loop
                exitwhen (not WaitGetEnemyBase())
                call SuicideSleep( 1 )
            endloop
            set target = GetEnemyBase()
        endif
    endif

    // Target Priority #6
    if (target == null) then
        set target = GetEnemyExpansion()
    endif

    // Target Priority #7
    if (gCond_Farmeo_avanzado) then
        if (target == null) then
            set target = GetCreepCamp( 19, 100, true )
        endif
    endif

    // Target Priority #8
    if (gCond_Farmeo_Mediano) then
        if (target == null) then
            set target = GetCreepCamp( 18, 36, true )
        endif
    endif

    // Target Priority #9
    if (target == null) then
        set target = GetCreepCamp( 0, 17, false )
    endif

    // Attack the target and increment attack wave
    if (target != null) then
        call AttackTarget( target, setAlly )
        call AttackWaveUpdate(  )
    else
        // If no target was found, sleep a bit before trying again
        call Sleep( 20 )
    endif
endfunction

//===========================================================================
// Determines all attacking assignments
//===========================================================================
function AttackAssignment takes nothing returns nothing
    call StaggerSleep( 0, 2 )
    if (attackWave == 1) then
        call AttackWaveDelay( 0 )
    endif
    loop
        loop
            call UpdateConditions(  )
            exitwhen (HaveMinimumAttackers() and not CaptainRetreating())
            call Sleep( 2 )
        endloop
        call RemoveInjuries(  )
        call ResetAttackUnits(  )
        call PrepareForces(  )
        call LaunchAttack(  )
    endloop
endfunction

//***************************************************************************
//*
//*  Main Entry Point
//*
//***************************************************************************

//===========================================================================
function main takes nothing returns nothing
    call InitAI(  )
    call SetPlayerName( ai_player, "Durotar Horde" )
    call InitOptions(  )
    call SelectHeroes(  )
    call CreateCaptains(  )
    call SetHeroLevels( function ChooseHeroSkill )

    call Sleep( 0.1 )
    call StartThread( function WorkerAssignment )
    call StartThread( function AttackAssignment )
    call PlayGame(  )
endfunction

