//===========================================================================
// 
// Alliance
// 
//   Warcraft III AI script
//   Generated by the Warcraft III World Editor
// 
//===========================================================================

//***************************************************************************
//*
//*  Global Variables
//*
//***************************************************************************

globals
    integer                 attackWave                 = 1
    integer                 nextDelay                  = 0
    integer                 awGold                     = 0
    integer                 awWood                     = 0
    //integer                 Comport2                   = GetRandomInt(1,100)

    // Conditions
    boolean                 gCond_BuildGeneral         = false
    boolean                 gCond_TotalTowers          = false
    boolean                 gCond_HeroFirst            = false
    boolean                 gCond_HeroSecond           = false
    boolean                 gCond_HeroThird            = false
    boolean                 gCond_BuildFarms           = false
    boolean                 gCond_TrainFootmans        = false
    boolean                 gCond_BuildTownHall        = false
    boolean                 gCond_BuildKeep            = false
    boolean                 gCond_BuildCastle          = false
    boolean                 gCond_Workers1             = false
    boolean                 gCond_Workers2             = false
    boolean                 gCond_Workers3             = false
    boolean                 gCond_NeedExp2             = false
    boolean                 gCond_NeedExp3             = false
    boolean                 gCond_AttackWithFootmen    = false
    boolean                 gCond_AttackWithRiflemen   = false
    boolean                 gCond_AttackWithKnights    = false
    boolean                 gCond_AttackWithChaplains  = false
    boolean                 gCond_AttackWithSorceress  = false
    boolean                 gCond_AttackWithEvokers    = false
    boolean                 gCond_AttackWithFlyingMachine = false
    boolean                 gCond_AttackWithMortarTeams = false
    boolean                 gCond_AttackWithSteamTanks = false
    boolean                 gCond_AttackWithPegasuss   = false
    boolean                 gCond_AttackWithGryphonRider = false
    boolean                 gCond_MinimumKnights       = false
    boolean                 gCond_AtacarAEnemigo       = false
    boolean                 gCond_Farmeo_avanzado      = false
    boolean                 gCond_Farmeo_Mediano       = false
    boolean                 gCond_NeedExpansionRequiere = false
    boolean                 gCond_RushCommand          = false
    boolean                 gCond_RushForces           = false
endglobals

//***************************************************************************
//*
//*  Utility Functions
//*
//***************************************************************************

//===========================================================================
function CheckLastCommand takes boolean pop returns integer
    local integer cmd = GetLastCommand()
    if (pop) then
        call PopLastCommand(  )
    endif
    return cmd
endfunction

//===========================================================================
function CheckLastCommandData takes boolean pop returns integer
    local integer data = GetLastData()
    if (pop) then
        call PopLastCommand(  )
    endif
    return data
endfunction

//===========================================================================
function TotalFoodProduced takes nothing returns integer
    return GetPlayerState(ai_player,PLAYER_STATE_RESOURCE_FOOD_CAP)
endfunction

//===========================================================================
function ExpansionNeeded takes nothing returns boolean
    return take_exp
endfunction

//===========================================================================
function BuildExpansion takes integer hallID, integer mineID returns nothing
    if (HallsCompleted(hallID)) then
        call SetBuildExpa( TownCount(hallID) + 1, mineID )
    endif
endfunction

//===========================================================================
function CurrentAttackWave takes nothing returns integer
    return attackWave
endfunction

//===========================================================================
function ResetAttackUnits takes nothing returns nothing
    set awGold = 0
    set awWood = 0
    call InitAssaultGroup(  )
endfunction

//===========================================================================
function AddAttackUnit takes integer minQty, integer maxQty, integer unitID returns nothing
    // Track attacking gold workers
    if (unitID == 'hu01') then
        set awGold = awGold + minQty
    endif

    // Track attacking wood workers
    if (unitID == 'hu01') then
        set awWood = awWood + minQty
    endif

    call SetAssaultGroup( minQty, maxQty, unitID )
endfunction

//***************************************************************************
//*
//*  Basic Options
//*
//***************************************************************************

//===========================================================================
function InitOptions takes nothing returns nothing
    call SetCampaignAI(  )  
    call SetDefendPlayer( false )
    call SetRandomPaths( true )
    call SetTargetHeroes( true )
    call SetPeonsRepair( true )
    call SetHeroesFlee( true )
    call SetHeroesBuyItems( true )
    call SetUnitsFlee( true )
    call SetGroupsFlee( true )
    call SetWatchMegaTargets( true )
    call SetIgnoreInjured( true )
    call SetHeroesTakeItems( true )
    call SetSlowChopping( false )
    call SetCaptainChanges( true )
    call SetSmartArtillery( true )
endfunction

//***************************************************************************
//*
//*  Conditions
//*
//***************************************************************************

//===========================================================================
// Updates the values of all preset conditions
//===========================================================================
function UpdateConditions takes nothing returns nothing
    set gCond_BuildGeneral = ( TownThreatened(  ) == false )
    set gCond_TotalTowers = ( ( ( GetUnitCount( 'hdb0' ) + GetUnitCount( 'hdb1' ) ) + ( GetUnitCount( 'hdb2' ) + GetUnitCount( 'hdb3' ) ) ) < 5 )
    set gCond_HeroFirst = ( GetUnitCountDone( 'hb05' ) > 0 )
    set gCond_HeroSecond = ( ( GetUnitCountDone( 'hb05' ) > 0 ) and ( ( GetUnitCountDone( 'hb03' ) > 0 ) or ( GetUnitCountDone( 'hb02' ) > 0 ) ) )
    set gCond_HeroThird = ( ( GetUnitCountDone( 'hb05' ) > 0 ) and ( GetUnitCountDone( 'hb03' ) > 0 ) )
    set gCond_BuildFarms = ( ( TownThreatened(  ) == false ) and ( ( TotalFoodProduced(  ) < 200 ) and ( ( TotalFoodProduced(  ) - FoodUsed(  ) ) < 15 ) ) )
    set gCond_TrainFootmans = ( GetUnitCountDone( 'hb03' ) == 0 )
    set gCond_BuildTownHall = ( ( GetUnitCount( 'hb01' ) == 0 ) and ( ( GetUnitCount( 'hb03' ) == 0 ) and ( GetUnitCount( 'hb02' ) == 0 ) ) )
    set gCond_BuildKeep = ( ( GetUnitCount( 'hb01' ) > 0 ) and ( ( GetUnitCount( 'hb03' ) == 0 ) and ( GetUnitCount( 'hb02' ) == 0 ) ) )
    set gCond_BuildCastle = ( ( GetUnitCount( 'hb02' ) > 0 ) and ( GetUnitCount( 'hb03' ) == 0 ) )
    set gCond_Workers1 = ( ( GetUnitCount( 'hu01' ) < 35 ) and ( ( TownHasMine( ( TownWithMine(  ) + 0 ) ) == true ) and ( TownHasHall( ( TownWithMine(  ) + 0 ) ) == true ) ) )
    set gCond_Workers2 = ( ( GetUnitCount( 'hu01' ) < 35 ) and ( ( TownHasMine( ( TownWithMine(  ) + 1 ) ) == true ) and ( TownHasHall( ( TownWithMine(  ) + 1 ) ) == true ) ) )
    set gCond_Workers3 = ( ( GetUnitCount( 'hu01' ) < 35 ) and ( ( TownHasMine( ( TownWithMine(  ) + 2 ) ) == true ) and ( TownHasHall( ( TownWithMine(  ) + 2 ) ) == true ) ) )
    set gCond_NeedExp2 = ( GetMinesOwned(  ) < 2 )
    set gCond_NeedExp3 = ( GetMinesOwned(  ) < 3 )
    set gCond_AttackWithFootmen = ( GetUnitCount( 'hu02' ) > 0 )
    set gCond_AttackWithRiflemen = ( GetUnitCount( 'hu04' ) > 0 )
    set gCond_AttackWithKnights = ( GetUnitCount( 'hu03' ) > 0 )
    set gCond_AttackWithChaplains = ( GetUnitCount( 'hu07' ) > 0 )
    set gCond_AttackWithSorceress = ( GetUnitCount( 'hu08' ) > 0 )
    set gCond_AttackWithEvokers = ( GetUnitCount( 'hu06' ) > 0 )
    set gCond_AttackWithFlyingMachine = ( GetUnitCount( 'h01E' ) > 0 )
    set gCond_AttackWithMortarTeams = ( GetUnitCount( 'h00N' ) > 0 )
    set gCond_AttackWithSteamTanks = ( GetUnitCount( 'h024' ) > 0 )
    set gCond_AttackWithPegasuss = ( GetUnitCount( 'hu05' ) > 0 )
    set gCond_AttackWithGryphonRider = ( GetUnitCount( 'h025' ) > 0 )
    set gCond_MinimumKnights = ( GetUnitCount( 'hb03' ) > 0 )
    set gCond_AtacarAEnemigo = ( FoodUsed(  ) > 100 )
    set gCond_Farmeo_avanzado = ( FoodUsed(  ) > 87 )
    set gCond_Farmeo_Mediano = ( FoodUsed(  ) > 57 )
    set gCond_NeedExpansionRequiere = ( ( FoodUsed(  ) > 42 ) and ( ExpansionNeeded(  ) == true ) )
    set gCond_RushCommand = ( CheckLastCommand( false ) == 1 )
    set gCond_RushForces = ( FoodUsed(  ) < 50 )
endfunction

//***************************************************************************
//*
//*  Heroes
//*
//***************************************************************************

//===========================================================================
// Stores hero ID and skills
//===========================================================================
function SetHero takes integer order, integer heroid returns nothing
    if (order == 1) then
        set hero_id = heroid
        if (heroid == 'HH01') then
            set skills1[ 1] = 'AHhb'
            set skills1[ 2] = 'AHds'
            set skills1[ 3] = 'AHad'
            set skills1[ 4] = 'AHhb'
            set skills1[ 5] = 'AHds'
            set skills1[ 6] = 'AHre'
            set skills1[ 7] = 'AHad'
            set skills1[ 8] = 'AHhb'
            set skills1[ 9] = 'AHds'
            set skills1[10] = 'AHad'
            set skills1[11] = 'AHhb'
            set skills1[12] = 'AHre'
            set skills1[13] = 'AHds'
            set skills1[14] = 'AHad'
            set skills1[15] = 'AHhb'
            set skills1[16] = 'AHds'
            set skills1[17] = 'AHad'
            set skills1[18] = 'AHhb'
            set skills1[19] = 'AHds'
            set skills1[20] = 'AHad'
        elseif (heroid == 'HH02') then
            set skills1[ 1] = 'AHbz'
            set skills1[ 2] = 'HA01'
            set skills1[ 3] = 'AHab'
            set skills1[ 4] = 'AHbz'
            set skills1[ 5] = 'HA01'
            set skills1[ 6] = 'AHmt'
            set skills1[ 7] = 'AHab'
            set skills1[ 8] = 'AHbz'
            set skills1[ 9] = 'HA01'
            set skills1[10] = 'AHab'
            set skills1[11] = 'AHbz'
            set skills1[12] = 'AHmt'
            set skills1[13] = 'HA01'
            set skills1[14] = 'AHab'
            set skills1[15] = 'AHbz'
            set skills1[16] = 'HA01'
            set skills1[17] = 'AHab'
            set skills1[18] = 'AHbz'
            set skills1[19] = 'HA01'
            set skills1[20] = 'AHab'
        elseif (heroid == 'HH03') then
            set skills1[ 1] = 'ANmo'
            set skills1[ 2] = 'A083'
            set skills1[ 3] = 'A084'
            set skills1[ 4] = 'ANmo'
            set skills1[ 5] = 'A083'
            set skills1[ 6] = 'AHpx'
            set skills1[ 7] = 'A084'
            set skills1[ 8] = 'ANmo'
            set skills1[ 9] = 'A083'
            set skills1[10] = 'A084'
            set skills1[11] = 'ANmo'
            set skills1[12] = 'AHpx'
            set skills1[13] = 'A083'
            set skills1[14] = 'A084'
            set skills1[15] = 'ANmo'
            set skills1[16] = 'A083'
            set skills1[17] = 'A084'
            set skills1[18] = 'ANmo'
            set skills1[19] = 'A083'
            set skills1[20] = 'A084'
        elseif (heroid == 'Hmkg') then
            set skills1[ 1] = 'AHtb'
            set skills1[ 2] = 'AHtc'
            set skills1[ 3] = 'AHbh'
            set skills1[ 4] = 'AHtb'
            set skills1[ 5] = 'AHtc'
            set skills1[ 6] = 'AHav'
            set skills1[ 7] = 'AHbh'
            set skills1[ 8] = 'AHtb'
            set skills1[ 9] = 'AHtc'
            set skills1[10] = 'AHbh'
            set skills1[11] = 'AHtb'
            set skills1[12] = 'AHav'
            set skills1[13] = 'AHtc'
            set skills1[14] = 'AHbh'
            set skills1[15] = 'AHtb'
            set skills1[16] = 'AHtc'
            set skills1[17] = 'AHbh'
            set skills1[18] = 'AHtb'
            set skills1[19] = 'AHtc'
            set skills1[20] = 'AHbh'
        endif
    elseif (order == 2) then
        set hero_id2 = heroid
        if (heroid == 'HH01') then
            set skills2[ 1] = 'AHhb'
            set skills2[ 2] = 'AHds'
            set skills2[ 3] = 'AHad'
            set skills2[ 4] = 'AHhb'
            set skills2[ 5] = 'AHds'
            set skills2[ 6] = 'AHre'
            set skills2[ 7] = 'AHad'
            set skills2[ 8] = 'AHhb'
            set skills2[ 9] = 'AHds'
            set skills2[10] = 'AHad'
            set skills2[11] = 'AHhb'
            set skills2[12] = 'AHre'
            set skills2[13] = 'AHds'
            set skills2[14] = 'AHad'
            set skills2[15] = 'AHhb'
            set skills2[16] = 'AHds'
            set skills2[17] = 'AHad'
            set skills2[18] = 'AHhb'
            set skills2[19] = 'AHds'
            set skills2[20] = 'AHad'
        elseif (heroid == 'HH02') then
            set skills2[ 1] = 'AHbz'
            set skills2[ 2] = 'HA01'
            set skills2[ 3] = 'AHab'
            set skills2[ 4] = 'AHbz'
            set skills2[ 5] = 'HA01'
            set skills2[ 6] = 'AHmt'
            set skills2[ 7] = 'AHab'
            set skills2[ 8] = 'AHbz'
            set skills2[ 9] = 'HA01'
            set skills2[10] = 'AHab'
            set skills2[11] = 'AHbz'
            set skills2[12] = 'AHmt'
            set skills2[13] = 'HA01'
            set skills2[14] = 'AHab'
            set skills2[15] = 'AHbz'
            set skills2[16] = 'HA01'
            set skills2[17] = 'AHab'
            set skills2[18] = 'AHbz'
            set skills2[19] = 'HA01'
            set skills2[20] = 'AHab'
        elseif (heroid == 'HH03') then
            set skills2[ 1] = 'ANmo'
            set skills2[ 2] = 'A083'
            set skills2[ 3] = 'A084'
            set skills2[ 4] = 'ANmo'
            set skills2[ 5] = 'A083'
            set skills2[ 6] = 'AHpx'
            set skills2[ 7] = 'A084'
            set skills2[ 8] = 'ANmo'
            set skills2[ 9] = 'A083'
            set skills2[10] = 'A084'
            set skills2[11] = 'ANmo'
            set skills2[12] = 'AHpx'
            set skills2[13] = 'A083'
            set skills2[14] = 'A084'
            set skills2[15] = 'ANmo'
            set skills2[16] = 'A083'
            set skills2[17] = 'A084'
            set skills2[18] = 'ANmo'
            set skills2[19] = 'A083'
            set skills2[20] = 'A084'
        elseif (heroid == 'Hmkg') then
            set skills2[ 1] = 'AHtb'
            set skills2[ 2] = 'AHtc'
            set skills2[ 3] = 'AHbh'
            set skills2[ 4] = 'AHtb'
            set skills2[ 5] = 'AHtc'
            set skills2[ 6] = 'AHav'
            set skills2[ 7] = 'AHbh'
            set skills2[ 8] = 'AHtb'
            set skills2[ 9] = 'AHtc'
            set skills2[10] = 'AHbh'
            set skills2[11] = 'AHtb'
            set skills2[12] = 'AHav'
            set skills2[13] = 'AHtc'
            set skills2[14] = 'AHbh'
            set skills2[15] = 'AHtb'
            set skills2[16] = 'AHtc'
            set skills2[17] = 'AHbh'
            set skills2[18] = 'AHtb'
            set skills2[19] = 'AHtc'
            set skills2[20] = 'AHbh'
        endif
    elseif (order == 3) then
        set hero_id3 = heroid
        if (heroid == 'HH01') then
            set skills3[ 1] = 'AHhb'
            set skills3[ 2] = 'AHds'
            set skills3[ 3] = 'AHad'
            set skills3[ 4] = 'AHhb'
            set skills3[ 5] = 'AHds'
            set skills3[ 6] = 'AHre'
            set skills3[ 7] = 'AHad'
            set skills3[ 8] = 'AHhb'
            set skills3[ 9] = 'AHds'
            set skills3[10] = 'AHad'
            set skills3[11] = 'AHhb'
            set skills3[12] = 'AHre'
            set skills3[13] = 'AHds'
            set skills3[14] = 'AHad'
            set skills3[15] = 'AHhb'
            set skills3[16] = 'AHds'
            set skills3[17] = 'AHad'
            set skills3[18] = 'AHhb'
            set skills3[19] = 'AHds'
            set skills3[20] = 'AHad'
        elseif (heroid == 'HH02') then
            set skills3[ 1] = 'AHbz'
            set skills3[ 2] = 'HA01'
            set skills3[ 3] = 'AHab'
            set skills3[ 4] = 'AHbz'
            set skills3[ 5] = 'HA01'
            set skills3[ 6] = 'AHmt'
            set skills3[ 7] = 'AHab'
            set skills3[ 8] = 'AHbz'
            set skills3[ 9] = 'HA01'
            set skills3[10] = 'AHab'
            set skills3[11] = 'AHbz'
            set skills3[12] = 'AHmt'
            set skills3[13] = 'HA01'
            set skills3[14] = 'AHab'
            set skills3[15] = 'AHbz'
            set skills3[16] = 'HA01'
            set skills3[17] = 'AHab'
            set skills3[18] = 'AHbz'
            set skills3[19] = 'HA01'
            set skills3[20] = 'AHab'
        elseif (heroid == 'HH03') then
            set skills3[ 1] = 'ANmo'
            set skills3[ 2] = 'A083'
            set skills3[ 3] = 'A084'
            set skills3[ 4] = 'ANmo'
            set skills3[ 5] = 'A083'
            set skills3[ 6] = 'AHpx'
            set skills3[ 7] = 'A084'
            set skills3[ 8] = 'ANmo'
            set skills3[ 9] = 'A083'
            set skills3[10] = 'A084'
            set skills3[11] = 'ANmo'
            set skills3[12] = 'AHpx'
            set skills3[13] = 'A083'
            set skills3[14] = 'A084'
            set skills3[15] = 'ANmo'
            set skills3[16] = 'A083'
            set skills3[17] = 'A084'
            set skills3[18] = 'ANmo'
            set skills3[19] = 'A083'
            set skills3[20] = 'A084'
        elseif (heroid == 'Hmkg') then
            set skills3[ 1] = 'AHtb'
            set skills3[ 2] = 'AHtc'
            set skills3[ 3] = 'AHbh'
            set skills3[ 4] = 'AHtb'
            set skills3[ 5] = 'AHtc'
            set skills3[ 6] = 'AHav'
            set skills3[ 7] = 'AHbh'
            set skills3[ 8] = 'AHtb'
            set skills3[ 9] = 'AHtc'
            set skills3[10] = 'AHbh'
            set skills3[11] = 'AHtb'
            set skills3[12] = 'AHav'
            set skills3[13] = 'AHtc'
            set skills3[14] = 'AHbh'
            set skills3[15] = 'AHtb'
            set skills3[16] = 'AHtc'
            set skills3[17] = 'AHbh'
            set skills3[18] = 'AHtb'
            set skills3[19] = 'AHtc'
            set skills3[20] = 'AHbh'
        endif
    endif
endfunction

//===========================================================================
// Selects hero IDs for three possible heroes
//===========================================================================
function SelectHeroes takes nothing returns nothing
    local integer roll = GetRandomInt(1,100)
    //1
    if (roll <= 4) then //1
        call SetHero( 1, 'HH01' )
        call SetHero( 2, 'HH02' )
        call SetHero( 3, 'HH03' )
    //2
    elseif (roll <= 8) then
        call SetHero( 1, 'HH01' )
        call SetHero( 2, 'HH02' )
        call SetHero( 3, 'Hmkg' )
    //3
    elseif (roll <= 12) then
        call SetHero( 1, 'HH01' )
        call SetHero( 2, 'HH03' )
        call SetHero( 3, 'HH02' )
    //4
    elseif (roll <= 16) then
        call SetHero( 1, 'HH01' )
        call SetHero( 2, 'HH03' )
        call SetHero( 3, 'Hmkg' )
    //5
    elseif (roll <= 20) then
        call SetHero( 1, 'HH01' )
        call SetHero( 2, 'Hmkg' )
        call SetHero( 3, 'HH02' )
    //6
    elseif (roll <= 24) then
        call SetHero( 1, 'HH01' )
        call SetHero( 2, 'Hmkg' )
        call SetHero( 3, 'HH03' )
    //7
    elseif (roll <= 28) then
        call SetHero( 1, 'HH02' )
        call SetHero( 2, 'HH01' )
        call SetHero( 3, 'HH03' )
    //8
    elseif (roll <= 32) then
        call SetHero( 1, 'HH02' )
        call SetHero( 2, 'HH01' )
        call SetHero( 3, 'Hmkg' )
    //9
    elseif (roll <= 36) then
        call SetHero( 1, 'HH02' )
        call SetHero( 2, 'HH03' )
        call SetHero( 3, 'HH01' )
    //10
    elseif (roll <= 40) then
        call SetHero( 1, 'HH02' )
        call SetHero( 2, 'HH03' )
        call SetHero( 3, 'Hmkg' )
    //11
    elseif (roll <= 44) then
        call SetHero( 1, 'HH02' )
        call SetHero( 2, 'Hmkg' )
        call SetHero( 3, 'HH01' )
    //12
    elseif (roll <= 48) then
        call SetHero( 1, 'HH02' )
        call SetHero( 2, 'Hmkg' )
        call SetHero( 3, 'HH03' )
    //13
    elseif (roll <= 52) then
        call SetHero( 1, 'HH03' )
        call SetHero( 2, 'HH01' )
        call SetHero( 3, 'HH02' )
    //14
    elseif (roll <= 56) then
        call SetHero( 1, 'HH03' )
        call SetHero( 2, 'HH01' )
        call SetHero( 3, 'Hmkg' )
    //15
    elseif (roll <= 60) then
        call SetHero( 1, 'HH03' )
        call SetHero( 2, 'HH02' )
        call SetHero( 3, 'HH01' )
    //16
    elseif (roll <= 64) then
        call SetHero( 1, 'HH03' )
        call SetHero( 2, 'HH02' )
        call SetHero( 3, 'Hmkg' )
    //17
    elseif (roll <= 68) then
        call SetHero( 1, 'HH03' )
        call SetHero( 2, 'Hmkg' )
        call SetHero( 3, 'HH01' )
    //18
    elseif (roll <= 72) then
        call SetHero( 1, 'HH03' )
        call SetHero( 2, 'Hmkg' )
        call SetHero( 3, 'HH02' )
    //19
    elseif (roll <= 76) then
        call SetHero( 1, 'Hmkg' )
        call SetHero( 2, 'HH01' )
        call SetHero( 3, 'HH02' )
    //20
    elseif (roll <= 80) then
        call SetHero( 1, 'Hmkg' )
        call SetHero( 2, 'HH01' )
        call SetHero( 3, 'HH03' )
    //21
    elseif (roll <= 84) then
        call SetHero( 1, 'Hmkg' )
        call SetHero( 2, 'HH02' )
        call SetHero( 3, 'HH01' )
    //22
    elseif (roll <= 88) then
        call SetHero( 1, 'Hmkg' )
        call SetHero( 2, 'HH02' )
        call SetHero( 3, 'HH03' )
    //23
    elseif (roll <= 92) then
        call SetHero( 1, 'Hmkg' )
        call SetHero( 2, 'HH03' )
        call SetHero( 3, 'HH01' )
    //24
    else
        call SetHero( 1, 'Hmkg' )
        call SetHero( 2, 'HH03' )
        call SetHero( 3, 'HH02' )
    endif
endfunction

//===========================================================================
// Returns the hero skill for the given hero and level
//===========================================================================
function ChooseHeroSkill takes nothing returns integer
    local integer curHero = GetHeroId()
    local integer level = GetHeroLevelAI()

    if (level > max_hero_level) then
        set max_hero_level = level
    endif

    if (curHero == hero_id) then
        return skills1[level]
    elseif (curHero == hero_id2) then
        return skills2[level]
    elseif (curHero == hero_id3) then
        return skills3[level]
    endif
    return 0
endfunction

//***************************************************************************
//*
//*  Building and Harvesting
//*
//***************************************************************************

//===========================================================================
// Specifies building priorities for workers
//===========================================================================
function BuildPriorities takes nothing returns nothing
    local integer mine = TownWithMine()
    if (gCond_BuildTownHall) then
        call SetBuildAll( BUILD_UNIT, 1, 'hb01', -1 )
    endif
    if (gCond_HeroFirst) then
        call SetBuildAll( BUILD_UNIT, 1, hero_id, -1 )
    endif
    if (gCond_HeroSecond) then
        call SetBuildAll( BUILD_UNIT, 1, hero_id2, -1 )
    endif
    if (gCond_HeroThird) then
        call SetBuildAll( BUILD_UNIT, 1, hero_id3, -1 )
    endif
    call SetBuildAll( BUILD_UNIT, 1, 'hu01', -1 )
    if (gCond_Workers1) then
        call SetBuildAll( BUILD_UNIT, 2, 'hu01', -1 )
        call SetBuildAll( BUILD_UNIT, 3, 'hu01', -1 )
        call SetBuildAll( BUILD_UNIT, 4, 'hu01', -1 )
        call SetBuildAll( BUILD_UNIT, 5, 'hu01', -1 )
    endif
    if (gCond_BuildFarms) then
        call SetBuildAll( BUILD_UNIT, 1, 'hb04', -1 )
    endif
    if (gCond_Workers1) then
        call SetBuildAll( BUILD_UNIT, 6, 'hu01', -1 )
    endif
    if (gCond_BuildGeneral) then
        call SetBuildAll( BUILD_UNIT, 1, 'hb05', -1 )
    endif
    if (gCond_Workers1) then
        call SetBuildAll( BUILD_UNIT, 7, 'hu01', -1 )
    endif
    if (gCond_BuildGeneral) then
        call SetBuildAll( BUILD_UNIT, 1, 'hb06', -1 )
    endif
    if (gCond_Workers1) then
        call SetBuildAll( BUILD_UNIT, 8, 'hu01', -1 )
    endif
    if (gCond_BuildGeneral) then
        call SetBuildAll( BUILD_UNIT, 1, 'hb11', -1 )
    endif
    if (gCond_Workers1) then
        call SetBuildAll( BUILD_UNIT, 9, 'hu01', -1 )
    endif
    if (gCond_TrainFootmans) then
        call SetBuildAll( BUILD_UNIT, 1, 'hu02', -1 )
    endif
    if (gCond_Workers1) then
        call SetBuildAll( BUILD_UNIT, 10, 'hu01', -1 )
    endif
    if (gCond_TrainFootmans) then
        call SetBuildAll( BUILD_UNIT, 2, 'hu02', -1 )
    endif
    if (gCond_BuildFarms) then
        call SetBuildAll( BUILD_UNIT, 2, 'hb04', -1 )
    endif
    if (gCond_Workers1) then
        call SetBuildAll( BUILD_UNIT, 11, 'hu01', -1 )
    endif
    if (gCond_BuildGeneral) then
        call SetBuildAll( BUILD_UNIT, 2, 'hb06', -1 )
    endif
    if (gCond_BuildFarms) then
        call SetBuildAll( BUILD_UNIT, 3, 'hb04', -1 )
    endif
    if (gCond_TrainFootmans) then
        call SetBuildAll( BUILD_UNIT, 3, 'hu02', -1 )
    endif
    if (gCond_Workers1) then
        call SetBuildAll( BUILD_UNIT, 12, 'hu01', -1 )
    endif
    if (gCond_TrainFootmans) then
        call SetBuildAll( BUILD_UNIT, 4, 'hu02', -1 )
    endif
    if (gCond_BuildGeneral) then
        call SetBuildAll( BUILD_UNIT, 1, 'hb07', -1 )
    endif
    if (gCond_BuildFarms) then
        call SetBuildAll( BUILD_UNIT, 4, 'hb04', -1 )
    endif
    if (gCond_TrainFootmans) then
        call SetBuildAll( BUILD_UNIT, 5, 'hu02', -1 )
    endif
    if (gCond_BuildGeneral) then
        call SetBuildAll( BUILD_UNIT, 1, 'hb08', -1 )
    endif
    call SetBuildAll( BUILD_UPGRADE, 1, 'Rhde', -1 )
    call SetBuildAll( BUILD_UNIT, 1, 'hu04', -1 )
    call SetBuildAll( BUILD_UPGRADE, 1, 'Rhme', -1 )
    call SetBuildAll( BUILD_UNIT, 2, 'hu04', -1 )
    call SetBuildAll( BUILD_UPGRADE, 1, 'Rhra', -1 )
    call SetBuildAll( BUILD_UNIT, 3, 'hu04', -1 )
    call SetBuildAll( BUILD_UPGRADE, 1, 'Rhar', -1 )
    call SetBuildAll( BUILD_UNIT, 4, 'hu04', -1 )
    call SetBuildAll( BUILD_UPGRADE, 1, 'Rhla', -1 )
    call SetBuildAll( BUILD_UNIT, 5, 'hu04', -1 )
    call SetBuildAll( BUILD_UPGRADE, 1, 'Rhac', -1 )
    call SetBuildAll( BUILD_UNIT, 6, 'hu04', -1 )
    call SetBuildAll( BUILD_UPGRADE, 1, 'Rhlh', -1 )
    if (gCond_TotalTowers) then
        call SetBuildAll( BUILD_UNIT, 1, 'hdb0', -1 )
    endif
    if (gCond_Workers1) then
        call SetBuildAll( BUILD_UNIT, 13, 'hu01', -1 )
    endif
    if (gCond_BuildFarms) then
        call SetBuildAll( BUILD_UNIT, 5, 'hb04', -1 )
    endif
    call SetBuildAll( BUILD_UNIT, 1, 'hdb1', -1 )
    if (gCond_Workers1) then
        call SetBuildAll( BUILD_UNIT, 14, 'hu01', -1 )
    endif
    if (gCond_BuildFarms) then
        call SetBuildAll( BUILD_UNIT, 6, 'hb04', -1 )
    endif
    call SetBuildAll( BUILD_UNIT, 1, 'hdb3', -1 )
    if (gCond_BuildFarms) then
        call SetBuildAll( BUILD_UNIT, 7, 'hb04', -1 )
    endif
    if (gCond_Workers1) then
        call SetBuildAll( BUILD_UNIT, 15, 'hu01', -1 )
    endif
    if (gCond_TrainFootmans) then
        call SetBuildAll( BUILD_UNIT, 6, 'hu02', -1 )
        call SetBuildAll( BUILD_UNIT, 7, 'hu02', -1 )
        call SetBuildAll( BUILD_UNIT, 8, 'hu02', -1 )
        call SetBuildAll( BUILD_UNIT, 9, 'hu02', -1 )
        call SetBuildAll( BUILD_UNIT, 10, 'hu02', -1 )
    endif
    call SetBuildAll( BUILD_UNIT, 7, 'hu04', -1 )
    call SetBuildAll( BUILD_UNIT, 8, 'hu04', -1 )
    call SetBuildAll( BUILD_UNIT, 9, 'hu04', -1 )
    call SetBuildAll( BUILD_UNIT, 10, 'hu04', -1 )
    call SetBuildAll( BUILD_UPGRADE, 2, 'Rhme', -1 )
    call SetBuildAll( BUILD_UPGRADE, 2, 'Rhar', -1 )
    call SetBuildAll( BUILD_UPGRADE, 2, 'Rhra', -1 )
    call SetBuildAll( BUILD_UPGRADE, 2, 'Rhla', -1 )
    call SetBuildAll( BUILD_UPGRADE, 2, 'Rhac', -1 )
    if (gCond_NeedExp2) then
        call BuildExpansion( 'hb01', 'hb01' )
    endif
    if (gCond_Workers2) then
        call SetBuildAll( BUILD_UNIT, 16, 'hu01', -1 )
        call SetBuildAll( BUILD_UNIT, 17, 'hu01', -1 )
        call SetBuildAll( BUILD_UNIT, 18, 'hu01', -1 )
        call SetBuildAll( BUILD_UNIT, 19, 'hu01', -1 )
        call SetBuildAll( BUILD_UNIT, 20, 'hu01', -1 )
        call SetBuildAll( BUILD_UNIT, 21, 'hu01', -1 )
        call SetBuildAll( BUILD_UNIT, 22, 'hu01', -1 )
        call SetBuildAll( BUILD_UNIT, 23, 'hu01', -1 )
        call SetBuildAll( BUILD_UNIT, 24, 'hu01', -1 )
        call SetBuildAll( BUILD_UNIT, 25, 'hu01', -1 )
        call SetBuildAll( BUILD_UNIT, 26, 'hu01', -1 )
        call SetBuildAll( BUILD_UNIT, 27, 'hu01', -1 )
        call SetBuildAll( BUILD_UNIT, 28, 'hu01', -1 )
        call SetBuildAll( BUILD_UNIT, 29, 'hu01', -1 )
        call SetBuildAll( BUILD_UNIT, 30, 'hu01', -1 )
    endif
    call SetBuildAll( BUILD_UNIT, 2, 'hdb1', -1 )
    call SetBuildAll( BUILD_UNIT, 2, 'hdb3', -1 )
    if (gCond_BuildKeep) then
        call SetBuildAll( BUILD_UNIT, 1, 'hb02', -1 )
    endif
    call SetBuildAll( BUILD_UPGRADE, 1, 'Rhri', -1 )
    call SetBuildAll( BUILD_UPGRADE, 3, 'Rhme', -1 )
    call SetBuildAll( BUILD_UPGRADE, 3, 'Rhra', -1 )
    call SetBuildAll( BUILD_UPGRADE, 3, 'Rhar', -1 )
    call SetBuildAll( BUILD_UPGRADE, 3, 'Rhla', -1 )
    call SetBuildAll( BUILD_UPGRADE, 3, 'Rhac', -1 )
    if (gCond_BuildGeneral) then
        call SetBuildAll( BUILD_UNIT, 1, 'hb09', -1 )
        call SetBuildAll( BUILD_UNIT, 2, 'hb09', -1 )
    endif
    call SetBuildAll( BUILD_UNIT, 1, 'hu07', -1 )
    call SetBuildAll( BUILD_UNIT, 2, 'hu07', -1 )
    call SetBuildAll( BUILD_UPGRADE, 1, 'Rhpt', -1 )
    call SetBuildAll( BUILD_UNIT, 3, 'hu07', -1 )
    call SetBuildAll( BUILD_UNIT, 4, 'hu07', -1 )
    if (gCond_BuildFarms) then
        call SetBuildAll( BUILD_UNIT, 8, 'hb04', -1 )
    endif
    call SetBuildAll( BUILD_UNIT, 1, 'hu08', -1 )
    call SetBuildAll( BUILD_UNIT, 2, 'hu08', -1 )
    call SetBuildAll( BUILD_UPGRADE, 1, 'Rhst', -1 )
    call SetBuildAll( BUILD_UNIT, 3, 'hu08', -1 )
    call SetBuildAll( BUILD_UNIT, 4, 'hu08', -1 )
    if (gCond_BuildFarms) then
        call SetBuildAll( BUILD_UNIT, 9, 'hb04', -1 )
    endif
    call SetBuildAll( BUILD_UNIT, 1, 'hu06', -1 )
    call SetBuildAll( BUILD_UNIT, 2, 'hu06', -1 )
    call SetBuildAll( BUILD_UNIT, 3, 'hu06', -1 )
    if (gCond_BuildFarms) then
        call SetBuildAll( BUILD_UNIT, 10, 'hb04', -1 )
    endif
    call SetBuildAll( BUILD_UPGRADE, 1, 'Rhss', -1 )
    if (gCond_BuildFarms) then
        call SetBuildAll( BUILD_UNIT, 11, 'hb04', -1 )
    endif
    call SetBuildAll( BUILD_UPGRADE, 1, 'Rhse', -1 )
    if (gCond_BuildGeneral) then
        call SetBuildAll( BUILD_UNIT, 1, 'h026', -1 )
        call SetBuildAll( BUILD_UNIT, 2, 'h026', -1 )
    endif
    if (gCond_BuildFarms) then
        call SetBuildAll( BUILD_UNIT, 12, 'hb04', -1 )
    endif
    call SetBuildAll( BUILD_UNIT, 1, 'h01E', -1 )
    call SetBuildAll( BUILD_UNIT, 2, 'h01E', -1 )
    call SetBuildAll( BUILD_UNIT, 3, 'h01E', -1 )
    call SetBuildAll( BUILD_UPGRADE, 1, 'Rhfc', -1 )
    call SetBuildAll( BUILD_UNIT, 4, 'h01E', -1 )
    call SetBuildAll( BUILD_UNIT, 5, 'h01E', -1 )
    if (gCond_BuildFarms) then
        call SetBuildAll( BUILD_UNIT, 13, 'hb04', -1 )
    endif
    call SetBuildAll( BUILD_UNIT, 1, 'h00N', -1 )
    call SetBuildAll( BUILD_UNIT, 2, 'h00N', -1 )
    call SetBuildAll( BUILD_UPGRADE, 1, 'Rhfl', -1 )
    if (gCond_BuildFarms) then
        call SetBuildAll( BUILD_UNIT, 14, 'hb04', -1 )
    endif
    if (gCond_BuildGeneral) then
        call SetBuildAll( BUILD_UNIT, 1, 'hb10', -1 )
        call SetBuildAll( BUILD_UNIT, 2, 'hb10', -1 )
    endif
    if (gCond_BuildFarms) then
        call SetBuildAll( BUILD_UNIT, 15, 'hb04', -1 )
    endif
    call SetBuildAll( BUILD_UNIT, 1, 'hu05', -1 )
    call SetBuildAll( BUILD_UNIT, 2, 'hu05', -1 )
    call SetBuildAll( BUILD_UNIT, 3, 'hu05', -1 )
    if (gCond_BuildFarms) then
        call SetBuildAll( BUILD_UNIT, 16, 'hb04', -1 )
    endif
    if (gCond_NeedExp3) then
        call BuildExpansion( 'hb01', 'hb01' )
    endif
    if (gCond_Workers3) then
        call SetBuildAll( BUILD_UNIT, 31, 'hu01', -1 )
        call SetBuildAll( BUILD_UNIT, 32, 'hu01', -1 )
        call SetBuildAll( BUILD_UNIT, 33, 'hu01', -1 )
        call SetBuildAll( BUILD_UNIT, 34, 'hu01', -1 )
        call SetBuildAll( BUILD_UNIT, 35, 'hu01', -1 )
    endif
    call SetBuildAll( BUILD_UNIT, 1, 'hdb2', -1 )
    if (gCond_BuildCastle) then
        call SetBuildAll( BUILD_UNIT, 1, 'hb03', -1 )
    endif
    if (gCond_BuildFarms) then
        call SetBuildAll( BUILD_UNIT, 17, 'hb04', -1 )
    endif
    call SetBuildAll( BUILD_UPGRADE, 4, 'Rhme', -1 )
    call SetBuildAll( BUILD_UPGRADE, 4, 'Rhra', -1 )
    call SetBuildAll( BUILD_UPGRADE, 4, 'Rhar', -1 )
    call SetBuildAll( BUILD_UPGRADE, 4, 'Rhla', -1 )
    call SetBuildAll( BUILD_UPGRADE, 4, 'Rhac', -1 )
    call SetBuildAll( BUILD_UPGRADE, 2, 'Rhri', -1 )
    call SetBuildAll( BUILD_UPGRADE, 1, 'Rhan', -1 )
    call SetBuildAll( BUILD_UPGRADE, 1, 'Rhsb', -1 )
    call SetBuildAll( BUILD_UPGRADE, 2, 'Rhpt', -1 )
    call SetBuildAll( BUILD_UPGRADE, 2, 'Rhst', -1 )
    call SetBuildAll( BUILD_UPGRADE, 1, 'Rhfs', -1 )
    call SetBuildAll( BUILD_UPGRADE, 1, 'Rhgb', -1 )
    call SetBuildAll( BUILD_UPGRADE, 1, 'Rhcd', -1 )
    if (gCond_BuildFarms) then
        call SetBuildAll( BUILD_UNIT, 18, 'hb04', -1 )
    endif
    call SetBuildAll( BUILD_UNIT, 1, 'hu03', -1 )
    call SetBuildAll( BUILD_UNIT, 2, 'hu03', -1 )
    call SetBuildAll( BUILD_UNIT, 3, 'hu03', -1 )
    call SetBuildAll( BUILD_UNIT, 4, 'hu03', -1 )
    call SetBuildAll( BUILD_UNIT, 5, 'hu03', -1 )
    if (gCond_BuildFarms) then
        call SetBuildAll( BUILD_UNIT, 19, 'hb04', -1 )
    endif
    call SetBuildAll( BUILD_UNIT, 1, 'h024', -1 )
    call SetBuildAll( BUILD_UNIT, 2, 'h024', -1 )
    call SetBuildAll( BUILD_UPGRADE, 1, 'Rhrt', -1 )
    call SetBuildAll( BUILD_UNIT, 1, 'h025', -1 )
    call SetBuildAll( BUILD_UNIT, 2, 'h025', -1 )
    call SetBuildAll( BUILD_UNIT, 3, 'h025', -1 )
    call SetBuildAll( BUILD_UNIT, 4, 'h025', -1 )
    call SetBuildAll( BUILD_UPGRADE, 1, 'Rhhb', -1 )
    call SetBuildAll( BUILD_UPGRADE, 5, 'Rhme', -1 )
    call SetBuildAll( BUILD_UPGRADE, 5, 'Rhra', -1 )
    call SetBuildAll( BUILD_UPGRADE, 5, 'Rhar', -1 )
    call SetBuildAll( BUILD_UPGRADE, 5, 'Rhac', -1 )
    call SetBuildAll( BUILD_UPGRADE, 5, 'Rhla', -1 )
    call SetBuildAll( BUILD_UPGRADE, 3, 'Rhpt', -1 )
    call SetBuildAll( BUILD_UPGRADE, 3, 'Rhst', -1 )
    call SetBuildAll( BUILD_UPGRADE, 2, 'Rhhb', -1 )
    call SetBuildAll( BUILD_UPGRADE, 6, 'Rhme', -1 )
    call SetBuildAll( BUILD_UPGRADE, 6, 'Rhra', -1 )
    call SetBuildAll( BUILD_UPGRADE, 6, 'Rhar', -1 )
    call SetBuildAll( BUILD_UPGRADE, 6, 'Rhac', -1 )
    call SetBuildAll( BUILD_UPGRADE, 6, 'Rhla', -1 )
    call SetBuildAll( BUILD_UNIT, 6, 'hu03', -1 )
    call SetBuildAll( BUILD_UNIT, 7, 'hu03', -1 )
    call SetBuildAll( BUILD_UNIT, 8, 'hu03', -1 )
    call SetBuildAll( BUILD_UNIT, 9, 'hu03', -1 )
    call SetBuildAll( BUILD_UNIT, 10, 'hu03', -1 )
endfunction

//===========================================================================
// Specifies harvesting priorities for workers
//===========================================================================
function HarvestPriorities takes nothing returns nothing
    local integer mine = TownWithMine()
    local integer allGold = GetUnitCountDone('hu01')
    local integer allWood = GetUnitCountDone('hu01')
    local integer numWorkers
    set numWorkers = 5
    call HarvestGold( mine + 0, numWorkers )
    set numWorkers = 5
    call HarvestGold( mine + 1, numWorkers )
    set numWorkers = 5
    call HarvestGold( mine + 2, numWorkers )
    set numWorkers = 35
    call HarvestWood( mine, numWorkers )
endfunction

//===========================================================================
// Determines all building and harvesting assignments for workers
//===========================================================================
function WorkerAssignment takes nothing returns nothing
    loop
        call UpdateConditions(  )

        // Harvesting
        call ClearHarvestAI(  )
        call HarvestPriorities(  )

        // Building
        call InitBuildArray(  )
        call BuildPriorities(  )

        call Sleep( 2 )
    endloop
endfunction

//***************************************************************************
//*
//*  Attacking
//*
//***************************************************************************

//===========================================================================
// Returns true if the minimum forces for an attack exist
//===========================================================================
function HaveMinimumAttackers takes nothing returns boolean
    local integer count

    // Check for attack wave limit
    if (attackWave > 1) then
        return false
    endif

    // Attack Group: Minimum Units
    if (gCond_TrainFootmans) then
        set count = GetUnitCountDone( 'hu02' )
        if (count < 5) then
            return false
        endif
    endif
    if (gCond_MinimumKnights) then
        set count = GetUnitCountDone( 'hu03' )
        if (count < 3) then
            return false
        endif
    endif
    return true
endfunction

//===========================================================================
// Assigns units to attack based on the given attack group
//===========================================================================
function PrepareAttackGroup takes integer groupID returns nothing
    local integer all

    // Attack Group #1: All Units
    if (groupID == 1) then
        set all = GetUnitCountDone( hero_id )
        call AddAttackUnit( all, all, hero_id )
        set all = GetUnitCountDone( hero_id2 )
        call AddAttackUnit( all, all, hero_id2 )
        set all = GetUnitCountDone( hero_id3 )
        call AddAttackUnit( all, all, hero_id3 )
        if (gCond_AttackWithFootmen) then
            set all = GetUnitCountDone( 'hu02' )
            call AddAttackUnit( all, all, 'hu02' )
        endif
        if (gCond_AttackWithRiflemen) then
            set all = GetUnitCountDone( 'hu04' )
            call AddAttackUnit( all, all, 'hu04' )
        endif
        if (gCond_AttackWithKnights) then
            set all = GetUnitCountDone( 'hu03' )
            call AddAttackUnit( all, all, 'hu03' )
        endif
        if (gCond_AttackWithChaplains) then
            set all = GetUnitCountDone( 'hu07' )
            call AddAttackUnit( all, all, 'hu07' )
        endif
        if (gCond_AttackWithSorceress) then
            set all = GetUnitCountDone( 'hu08' )
            call AddAttackUnit( all, all, 'hu08' )
        endif
        if (gCond_AttackWithEvokers) then
            set all = GetUnitCountDone( 'hu06' )
            call AddAttackUnit( all, all, 'hu06' )
        endif
        if (gCond_AttackWithFlyingMachine) then
            set all = GetUnitCountDone( 'h01E' )
            call AddAttackUnit( all, all, 'h01E' )
        endif
        if (gCond_AttackWithMortarTeams) then
            set all = GetUnitCountDone( 'h00N' )
            call AddAttackUnit( all, all, 'h00N' )
        endif
        if (gCond_AttackWithSteamTanks) then
            set all = GetUnitCountDone( 'h024' )
            call AddAttackUnit( all, all, 'h024' )
        endif
        if (gCond_AttackWithPegasuss) then
            set all = GetUnitCountDone( 'hu05' )
            call AddAttackUnit( all, all, 'hu05' )
        endif
        if (gCond_AttackWithGryphonRider) then
            set all = GetUnitCountDone( 'h025' )
            call AddAttackUnit( all, all, 'h025' )
        endif

        // Attack Group #2: Minimum Units
    elseif (groupID == 2) then
        set all = GetUnitCountDone( hero_id )
        call AddAttackUnit( all, all, hero_id )
        if (gCond_TrainFootmans) then
            set all = GetUnitCountDone( 'hu02' )
            call AddAttackUnit( all, -1,  'hu02' )
        endif
        if (gCond_MinimumKnights) then
            set all = GetUnitCountDone( 'hu03' )
            call AddAttackUnit( all, -1,  'hu03' )
        endif

    endif
endfunction

//===========================================================================
// Prepares an attack group based on the current attack wave
//===========================================================================
function PrepareForces takes nothing returns nothing
    if (attackWave == 1) then
        call PrepareAttackGroup( 1 )
    endif
endfunction

//===========================================================================
// Sleep delays for each attack wave
//===========================================================================
function AttackWaveDelay takes integer inWave returns nothing
    if (inWave < nextDelay) then
        return
    endif

    set nextDelay = inWave + 1
endfunction

//===========================================================================
// Advances attack wave counter
//===========================================================================
function AttackWaveUpdate takes nothing returns nothing
    call AttackWaveDelay( attackWave )
    set attackWave = attackWave + 1
    if (attackWave > 1) then
        set attackWave = 1
        set nextDelay = attackWave + 1
    endif
endfunction

//===========================================================================
// Basic attack functionality
//===========================================================================
function AttackTarget takes unit target, boolean addAlliance returns nothing
    if (target == null) then
        return
    endif
    if (addAlliance) then
        call SetAllianceTarget( target )
    endif
    call FormGroup( 3, true )
    call AttackMoveKillA( target )
    if (not addAlliance) then
        call SetAllianceTarget( null )
    endif
endfunction

//===========================================================================
// Initiates an attack based on target priorities
//===========================================================================
function LaunchAttack takes nothing returns nothing
    local unit target = null
    local boolean setAlly = true

    // Don't launch any attack while town is threatened
    if (TownThreatened()) then
        call Sleep( 2 )
        return
    endif

    //STANDARD AND DEFENDER
    //----------------------------------------------------------------------------------------------------
    /*
    if (Comport2 <= 50) then
        //Target Priority #1
        // if (RushCom2 <= 50) then
        //     if (gCond_RushForces) then
        //         if (target == null) then
        //             set target = GetMegaTarget()
        //         endif
        //     endif
        // endif

        // Target Priority #2
        if (gCond_NeedExpansionRequiere) then
            if (target == null) then
                set target = GetExpansionFoe()
                if (target != null) then
                    set take_exp = false
                endif
            endif
        endif

        // Target Priority #3
        if (gCond_AtacarAEnemigo) then
            if (target == null) then
                set target = GetAllianceTarget()
                if (target != null) then
                    set setAlly = false
                endif
            endif
        

            // Target Priority #4
            if (target == null) then
                set target = GetMegaTarget()
            endif

        
            // Target Priority #5
            if (target == null) then
                set target = GetEnemyExpansion()
                if (target == null) then
                    call StartGetEnemyBase(  )
                    loop
                        exitwhen (not WaitGetEnemyBase())
                        call SuicideSleep( 1 )
                    endloop
                    set target = GetEnemyBase()
                endif
            endif

            // Target Priority #6
            if (target == null) then
                set target = GetEnemyExpansion()
            endif
        endif

        // Target Priority #7
        if (gCond_Farmeo_avanzado) then
            if (target == null) then
                set target = GetCreepCamp( 21, 100, true )
            endif
        endif

        // Target Priority #8
        if (gCond_Farmeo_Mediano) then
            if (target == null) then
                set target = GetCreepCamp( 11, 20, true )
            endif
        endif

        // Target Priority #9
        if (target == null) then
            set target = GetCreepCamp( 0, 10, false )
        endif
        //RUSH
        //----------------------------------------------------------------------------------------------------
    else   
    */    
    // Target Priority #1
    if (gCond_NeedExpansionRequiere) then
        if (target == null) then
            set target = GetExpansionFoe()
            if (target != null) then
                set take_exp = false
            endif
        endif
    endif
    
    //Target Priority #2
    if (target == null) then
        set target = GetAllianceTarget()
        if (target != null) then
            set setAlly = false
        endif
    endif

    if (target == null) then
        set target = GetMegaTarget()
    endif

    if (target == null) then
        set target = GetEnemyExpansion()
        if (target == null) then
            call StartGetEnemyBase(  )
            loop
                exitwhen (not WaitGetEnemyBase())
                call SuicideSleep( 1 )
            endloop
            set target = GetEnemyBase()
        endif
    endif

    if (target == null) then
        set target = GetEnemyExpansion()
    endif

    // Target Priority #3
    if (gCond_AtacarAEnemigo) then
        if (target == null) then
            set target = GetAllianceTarget()
            if (target != null) then
                set setAlly = false
            endif
        endif
    

        // Target Priority #4
        if (target == null) then
            set target = GetMegaTarget()
        endif

    
        // Target Priority #5
        if (target == null) then
            set target = GetEnemyExpansion()
            if (target == null) then
                call StartGetEnemyBase(  )
                loop
                    exitwhen (not WaitGetEnemyBase())
                    call SuicideSleep( 1 )
                endloop
                set target = GetEnemyBase()
            endif
        endif

        // Target Priority #6
        if (target == null) then
            set target = GetEnemyExpansion()
        endif
    endif

    // Target Priority #7
    if (gCond_Farmeo_avanzado) then
        if (target == null) then
            set target = GetCreepCamp( 21, 100, true )
        endif
    endif

    // Target Priority #8
    if (gCond_Farmeo_Mediano) then
        if (target == null) then
            set target = GetCreepCamp( 11, 20, true )
        endif
    endif

        // Target Priority #9
        // if (target == null) then
        //     set target = GetCreepCamp( 0, 10, false )
        // endif
        
    //endif
    // Attack the target and increment attack wave
    if (target != null) then
        call AttackTarget( target, setAlly )
        call AttackWaveUpdate(  )
    else
        // If no target was found, sleep a bit before trying again
        call Sleep( 0.1 )
    endif
endfunction

//===========================================================================
// Determines all attacking assignments
//===========================================================================
function AttackAssignment takes nothing returns nothing
    call StaggerSleep( 0, 2 )
    if (attackWave == 1) then
        call AttackWaveDelay( 0 )
    endif
    loop
        loop
            call UpdateConditions(  )
            exitwhen (HaveMinimumAttackers() and not CaptainRetreating())
            call Sleep( 2 )
        endloop
        call RemoveInjuries(  )
        call ResetAttackUnits(  )
        call PrepareForces(  )
        call LaunchAttack(  )
    endloop
endfunction

//***************************************************************************
//*
//*  Main Entry Point
//*
//***************************************************************************

//===========================================================================
function main takes nothing returns nothing
    call InitAI(  )
    call SetPlayerName( ai_player, "Kingdom of Lordaeron" )
    call InitOptions(  )
    call SelectHeroes(  )
    call CreateCaptains(  )
    call SetHeroLevels( function ChooseHeroSkill )

    call Sleep( 0.1 )
    call StartThread( function WorkerAssignment )
    call StartThread( function AttackAssignment )
    call PlayGame(  )
endfunction

